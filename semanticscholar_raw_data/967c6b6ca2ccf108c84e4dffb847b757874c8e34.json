{"paperId": "967c6b6ca2ccf108c84e4dffb847b757874c8e34", "publicationVenue": {"id": "b9083d6f-6a0b-458f-b91b-ac82b9afdf3c", "name": "ACM SIGOPS Operating Systems Review", "type": "journal", "alternate_names": ["ACM SIGOPS Oper Syst Rev", "Operating Systems Review", "Oper Syst Rev"], "issn": "0163-5980", "url": "http://portal.acm.org/sigops/newsletter"}, "title": "GeoGraph", "abstract": "In many applications of graph processing, the input data is often generated from an underlying geometric point data set. However, existing high-performance graph processing frameworks assume that the input data is given as a graph. Therefore, to use these frameworks, the user must write or use external programs based on computational geometry algorithms to convert their point data set to a graph, which requires more programming effort and can also lead to performance degradation. In this paper, we present our ongoing work on the Geo- Graph framework for shared-memory multicore machines, which seamlessly supports routines for parallel geometric graph construction and parallel graph processing within the same environment. GeoGraph supports graph construction based on k-nearest neighbors, Delaunay triangulation, and b-skeleton graphs. It can then pass these generated graphs to over 25 graph algorithms. GeoGraph contains highperformance parallel primitives and algorithms implemented in C++, and includes a Python interface. We present four examples of using GeoGraph, and some experimental results showing good parallel speedups and improvements over the Higra library. We conclude with a vision of future directions for research in bridging graph and geometric data processing.", "venue": "ACM SIGOPS Operating Systems Review", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-06-02", "journal": {"name": "ACM SIGOPS Operating Systems Review", "pages": "38 - 46", "volume": "55"}, "authors": [{"authorId": "2108941353", "name": "Yiqiu Wang"}, {"authorId": "19258777", "name": "Shangdi Yu"}, {"authorId": "35221280", "name": "Laxman Dhulipala"}, {"authorId": "46964402", "name": "Yan Gu"}, {"authorId": "2045944", "name": "Julian Shun"}], "citations": [{"paperId": "f5e684b9dbfedb65471df6119739bfb63f8c99d7", "title": "Parallel Integer Sort: Theory and Practice"}, {"paperId": "9f3fd606147f4d27169a947f8deb74c56f75eecf", "title": "Fast and Space-Efficient Parallel Algorithms for Influence Maximization"}, {"paperId": "35c34d5393bc2a48511ae2ba821809562abd8632", "title": "The History and Archaeology of Hendon Sidings Enterprise Zone, Adjacent to Prospect Row, Port of Sunderland"}, {"paperId": "7e7ee64fafdb6cce884ab1def2d55359a370e473", "title": "High-Performance and Flexible Parallel Algorithms for Semisort and Related Problems"}, {"paperId": "fb740ebcdbda7094e7eed37f33ee3aa4b6a18ecb", "title": "Parallel Strong Connectivity Based on Faster Reachability"}, {"paperId": "062b7f779cec15247e14b0780b185c312aadad24", "title": "Provably Fast and Space-Efficient Parallel Biconnectivity"}, {"paperId": "c6f0e6f2d57a1790ce56bfae896f1f7fe32a11a6", "title": "Retrieving Top-N Weighted Spatial k-cliques"}, {"paperId": "ce725160f33e80105a878b663149488d4eb265b4", "title": "ParGeo: a library for parallel computational geometry"}, {"paperId": "9981ab014457c7d7f7b1614b8a55f1b24b9b46a5", "title": "Detecting Unsigned Physical Road Incidents From Driver-View Images"}, {"paperId": "ab421492ef4e33939805d0421650967fbcb47c0c", "title": "Research on Airline Route Optimization Based on Ant Colony Optimization Algorithm"}, {"paperId": "80b60f5eca84573fdcd55b8c4c8fcb0c8db360a3", "title": "Spatial Applications of Topological Data Analysis: Cities, Snowflakes, Random Structures, and Spiders Spinning Under the Influence"}]}
