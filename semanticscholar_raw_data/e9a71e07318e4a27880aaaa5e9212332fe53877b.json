{"paperId": "e9a71e07318e4a27880aaaa5e9212332fe53877b", "publicationVenue": {"id": "289bfdda-eab3-4c9a-97be-ef1e0f9ddfc0", "name": "International Symposium on Software Testing and Analysis", "type": "conference", "alternate_names": ["ISSTA", "Int Symp Softw Test Anal"], "url": "https://dl.acm.org/conference/issta"}, "title": "Evolution-aware detection of order-dependent flaky tests", "abstract": "Regression testing is an important part of the software development process but suffers from the presence of flaky tests. Flaky tests are tests that can nondeterministically pass or fail regardless of code changes. Order-dependent flaky tests are a prominent kind of flaky tests whose outcome depends on the test order in which they are run. Prior work has focused on detecting order-dependent flaky tests through rerunning all tests in different test orders on a single version of code. As code is constantly changing, rerunning all tests in different test orders after every change is costly. In this work, we propose IncIDFlakies, a technique to detect order-dependent flaky tests by analyzing code changes to detect newly-introduced order-dependent flaky tests due to those changes. Building upon existing work in iDFlakies that reruns tests in dif- ferent test orders, IncIDFlakies analyzes and selects to run only the tests that (1) are affected by the change, and (2) can potentially result in a test-order dependency among each other due to potential shared state. Running IncIDFlakies on 67 order-dependent flaky tests across changes in code in their respective projects, including the changes where they became flaky, we find that IncIDFlakies can select to run on average 65.4% of all the tests, resulting in running 68.4% of the time that baseline iDFlakies would use when running the same number of test orders with the full test suite. Furthermore, we find that IncIDFlakies can still ensure that the test orders it runs can potentially detect the order-dependent flaky tests.", "venue": "International Symposium on Software Testing and Analysis", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2022-07-18", "journal": {"name": "Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis"}, "authors": [{"authorId": "2172587139", "name": "Chengpeng Li"}, {"authorId": "40128780", "name": "A. Shi"}], "citations": [{"paperId": "3e5700be0abe9a35c24214dc0e189762d4aeddae", "title": "Systematically Producing Test Orders to Detect Order-Dependent Flaky Tests"}, {"paperId": "7ef382afec99627ca906d9135d05eedb8df61d7e", "title": "Debugging Flaky Tests using Spectrum-based Fault Localization"}, {"paperId": "72b07e6004eee667eb3ce7ce1607664b92b2a2e0", "title": "FlakyCat: Predicting Flaky Tests Categories using Few-Shot Learning"}, {"paperId": "b41cec98e8e122f755287a12fd4bac28442ee0e8", "title": "Practical Flaky Test Prediction using Common Code Evolution and Test History Data"}]}
