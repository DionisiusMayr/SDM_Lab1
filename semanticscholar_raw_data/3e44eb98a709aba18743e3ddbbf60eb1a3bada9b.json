{"paperId": "3e44eb98a709aba18743e3ddbbf60eb1a3bada9b", "publicationVenue": {"id": "5dfdcc5e-f28b-42bd-9832-bf3894169b1c", "name": "International Conference on Information Control Systems & Technologies", "type": "conference", "alternate_names": ["Int Conf Softw Test Verification Valid", "International Conference on Software Testing, Verification, and Validation", "Int Conf Inf Control Syst  Technol", "Int Conf Sens Technol", "International Conferences on Sensing Technology", "International Conference on Sensing Technology", "ICST"], "url": "http://www.wikicfp.com/cfp/program?id=1483"}, "title": "DIRTS: Dependency Injection Aware Regression Test Selection", "abstract": "Regression test selection (RTS) aims to reduce regression testing effort by selecting only those tests that are affected by introduced changes. RTS techniques are considered to be safe if they select all affected test cases. Several supposedly safe RTS tools have been developed over the past decades, lately especially for Java projects. However, recent studies have shown that state-of-the-art RTS tools for Java can become unsafe when confronted with dependency injection (DI) mechanisms: despite the widespread use of DI frameworks in Java projects, no existing technique acknowledges DI-related changes. In this paper, we analyze the reasons behind unsafe RTS behavior for DI-related changes and develop Dirts, a novel DI-aware RTS tool for Java. To counteract effects of DI on RTS, Dirts efficiently analyzes source code annotations and metadata employed by popular DI frameworks, and generates a dependency graph including edges for dynamically injected objects. We evaluate Dirts on 228 commits from 9 open-source Java projects that use DI. Our results indicate that in 33.3% of those commits DI-related changes affect some tests, and in 3.1% (7) Dirts identifies affected tests that are clearly missed by the static RTS tool STARTS. Still, Dirts is comparatively efficient and precise. We publish Dirts 1, 2 as an RTS tool that can either be used as a safety extension for existing RTS tools or as a standalone RTS solution.", "venue": "International Conference on Information Control Systems & Technologies", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-04-01", "journal": {"name": "2023 IEEE Conference on Software Testing, Verification and Validation (ICST)", "pages": "422-432"}, "authors": [{"authorId": "2218392969", "name": "Simon Hundsdorfer"}, {"authorId": "2064171309", "name": "Daniel Elsner"}, {"authorId": "144658639", "name": "A. Pretschner"}], "citations": []}
