{"paperId": "fefdd694006cbb4f8dc82d11008d20caaebd6e97", "publicationVenue": {"id": "5552b3d9-73b0-435f-8515-a135f23fcbba", "name": "Conference on Emerging Network Experiment and Technology", "type": "conference", "alternate_names": ["Conf Emerg Netw Exp Technol", "CoNEXT"], "url": "http://www.wikicfp.com/cfp/program?id=555"}, "title": "PipeDevice: a hardware-software co-design approach to intra-host container communication", "abstract": "Containers are prevalently adopted due to the deployment and performance advantages over virtual machines. For many containerized data-intensive applications, however, bulky data transfers may pose performance issues. In particular, communication across co-located containers on the same host incurs large overheads in memory copy and the kernel's TCP stack. Existing solutions such as shared-memory networking and RDMA have their own limitations, including insufficient memory isolation and limited scalability. This paper presents PipeDevice, a new system for low overhead intra-host container communication. PipeDevice follows a hardware-software co-design approach --- it offloads data forwarding entirely onto hardware, which accesses application data in hugepages on the host, thereby eliminating CPU overhead from memory copy and TCP processing. PipeDevice preserves memory isolation and scales well to connections, making it deployable in public clouds. Isolation is achieved by allocating dedicated memory to each connection from hugepages. To achieve high scalability, PipeDevice stores the connection states entirely in host DRAM and manages them in software. Evaluation with a prototype implementation on commodity FPGA shows that for delivering 80 Gbps across containers PipeDevice saves 63.2% CPU compared to kernel TCP stack, and 40.5% over FreeFlow. PipeDevice provides salient benefits to applications. For example, we port baidu-allreduce to PipeDevice and obtain ~2.2\u00d7 gains in allreduce throughput.", "venue": "Conference on Emerging Network Experiment and Technology", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2022-08-22", "journal": {"name": "Proceedings of the 18th International Conference on emerging Networking EXperiments and Technologies"}, "authors": [{"authorId": "2170441084", "name": "Qiang Su"}, {"authorId": "2188826917", "name": "Chuanwen Wang"}, {"authorId": "39931593", "name": "Zhixiong Niu"}, {"authorId": "9370070", "name": "Ran Shu"}, {"authorId": "2112624870", "name": "Peng Cheng"}, {"authorId": "2142901", "name": "Y. Xiong"}, {"authorId": "1729324", "name": "Dongsu Han"}, {"authorId": "2163131646", "name": "Chun Jason Xue"}, {"authorId": "2146234395", "name": "Hong Xu"}], "citations": [{"paperId": "f6c3f92e0102f831a6529df00234d4e447e4f8e4", "title": "CWASI: A WebAssembly Runtime Shim for Inter-Function Communication in the Serverless Edge-Cloud Continuum"}, {"paperId": "ebbb0144cd2a6dca0d7adf4d87cd02ae6711de73", "title": "Quark: A High-Performance Secure Container Runtime for Serverless Computing"}, {"paperId": "c33a0ab95d52b88c1fab957ce2990c0d92417b07", "title": "X-IO: A High-performance Unified I/O Interface using Lock-free Shared Memory Processing"}, {"paperId": "23cbdb0380f303c2694ebdbdb9e07cc97dbaa5e5", "title": "A Quantitative Analysis and Guideline of Data Streaming Accelerator in Intel 4th Gen Xeon Scalable Processors"}, {"paperId": "d8cccfabbbab00d67c17361426dab736b30386d3", "title": "A Quantitative Analysis and Guidelines of Data Streaming Accelerator in Modern Intel Xeon Scalable Processors"}]}
