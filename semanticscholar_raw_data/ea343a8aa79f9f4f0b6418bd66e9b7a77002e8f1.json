{"paperId": "ea343a8aa79f9f4f0b6418bd66e9b7a77002e8f1", "publicationVenue": null, "title": "Chukonu: A Fully-Featured High-Performance Big Data Framework that Integrates a Native Compute Engine into Spark", "abstract": "Apache Spark is a widely deployed big data analytics framework that offers such attractive features as resiliency, load-balancing, and a rich ecosystem. However, there is still plenty of room for improvement in its performance. Although a data-parallel system in a native programming language significantly improves performance, it may require re-implementing many functionalities of Spark to become a full-featured system. It is desirable for native big data systems to just write a compute engine in native languages to ensure high efficiency, and reuse other mature features provided by Spark rather than re-implement everything. But the interaction between the JVM and the native world risks becoming a bottleneck. This paper proposes Chukonu, a native big data framework that re-uses critical big data features provided by Spark. Owing to our novel DAG-splitting approach, the potential Spark integration overhead is alleviated, and its even outperforms existing pure native big data frameworks. Chukonu splits DAG programs into run-time parts and compile-time parts: The run-time parts are delegated to Spark to offload the complexities due to feature implementations. The compile-time parts are natively compiled. We propose a series of optimization techniques to be applied to the compile-time parts, such as operator fusion, vectorization, and compaction, to significantly reduce the Spark integration overhead. The results of evaluation show that Chukonu has a speedup of up to 71 . 58 \u00d7 (geometric mean 6 . 09 \u00d7 ) over Apache Spark, and up to 7 . 20 \u00d7 (geometric mean 2 . 30 \u00d7 ) over pure-native frameworks on six commonly-used big data applications. By translating the physical plan produced by SparkSQL into Chukonu programs, Chukonu accelerates Spark-SQL\u2019s TPC-DS performance by 2 . 29 \u00d7 .", "venue": "", "year": null, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2110705889", "name": "Bowen Yu"}, {"authorId": "151384117", "name": "Guanyu Feng"}, {"authorId": "47709883", "name": "Huanqi Cao"}, {"authorId": "2118891430", "name": "Xiaohan Li"}, {"authorId": "113907105", "name": "Zhenbo Sun"}, {"authorId": "2130322731", "name": "Haojie Wang"}, {"authorId": "153792169", "name": "Xiaowei Zhu"}, {"authorId": "2152975829", "name": "Weimin Zheng"}, {"authorId": "1712168", "name": "Wenguang Chen"}], "citations": [{"paperId": "5b886ab54f5283096da0c42c48ec2befdf288dbe", "title": "Low-Latency ML Inference by Grouping Correlated Data Objects and Computation"}]}
