{"paperId": "d9f1ae12e9a9d5b8eec465b4127285bae265112b", "publicationVenue": {"id": "1a5858d9-edfe-4a1b-ae39-60020748678f", "name": "ACM Transactions on Architecture and Code Optimization (TACO)", "type": "journal", "alternate_names": ["ACM Transactions on Architecture and Code Optimization", "ACM Trans Archit Code Optim", "ACM Trans Archit Code Optim (TACO"], "issn": "1544-3566", "url": "http://www.acm.org/taco", "alternate_urls": ["http://portal.acm.org/taco/", "https://taco.acm.org/"]}, "title": "GraphTune: An Efficient Dependency-Aware Substrate to Alleviate Irregularity in Concurrent Graph Processing", "abstract": "With the increasing need for graph analysis, massive Concurrent iterative Graph Processing (CGP) jobs are usually performed on the common large-scale real-world graph. Although several solutions have been proposed, these CGP jobs are not coordinated with the consideration of the inherent dependencies in graph data driven by graph topology. As a result, they suffer from redundant and fragmented accesses of the same underlying graph dispersed over distributed platform, because the same graph is typically irregularly traversed by these jobs along different paths at the same time. In this work, we develop GraphTune, which can be integrated into existing distributed graph processing systems, such as D-Galois, Gemini, PowerGraph, and Chaos, to efficiently perform CGP jobs and enhance system throughput. The key component of GraphTune is a dependency-aware synchronous execution engine in conjunction with several optimization strategies based on the constructed cross-iteration dependency graph of chunks. Specifically, GraphTune transparently regularizes the processing behavior of the CGP jobs in a novel synchronous way and assigns the chunks of graph data to be handled by them based on the topological order of the dependency graph so as to maximize the performance. In this way, it can transform the irregular accesses of the chunks into more regular ones so that as many CGP jobs as possible can fully share the data accesses to the common graph. Meanwhile, it also efficiently synchronizes the communications launched by different CGP jobs based on the dependency graph to minimize the communication cost. We integrate it into four cutting-edge distributed graph processing systems and a popular out-of-core graph processing system to demonstrate the efficiency of GraphTune. Experimental results show that GraphTune improves the throughput of CGP jobs by 3.1\u223c6.2, 3.8\u223c8.5, 3.5\u223c10.8, 4.3\u223c12.4, and 3.8\u223c6.9 times over D-Galois, Gemini, PowerGraph, Chaos, and GraphChi, respectively.", "venue": "ACM Transactions on Architecture and Code Optimization (TACO)", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-05-26", "journal": {"name": "ACM Transactions on Architecture and Code Optimization", "pages": "1 - 24", "volume": "20"}, "authors": [{"authorId": "2109972322", "name": "Jin Zhao"}, {"authorId": "72095113", "name": "Yu Zhang"}, {"authorId": "1683219", "name": "Ligang He"}, {"authorId": "2218420742", "name": "Qikun Li"}, {"authorId": "2190290836", "name": "Xiang-dong Zhang"}, {"authorId": "2161256436", "name": "Xinyu Jiang"}, {"authorId": "2186953171", "name": "Hui Yu"}, {"authorId": "144925807", "name": "Xiaofei Liao"}, {"authorId": "145914251", "name": "Hai Jin"}, {"authorId": "2069591381", "name": "Lin Gu"}, {"authorId": "2109500825", "name": "Haikun Liu"}, {"authorId": "143603418", "name": "Bin He"}, {"authorId": "2116922496", "name": "Ji Zhang"}, {"authorId": "1504515736", "name": "Xianzheng Song"}, {"authorId": "2144736678", "name": "Lin Wang"}, {"authorId": "2151550753", "name": "Jun Zhou"}], "citations": []}
