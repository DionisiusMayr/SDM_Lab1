{"paperId": "5720d33d86da15c0641154336458d708badaf766", "publicationVenue": {"id": "74f47cf8-2839-4a56-959a-524dd0ed9e3e", "name": "International Conference on Extending Database Technology", "type": "conference", "alternate_names": ["Int Conf Extending Database Technol", "Extending Database Technology", "Extending Database Technol", "EDBT"], "url": "http://www.edbt.org/"}, "title": "ArrayQL Integration into Code-Generating Database Systems", "abstract": "Array database systems offer a declarative language for array-based access on multidimensional data. Although ArrayQL formulates the operators for a standardised query language, the corresponding syntax is not fully defined nor integrated in a productive system. Furthermore, we see potential in a uniform array query language to fill the gap between linear and relational algebra. Thisstudy explains the integration of ArrayQL inside a relational database system, either addressable through a separate query interface or integrated into SQL as user-defined functions. With a relational database system as the target, we inherit the benefits such as query optimisation and multi-version concurrency control by design. Apart from SQL, having another query language allows processing the data without extraction or transformation out of its relational form. This is possible as we work on a relational array representation, for which we translate each ArrayQL operator into relational algebra. This study provides an extended ArrayQL grammar specification to address each ArrayQL operator. In our evaluation, ArrayQL within Umbra computes matrix operations faster than state of the art database extensions and outperforms traditional array database systems on predicate evaluation and aggregations.", "venue": "International Conference on Extending Database Technology", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"pages": "1:40-1:51"}, "authors": [{"authorId": "143976980", "name": "Maximilian E. Sch\u00fcle"}, {"authorId": "2073767868", "name": "T. G\u00f6tz"}, {"authorId": "144122431", "name": "A. Kemper"}, {"authorId": "143993045", "name": "Thomas Neumann"}], "citations": [{"paperId": "49beab6faf0126d47e19fb781e1677742c150d9c", "title": "The Duck's Brain: Training and Inference of Neural Networks in Modern Database Engines"}, {"paperId": "bb5ab3ee6920be8bfbb7bfafdbb48e5f814df49b", "title": "Teaching Blue Elephants the Maths for Machine Learning"}, {"paperId": "c909aaf29267c8a4cd31d8de2a82dbfba351257a", "title": "Optimizing Tensor Computations: From Applications to Compilation and Runtime Techniques"}, {"paperId": "49ca8424856fec72b395b833c83801b9ab0927fd", "title": "AMULET: Adaptive Matrix-Multiplication-Like Tasks"}, {"paperId": "eee0dad41eea0ad86932764981717da3220c32c3", "title": "Optimizing Tensor Programs on Flexible Storage"}, {"paperId": "b44c2438a0bb4c3db6f4fccd96e99f5110dbb1a7", "title": "Recursive SQL and GPU-support for in-database machine learning"}, {"paperId": "e9dcffb2fc37f783e9cd4ff3b31f1dc635253d4f", "title": "Recursive SQL for Data Mining"}, {"paperId": "fa2de32ec7b1ffc83b597c769a2fb6a4ee59d0b4", "title": "LLVM code optimisation for automatic differentiation: when forward and reverse mode lead in the same direction"}, {"paperId": "8bf51ba8963586ad35c83f2d3dd89f5e73dfd0eb", "title": "Blue Elephants Inspecting Pandas: Inspection and Execution of Machine Learning Pipelines in SQL"}, {"paperId": "c4056863f1e36339162c5fb79db2aa8904fdf4dc", "title": "NN2SQL: Let SQL Think for Neural Networks"}]}
