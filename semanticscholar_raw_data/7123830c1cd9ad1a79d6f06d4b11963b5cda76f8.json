{"paperId": "7123830c1cd9ad1a79d6f06d4b11963b5cda76f8", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "RAMP-TAO: Layering Atomic Transactions on Facebook's Online TAO Data Store", "abstract": "Facebook\u2019s graph store TAO, like many other distributed data stores, traditionally prioritizes availability, efficiency, and scalability over strong consistency or isolation guarantees to serve its large, read-dominant workloads. As product developers build diverse applications on top of this system, they increasingly seek transactional semantics. However, providing advanced features for select applications while preserving the system\u2019s overall reliability and performance is a continual challenge. In this paper, we first characterize developer desires for transactions that have emerged over the years and describe the current failure-atomic (i.e., write) transactions offered by TAO. We then explore how to introduce an intuitive read transaction API. We highlight the need for atomic visibility guarantees in this API with a measurement study on potential anomalies that occur without stronger isolation for reads. Our analysis shows that 1 in 1,500 batched reads reflects partial transactional updates, which complicate the developer experience and lead to unexpected results. In response to our findings, we present the RAMP-TAO protocol, a variation based on the Read Atomic Multi-Partition (RAMP) protocols that can be feasibly deployed in production with minimal", "venue": "Proceedings of the VLDB Endowment", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-07-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "3014-3027", "volume": "14"}, "authors": [{"authorId": "1643145163", "name": "Audrey Cheng"}, {"authorId": "2119204303", "name": "Xiao Shi"}, {"authorId": "2114093875", "name": "Lu Pan"}, {"authorId": "2146851460", "name": "Anthony Simpson"}, {"authorId": "2124720485", "name": "Neil Wheaton"}, {"authorId": "2602792", "name": "Shilpa Lawande"}, {"authorId": "2261931", "name": "N. Bronson"}, {"authorId": "2740804", "name": "Peter D. Bailis"}, {"authorId": "2174285", "name": "Natacha Crooks"}, {"authorId": "144467753", "name": "I. Stoica"}], "citations": [{"paperId": "f919753a96bb2804f720f30df3e73ca24f419d32", "title": "NOC-NOC: Towards Performance-optimal Distributed Transactions"}, {"paperId": "06f91d7f2c0bddfa5150150a9fe2da9b216acdd0", "title": "Mammoths Are Slow: The Overlooked Transactions of Graph Data"}, {"paperId": "7f751271c332fd5142143cbc1f96198cdc3d835e", "title": "From Kubernetes to Knactor: A Data-Centric Rethink of Service Composition"}, {"paperId": "d1ae4ab5047489c2b010c7ce72262982ad66ad60", "title": "ByteGraph: A High-Performance Distributed Graph Database in ByteDance"}, {"paperId": "af6e144a1bf2742937d4c0ed126419a0b34719ed", "title": "TAOBench: An End-to-End Benchmark for Social Networking Workloads"}, {"paperId": "bc1fde7c52e17fc3cc9f374565ef41075f9be9aa", "title": "All in One: Design, Verification, and Implementation of SNOW-optimal Read Atomic Transactions"}, {"paperId": "f0e0f229efc55113ecffe421a69e9b3b3ff048de", "title": "Parakeet: Practical Key Transparency for End-to-End Encrypted Messaging"}, {"paperId": "56572d80a6eb0af6a083c3e07d75ef9e9a134851", "title": "From Kubernetes to Knactor: A State-Centric Rethink of Service Integration"}]}
