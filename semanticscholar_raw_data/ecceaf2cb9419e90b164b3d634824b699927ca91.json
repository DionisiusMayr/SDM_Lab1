{"paperId": "ecceaf2cb9419e90b164b3d634824b699927ca91", "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99", "name": "International Conference on Architectural Support for Programming Languages and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS", "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program Lang Oper Syst", "Architectural Support for Programming Languages and Operating Systems"], "url": "http://www.acm.org/sigplan/"}, "title": "Persistent Memory Disaggregation for Cloud-Native Relational Databases", "abstract": "The recent emergence of commodity persistent memory (PM) hardware has altered the landscape of the storage hierarchy. It brings multi-fold benefits to database systems, with its large capacity, low latency, byte addressability, and persistence. However, PM has not been incorporated into the popular disaggregated architecture of cloud-native databases. In this paper, we present PilotDB, a cloud-native relational database designed to fully utilize disaggregated PM resources. PilotDB possesses a new disaggregated DB architecture that allows compute nodes to be computation-heavy yet data-light, as enabled by large buffer pools and fast data persistence offered by remote PMs. We then propose a suite of novel mechanisms to facilitate RDMA-friendly remote PM accesses and minimize operations involving CPUs on the computation-light PM nodes. In particular, PilotDB adopts a novel compute-node-driven log organization that reduces network/PM bandwidth consumption and a log-pull design that enables fast, optimistic remote PM reads aggressively bypassing the remote PM node CPUs. Evaluation with both standard SQL benchmarks and a real-world production workload demonstrates that PilotDB (1) achieves excellent performance as compared to the best-performing baseline using local, high-end resources, (2) significantly outperforms a state-of-the-art DRAM-disaggregation system and the PM-disaggregation solution adapted from it, (3) enables faster failure recovery and cache buffer warm-up, and (4) offers superior cost-effectiveness.", "venue": "International Conference on Architectural Support for Programming Languages and Operating Systems", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2023-03-25", "journal": {"name": "Proceedings of the 28th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 3"}, "authors": [{"authorId": "51510890", "name": "Chaoyi Ruan"}, {"authorId": "2129522810", "name": "Yingqiang Zhang"}, {"authorId": "1651610827", "name": "Chaoguo Bi"}, {"authorId": "35790236", "name": "Xiaosong Ma"}, {"authorId": "2149050454", "name": "Hao Chen"}, {"authorId": "2146324505", "name": "Feifei Li"}, {"authorId": "2150439279", "name": "Xinjun Yang"}, {"authorId": "2143635672", "name": "Cheng Li"}, {"authorId": "1704622", "name": "Ashraf Aboulnaga"}, {"authorId": "145490553", "name": "Yinlong Xu"}], "citations": [{"paperId": "86bd3427f4286d199523258fabfdf74592d53814", "title": "Perseid: A Secondary Indexing Mechanism for LSM-based Storage Systems"}, {"paperId": "c07ce0954743d93e0e954abbc16f7f132b1ad2b8", "title": "A Cost-Efficient Failure-Tolerant Scheme for Distributed DNN Training"}, {"paperId": "f5e1f75d29021161313ca5853d2cc3cf86457ec9", "title": "CXL Memory as Persistent Memory for Disaggregated HPC: A Practical Approach"}, {"paperId": "047c56653a266f9770a724e0d54b353271509a0c", "title": "Disaggregated Database Systems"}]}
