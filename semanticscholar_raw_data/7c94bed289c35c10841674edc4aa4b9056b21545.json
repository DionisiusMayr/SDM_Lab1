{"paperId": "7c94bed289c35c10841674edc4aa4b9056b21545", "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414", "name": "IEEE Transactions on Parallel and Distributed Systems", "type": "journal", "alternate_names": ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219", "url": "http://www.computer.org/tpds", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]}, "title": "Feluca: A Two-Stage Graph Coloring Algorithm With Color-Centric Paradigm on GPU", "abstract": "There are great challenges in performing graph coloring on GPU in general. First, the long-tail problem exists in the recursion algorithm because the conflict (i.e., different threads assign the adjacent nodes to the same color) becomes more likely to occur as the number of iterations increases. Second, it is hard to parallelize the sequential spread algorithm because the color allocation depends on the adjoining iteration. Third, the atomic operation is widely used on GPU to maintain the color list, which can greatly reduce the efficiency of GPU threads. In this article, we propose a two-stage high-performance graph coloring algorithm, called Feluca, aiming to address the above challenges. Feluca combines the recursion-based method with the sequential spread-based method. In the first stage, Feluca uses a recursive routine to color a majority of vertices in the graph. Then, it switches to the sequential spread method to color the remaining vertices in order to avoid the conflicts of the recursive algorithm. Moreover, the following techniques are proposed to further improve the graph coloring performance. i) A new method is proposed to eliminate the cycles in the graph; ii) a top-down scheme is developed to avoid the atomic operation originally required for color selection; and iii) a novel color-centric coloring paradigm is designed to improve the degree of parallelism for the sequential spread part. All these newly developed techniques, together with further GPU-specific optimizations such as coalesced memory access, comprise an efficient parallel graph coloring solution in Feluca. We have conducted extensive experiments on NVIDIA GPU. The results show that Feluca can achieve 1.19 \u2013 8.39\u00d7 speedup over the state-of-the-art algorithms.", "venue": "IEEE Transactions on Parallel and Distributed Systems", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-01-01", "journal": {"name": "IEEE Transactions on Parallel and Distributed Systems", "pages": "160-173", "volume": "32"}, "authors": [{"authorId": "144719179", "name": "Zhigao Zheng"}, {"authorId": "1678835", "name": "Xuanhua Shi"}, {"authorId": "1683219", "name": "Ligang He"}, {"authorId": "145914256", "name": "Hai Jin"}, {"authorId": "48241272", "name": "Shuo Wei"}, {"authorId": "1503578591", "name": "Hulin Dai"}, {"authorId": "1405878917", "name": "Xuan Peng"}], "citations": [{"paperId": "dfe7df8097cf4df7d6455d07191525ab9363d391", "title": "Instruction Scheduling for the GPU on the GPU"}, {"paperId": "f6eff5cd843181fba415ef6de07af29b18679508", "title": "Parallel Overlapping Community Detection Algorithm on GPU"}, {"paperId": "d061de8065da8241139092066f1ed935a69b5301", "title": "One stride ahead Advancements in Dispersed Graph Coloring"}]}
