{"paperId": "9f864821ae1a1bcb4fa3d5cd3eb74d0b8b690411", "publicationVenue": null, "title": "A Guide to Formal Analysis of Join Processing in Massively Parallel Systems", "abstract": "Over the last decade, there has been an enormous increase in the volume of data that is being stored, processed and analyzed. In order to improve the performance of query processing on such amounts of data, many modern data management systems (e.g. Spark [23, 28], Hadoop [13, 9, 24], and others [19, 14]) have resorted to the power of parallelism to speed up computation. Parallelism enables the distribution of computation for data-intensive tasks into hundreds, or even thousands of machines, and thus significantly reduces the completion time for several crucial data processing tasks. In this paper, we present a survey on recent results [18, 4, 5, 17] that study the computational complexity of mulitway join processing in such massively parallel systems. Our goal is twofold. First, we introduce a simple theoretical model, called the MPC (Massively Parallel Computation) model, that allows us to rigorously analyze the computational complexity of various parallel algorithms for query processing. Second, using the MPC model as a theoretical tool, we show how we can design novel algorithms and techniques for multiway join processing, and how we can prove their optimality through tight lower bounds. Our analysis provides a deeper understanding of how much synchronization, communication and data load is required when we compute a multiway join query, and informs of what is possible to achieve under specific system constraints.", "venue": "SGMD", "year": 2017, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2017-05-11", "journal": {"name": "SIGMOD Rec.", "pages": "18-27", "volume": "45"}, "authors": [{"authorId": "1713920", "name": "Paraschos Koutris"}, {"authorId": "144823759", "name": "Dan Suciu"}], "citations": [{"paperId": "91a6995a5757342e752975ed111dda24090b63e7", "title": "Abstractions, their algorithms, and their compilers"}, {"paperId": "4bce08d96d8334a97433d50d9dfe37e7ebec722c", "title": "Massively Parallel Join Algorithms"}, {"paperId": "cdc45897e9b6a3701aa9309295891ae3399b32c4", "title": "Framework-Agnostic Optimization of Repeated Skewed Joins at Massive Scale"}, {"paperId": "9e13059a428115872e5efac3ab8ea615e6a634f0", "title": "Algorithms for a Topology-aware Massively Parallel Computation Model"}, {"paperId": "a4640d02c065aa98c53c94b9925bccc53db5efd4", "title": "Topology Dependent Bounds For FAQs"}, {"paperId": "4d7392fe67e378236a7bd077ae7fd8c06d1dc70f", "title": "Finite-State Map-Reduce Computation and Relational Algebra Queries"}, {"paperId": "73eb0de4d1f8a28ed5f7d0effff8b4ca0de96611", "title": "AutoMJ: Towards Efficient Multi-way Join Query on Distributed Data-Parallel Platform"}, {"paperId": "014b7990cf07c97f86bea6261589eafd0d228aea", "title": "Locality-Aware Distribution Schemes"}, {"paperId": "d37fd40588d12fd9170cd3e04d8b509772018686", "title": "Topology-aware Parallel Data Processing: Models, Algorithms and Systems at Scale"}]}
