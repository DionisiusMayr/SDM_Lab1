{"paperId": "ab3ece56a0ea8ad908fac8baf8aaffbbe566639c", "publicationVenue": {"id": "9ec28b59-afd2-4d10-9a97-44d984123c30", "name": "IEEE International Conference on Information Reuse and Integration", "type": "conference", "alternate_names": ["Information Reuse and Integration", "IRI", "IEEE Int Conf Inf Reuse Integr", "Inf Reuse Integr"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1001046/all-proceedings"}, "title": "RDF Data Storage Techniques for Efficient SPARQL Query Processing Using Distributed Computation Engines", "abstract": "The rapidly growing amount of linked open data demands semantic RDF services that are efficient, scalable, and distributed along with high availability and fault tolerance. To address this concern, the Big Data processing infrastructure Hadoop has been adopted for RDF data management systems. In this paper, we introduce distributed RDF data stores, namely VPExp and 3CStore, based on the existing vertical partitioning (VP) approach. In the VPExp approach, we propose splitting of predicates based on explicit type information of an object. The 3CStore scheme is designed with a 3-column store, comprising of a subset of triples from the VP table based on different join correlations, to reduce the number of join operations while executing SPARQL queries as SQL in a distributed system. We evaluate these two RDF data storage approaches by comparing them with vertical partitioning approach and state-of-the-art RDF management system S2RDF. We also present an evaluation of query performance of these systems built upon two popular distributed computation engines namely, Spark and Drill.", "venue": "IEEE International Conference on Information Reuse and Integration", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2018-07-01", "journal": {"name": "2018 IEEE International Conference on Information Reuse and Integration (IRI)", "pages": "323-330"}, "authors": [{"authorId": "2042697689", "name": "Mahmudul Hassan"}, {"authorId": "1720381", "name": "S. Bansal"}], "citations": [{"paperId": "d6958a99c56dc09059b4e87fba64cd51c3b6cd4f", "title": "A Fixed probability Cuckoo Search algorithm to optimize SPARQL queries"}, {"paperId": "5cfb440c06a8c6daffb18afdd1e20047f2617b21", "title": "MuSe: a multi-level storage scheme for big RDF data using MapReduce"}, {"paperId": "236e2c692306c861979b575ebc8c5835f449d8b5", "title": "An empirical study on the evaluation of the RDF storage systems"}, {"paperId": "dab0d18550f9f222ed675756bb6e783118de4a3d", "title": "FP-ExtVP: Accelerating Distributed SPARQL queries by Exploiting Load-adaptive Partitioning"}, {"paperId": "85e4b340345e4ac16232b3e4ece52f9aa9944829", "title": "RETRACTED ARTICLE: Efficient multi-dimensional web information discovery in wireless sensor network"}, {"paperId": "6d7d3159afb647bb36e8229e88998c37f18544c6", "title": "Querying massive RDF data using Spark"}, {"paperId": "a0515c370a9f39d3ffdb6c4974bc92a257b295b4", "title": "Dynamic Partitioning Supporting Load Balancing for Distributed RDF Graph Stores"}, {"paperId": "26967af36c216280cb0e9e8d73d7cbcf8eda2a0b", "title": "RDFSpark: a new solution for querying massive RDF data using spark"}]}
