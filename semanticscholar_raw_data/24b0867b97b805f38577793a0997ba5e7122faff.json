{"paperId": "24b0867b97b805f38577793a0997ba5e7122faff", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Any-k Algorithms for Enumerating Ranked Answers to Conjunctive Queries", "abstract": "We study ranked enumeration for Conjunctive Queries (CQs) where the answers are ordered by a given ranking function (e.g., an ORDER BY clause in SQL). We develop\"any-k\"algorithms, which, without knowing the number k of desired answers, push down the ranking into joins by carefully ordering the computation of intermediate tuples and avoiding materialization of join answers until they are needed. For this to be possible, the ranking function needs to obey a particular type of monotonicity. Supported ranking functions include the common sum-of-weights, where answers are compared by the sum of input-tuple weights, as well as any commutative selective dioid. Our results extend a well-known unranked-enumeration dichotomy, which states that only free-connex CQs are tractable (under certain hardness hypotheses and for CQs without self-joins). For this class of queries and with n denoting the size of the input, the data complexity of our ranked enumeration approach for the time to the kth CQ answer is O(n+klogk), which is only a logarithmic factor slower than the O(n+k) unranked-enumeration guarantee. A core insight of our work is that ranked enumeration for CQs is closely related to Dynamic Programming and the fundamental task of path enumeration in a weighted DAG. We uncover a previously unknown tradeoff: one any-k algorithm has lower complexity when the number of returned answers is small, the other when their number is large. This tradeoff is eliminated under a stricter monotonicity property that we define and exploit for a novel algorithm that asymptotically dominates all previously known alternatives, including Eppstein's algorithm for sum-of-weights path enumeration. We empirically demonstrate the findings of our theoretical analysis in an experimental study that highlights the superiority of our approach over the join-then-rank approach that existing database systems follow.", "venue": "arXiv.org", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-05-11", "journal": {"name": "ArXiv", "volume": "abs/2205.05649"}, "authors": [{"authorId": "1396775510", "name": "Nikolaos Tziavelis"}, {"authorId": "2000882", "name": "Wolfgang Gatterbauer"}, {"authorId": "1722086", "name": "Mirek Riedewald"}], "citations": [{"paperId": "e2ecf21acbe5d79aa526d7fc3bc3e11927c5fe57", "title": "Ranked Enumeration for MSO on Trees via Knowledge Compilation"}, {"paperId": "cc19a4b9a81c817867d0f24b515b5b2233b2482b", "title": "Efficient Computation of Quantiles over Joins"}, {"paperId": "0f3988c0ee42ef108480317d90be7247688f9355", "title": "Geometric Amortization of Enumeration Algorithms"}, {"paperId": "9e0cfb5049a83dc665cea8c248bb3b842ce127d0", "title": "Tractable Orders for Direct Access to Ranked Answers of Conjunctive Queries"}, {"paperId": "5d1bac52af93965f834add7801576d56ab3beddb", "title": "Efficient Ranked Access over Joins"}, {"paperId": "1b9a0829ef7b1a442e67f764c8639cf7e800fa27", "title": "Ranked enumeration and lazy evaluation of graph database joins"}]}
