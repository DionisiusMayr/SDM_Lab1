{"paperId": "fe529f59867ec7086509934034ba1a7ed91922e8", "publicationVenue": {"id": "cce4d150-8211-4378-a9ef-a234ec19414c", "name": "ACM SIGACT-SIGOPS Symposium on Principles of Distributed Computing", "type": "conference", "alternate_names": ["PODC", "Princ Distrib Comput", "Principles of Distributed Computing", "ACM SIGACT-SIGOPS Symp Princ Distrib Comput"], "url": "http://www.podc.org/"}, "title": "Massively Parallel Algorithms for Finding Well-Connected Components in Sparse Graphs", "abstract": "Massively parallel computation (MPC) algorithms for graph problems have witnessed a resurgence of interest in recent years. Despite major progress for numerous graph problems however, the complexity of the sparse graph connectivity problem in this model has remained elusive: While classical logarithmic-round PRAM algorithms for finding connected components in any n-vertex graph have been known for more than three decades (and imply the same bounds for MPC model), no o(log n)-round MPC algorithms are known for this task with truly sublinear in n memory per machine (which is the only interesting regime for sparse graphs with O(n) edges). It is conjectured that an o(log n)-round algorithm for connectivity on general sparse graphs with n1-\u03a9 (1) per-machine memory may not exist, a conjecture that also forms the basis for multiple conditional hardness results on the round complexity of other problems in the MPC model. We take an opportunistic approach towards the sparse graph connectivity problem by designing an algorithm with improved performance in terms of the connectivity structure of the input graph. Formally, we design an MPC algorithm that finds all connected components with spectral gap at least \u03bb in a graph in O(log log n + log(1/\u03bb)) MPC rounds and n\u03b4 memory per machine for any constant \u03b4 \u2208 (0,1). While this algorithm still requires \u0398(log n) rounds in the worst-case, it achieves an exponential round reduction on \"well-connected'' components with \u03bb \u2265 1/polylog(n) using only n\u03b4 memory per machine and \u0142(n) total memory, and still operates in o(log n)l rounds even when \u03bb = 1/no(1). En-route to our main result, we design a new distributed data structure for performing independent random walks from all vertices simultaneously, as well as a new leader-election algorithm with exponentially faster round complexity on random graphs.", "venue": "ACM SIGACT-SIGOPS Symposium on Principles of Distributed Computing", "year": 2018, "fieldsOfStudy": ["Mathematics", "Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2018-05-08", "journal": {"name": "Proceedings of the 2019 ACM Symposium on Principles of Distributed Computing"}, "authors": [{"authorId": "35067898", "name": "Sepehr Assadi"}, {"authorId": "1743608", "name": "Xiaorui Sun"}, {"authorId": "1833723", "name": "Omri Weinstein"}], "citations": [{"paperId": "a3bf6669d19fa023117d026a7ce4b6f71b2484f0", "title": "Massively Parallel Tree Embeddings for High Dimensional Spaces"}, {"paperId": "d0254e1c512c3cc028d098a942bfbeba3e25836d", "title": "Almost Optimal Massively Parallel Algorithms for k-Center Clustering and Diversity Maximization"}, {"paperId": "9a6d16898d3086d543838c030916808b949a7871", "title": "Fast Dynamic Programming in Trees in the MPC Model"}, {"paperId": "d47d252dc82075eed157bc851e698b379c599447", "title": "Exploring Statistics Around Kahn-Kalai Conjecture by Using Parallel Algorithms"}, {"paperId": "7017419ac2e12777476992e35cbe862eb2621288", "title": "Improved Deterministic Connectivity in Massively Parallel Computation"}, {"paperId": "80c1b711e3eb44070851bd602215a85ee9dfee70", "title": "Efficient and Local Parallel Random Walks"}, {"paperId": "69e5bd4a63a5a5db0a720d2df64845c49750f718", "title": "Adaptive Massively Parallel Constant-round Tree Contraction"}, {"paperId": "257c68a981b195e59594f10c6210a4318e9499cc", "title": "Deterministic massively parallel connectivity"}, {"paperId": "e9a3c08838b5e9fb86c005aefabb0b25f8f8a68e", "title": "Improved Deterministic (\u0394+1) Coloring in Low-Space MPC"}, {"paperId": "ed0b5927bb01e0551f777eb9a8f0a70011bae3dd", "title": "Sample-and-Gather: Fast Ruling Set Algorithms in the Low-Memory MPC Model"}, {"paperId": "9e13059a428115872e5efac3ab8ea615e6a634f0", "title": "Algorithms for a Topology-aware Massively Parallel Computation Model"}, {"paperId": "fe9c8c2c875844b992214d7637084e1f0f9db1f4", "title": "Time-optimal construction of overlay networks"}, {"paperId": "247054556f0e21821a71a2f02ba26af0fb3bc10f", "title": "Massively Parallel Algorithms for Minimum Cut"}, {"paperId": "56050cdc516b8369aa3cdc97572396e465e4b791", "title": "On the Hardness of Massively Parallel Computation"}, {"paperId": "ba52d528728362c470f43729e84a50972837a017", "title": "Unconditional Lower Bounds for Adaptive Massively Parallel Computation"}, {"paperId": "a81dd5c9913d077615f43cf9d27ad73f0109eac7", "title": "Graph Sparsification for Derandomizing Massively Parallel Computation with Low Space"}, {"paperId": "a808f46021c87a64245c152b25b8316e2767e8cd", "title": "Massively Parallel Algorithms for Distance Approximation and Spanners"}, {"paperId": "2a3d49d8f8a8df58fa71c8c07f93a2ddbd47085e", "title": "Connected Components on a PRAM in Log Diameter Time"}, {"paperId": "13dfd563ebe50112340f2cc3576ff12c4ebdef6e", "title": "Massively Parallel Algorithms for Small Subgraph Counting"}, {"paperId": "637b128816027da077822294591c5457290142cd", "title": "Parallel Algorithms for Small Subgraph Counting"}, {"paperId": "9f9ebac01bba2949078d5a81904e537b0f4dd129", "title": "How fast can you update your MST? (Dynamic algorithms for cluster computing)"}, {"paperId": "3fb133c3dd37113aafc9aae90c3abcee15e3165a", "title": "Batch-dynamic Algorithms via Parallel Change Propagation and Applications to Dynamic Trees"}, {"paperId": "a8b26718d629024b1823b36a3b4881b8c4a6dc26", "title": "Equivalence classes and conditional hardness in massively parallel computations"}, {"paperId": "a62a60ba53d117f75e396d4d53d26fd604710a56", "title": "New lower bounds for Massively Parallel Computation from query complexity"}, {"paperId": "54053f48bce41d457e984d1557db6d158d6b2d66", "title": "Graph Sparsification for Derandomizing Massively Parallel Computation with Low Space"}, {"paperId": "f043235c2f8df08c1b973d36bf6caa41c9f685b5", "title": "PODC 2019 Review"}, {"paperId": "762e3d8dd81718dfdcba952a3f7ff0bbfc7259d9", "title": "Distributed Computing Column 76: Annual Review 2019"}, {"paperId": "4c2f41199011ef81db4cb1256d906272a84561bc", "title": "Conditional Hardness Results for Massively Parallel Computation from Distributed Lower Bounds"}, {"paperId": "d39bed026b05ae432dc8dbc3668409548417aafc", "title": "Near-Optimal Massively Parallel Graph Connectivity"}, {"paperId": "1d1b17081fb5b279bb0f7792bb9129545e535df9", "title": "Faster Algorithms for Edge Connectivity via Random 2-Out Contractions"}, {"paperId": "a688b81615b8fac6d7f4fd86ec1e25366f6e8dc3", "title": "Parallel Batch-Dynamic Graphs: Algorithms and Lower Bounds"}, {"paperId": "f21495b24d58d2fb9b4162a03ed1bcad8d5a5355", "title": "Breaking the Linear-Memory Barrier in MPC: Fast MIS on Trees with Strongly Sublinear Memory"}, {"paperId": "11a010a65680f709a6aacd8ab7d64b1331f258ca", "title": "Massively Parallel Computation via Remote Memory Access"}, {"paperId": "09adeb7e2464f6960782352ccaeb1d0bd8ad6982", "title": "Log Diameter Rounds Algorithms for 2-Vertex and 2-Edge Connectivity"}, {"paperId": "f1aa069dcc467e3ee01ec786967bdf0f94d1e2d5", "title": "Exponentially Faster Massively Parallel Maximal Matching"}, {"paperId": "5b9107106c8c858fa6f1b08116c2688950dbc538", "title": "Weighted Matchings via Unweighted Augmentations"}, {"paperId": "cfc810ad81aad8753fa18ef6f2cb868fa461bc3c", "title": "The Complexity of (\u0394+1) Coloring in Congested Clique, Massively Parallel Computation, and Centralized Local Computation"}, {"paperId": "42413c062105e0ea0a1ddae528e004bd34c30c23", "title": "The Complexity of $(\\Delta + 1)$Coloring inCongested Clique, Massively Parallel Computation,and Centralized Local Computation"}, {"paperId": "1d8d721c163389c9077101798e22928418e5d9a7", "title": "Simple Graph Coloring Algorithms for Congested Clique and Massively Parallel Computation"}, {"paperId": "a5421572ea4c02b6b90fe0daebfb787a0bc36d53", "title": "Round Compression for Parallel Graph Algorithms in Strongly Sublinear Space"}, {"paperId": "938d82791c315793e6f3e61d1d7199e72f98e3c8", "title": "Sparsifying Distributed Algorithms with Ramifications in Massively Parallel Computation and Centralized Local Computation"}, {"paperId": "39195e09b3f3a0897b28b16c96fd44f4e8e68ea2", "title": "Massively Parallel Symmetry Breaking on Sparse Graphs: MIS and Maximal Matching"}, {"paperId": "a45125e79819484570d4ce84f7d400b137e0a542", "title": "Graph Sparsification, Spectral Sketches, and Faster Resistance Computation, via Short Cycle Decompositions"}, {"paperId": "8b7733d62a1ccde31a309349b1a868a7dd4e3a58", "title": "Parallel Graph Connectivity in Log Diameter Rounds"}, {"paperId": "5731cc5d45b41c211979e8e8f53e9ec43495f918", "title": "Breaking the linear-memory barrier in MPC: Fast MIS on trees with strongly sublinear memory"}, {"paperId": "3c52ae65fd21876e714ca91e339c9d719ced5680", "title": "Breaking the Linear-Memory Barrier in MPC: Fast MIS on Trees with n\u03b5 Memory per Machine"}, {"paperId": "296f790977f26ce4e0120645b50bfd3c9e3e0124", "title": "Maliciously Secure Massively Parallel Computation for All-but-One Corruptions"}, {"paperId": "a1a7e29de32bf82346fc9b9fa06df7ad56e19130", "title": "MPC for MPC: Secure Computation on a Massively Parallel Computing Architecture"}, {"paperId": "d662b6a34d4706f7d37ddc91f9c7e3d432a9b335", "title": "Secure Massively Parallel Computation for Dishonest Majority"}, {"paperId": "9b240ad80f09bf9939e8086aa2f7f71c9ec7499b", "title": "Walking Randomly, Massively, and E\ufb03ciently"}, {"paperId": "1ae01a22c5b07b087a84c3fe27b57015b7b67853", "title": "N ov 2 01 9 Walking Randomly , Massively , and Efficiently"}, {"paperId": "ebb00d0d93057fd051d8089ff49d5015bd095c2b", "title": "Faster Algorithms for Edge Connectivity via Random Out Contractions"}, {"paperId": "12564786a5579b7b8eceb2911a34d3af36703571", "title": "Combinatorial Optimization On Massive Datasets: Streaming, Distributed, And Massively Parallel Computation"}, {"paperId": "c54bd93b3b52071d3e331c588053dba921a8a51f", "title": "1 1 Ju l 2 01 9 Walking Randomly , Massively , and Efficiently"}]}
