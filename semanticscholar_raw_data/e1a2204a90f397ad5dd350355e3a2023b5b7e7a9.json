{"paperId": "e1a2204a90f397ad5dd350355e3a2023b5b7e7a9", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "Dynamic speculative optimizations for SQL compilation in Apache Spark", "abstract": "Big-data systems have gained significant momentum, and Apache Spark is becoming a de-facto standard for modern data analytics. Spark relies on SQL query compilation to optimize the execution performance of analytical workloads on a variety of data sources. Despite its scalable architecture, Spark's SQL code generation suffers from significant runtime overheads related to data access and de-serialization. Such performance penalty can be significant, especially when applications operate on human-readable data formats such as CSV or JSON. In this paper we present a new approach to query compilation that overcomes these limitations by relying on run-time profiling and dynamic code generation. Our new SQL compiler for Spark produces highly-efficient machine code, leading to speedups of up to 4.4x on the TPC-H benchmark with textual-form data formats such as CSV or JSON.", "venue": "Proceedings of the VLDB Endowment", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2020-01-01", "journal": {"name": "Proceedings of the VLDB Endowment", "pages": "754 - 767", "volume": "13"}, "authors": [{"authorId": "51044752", "name": "F. Schiavio"}, {"authorId": "2066218", "name": "Daniele Bonetta"}, {"authorId": "144756486", "name": "Walter Binder"}], "citations": [{"paperId": "7bbd1762024afe9d9272eb24c594dfe984e81810", "title": "DynQ: a dynamic query engine with query-reuse capabilities embedded in a polyglot runtime"}, {"paperId": "a2dad47ead76fc45858290b7d4e1c8b063da87b9", "title": "Intelligent Fashion Design Platform of Clothing Colleges in the Guangdong-Hong Kong-Macao Greater Bay Area based on JAVA and SQL"}, {"paperId": "cf866f8ccbd88d9e61dadcaf0d09f34135b9dbbe", "title": "Optimising SQL Queries Using Genetic Improvement"}, {"paperId": "3b00eaabd4ee4357c6596db53558903e3d81f72b", "title": "Language-Agnostic Integrated Queries in a Managed Polyglot Runtime"}, {"paperId": "a6b1cc3cbc6e610ec1f59e9b6b63e466886cd179", "title": "Adaptive Code Generation for Data-Intensive Analytics"}, {"paperId": "2f40acfd861f658d7aaa4f0a61a7819967b97940", "title": "Permutable Compiled Queries: Dynamically Adapting Compiled Queries without Recompiling"}, {"paperId": "79a63174a05ce79531cbbdd1fe9c22362e86a7a3", "title": "Towards dynamic SQL compilation in Apache Spark"}, {"paperId": "a4d4ff654e50547105692b211291ea89b5760d2d", "title": "A Framework for Optimizing Spark Configurations"}, {"paperId": "2d727c808a080ea0d10386130b84a13a32513f6b", "title": "AdCom: Adaptive Combiner for Streaming Aggregations"}]}
