{"paperId": "77c5b87d12ffdc5e388a74f0b2f0113d310c1394", "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414", "name": "IEEE Transactions on Parallel and Distributed Systems", "type": "journal", "alternate_names": ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219", "url": "http://www.computer.org/tpds", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]}, "title": "Adaptive Scheduling Parallel Jobs with Dynamic Batching in Spark Streaming", "abstract": "Today enterprises have massive stream data that require to be processed in real time due to data explosion in recent years. Spark Streaming as an emerging system is developed to process real time stream data analytics by using micro-batch approach. The unified programming model of Spark Steaming leads to some unique benefits over other traditional streaming systems, such as fast recovery from failures, better load balancing and resource usage. It treats the continuous stream as a series of micro-batches of data and continuously process these micro-batch jobs. However, efficient scheduling of micro-batch jobs to achieve high throughput and low latency is very challenging due to the complex data dependency and dynamism inherent in streaming workloads. In this paper, we propose A-scheduler, an adaptive scheduling approach that dynamically schedules parallel micro-batch jobs in Spark Streaming and automatically adjusts scheduling parameters to improve performance and resource efficiency. Specifically, A-scheduler dynamically schedules multiple jobs concurrently using different policies based on their data dependencies and automatically adjusts the level of job parallelism and resource shares among jobs based on workload properties. Furthermore, we integrate dynamic batching technique with A-Scheduler to further improve the overall performance of the customized Spark Streaming system. It relies on an expert fuzzy control mechanism to dynamically adjust the length of each batch interval in response to time-varying streaming workload and system processing rate. We implemented A-scheduler and evaluated it with a real-time security event processing workload. Our experimental results show that A-scheduler with dynamic batching can reduce end-to-end latency by 38 percent and meanwhile improve workload throughput and energy efficiency by 23 and 15 percent, respectively, compared to the default Spark Streaming scheduler.", "venue": "IEEE Transactions on Parallel and Distributed Systems", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2018-12-01", "journal": {"name": "IEEE Transactions on Parallel and Distributed Systems", "pages": "2672-2685", "volume": "29"}, "authors": [{"authorId": "1778706", "name": "Dazhao Cheng"}, {"authorId": "46224002", "name": "Xiaobo Zhou"}, {"authorId": "40457242", "name": "Yu Wang"}, {"authorId": "145181317", "name": "Changjun Jiang"}], "citations": [{"paperId": "7b03b28e7a7ad5328f1147a98a06ebcb7cb4f541", "title": "Cost-Aware Scheduling and Data Skew Alleviation for Big Data Processing in Heterogeneous Cloud Environment"}, {"paperId": "e04e76133b7d8573111f1a217f7d03e51fcf7f8c", "title": "A two-tier coordinated load balancing strategy over skewed data streams"}, {"paperId": "5f8923774adbc8abc398d5e41a5ca4763cb53dab", "title": "Research on resource scheduling optimization technology for power cloud edge collaboration"}, {"paperId": "59787dec987401bc9595a27837fb620a451b0ae6", "title": "Lightweight Stream Processing Framework Based on Distributed Power Terminals"}, {"paperId": "6e6044684ba7a26eb913177953e71de312374eb7", "title": "Hierarchical Auto-scaling Policies for Data Stream Processing on Heterogeneous Resources"}, {"paperId": "f9ac2805f56a3b318269249f772baf41d281b180", "title": "A Spark Streaming-Based Early Warning Model for Gas Concentration Prediction"}, {"paperId": "a9ea1848df46b797ef62f0f5e36e04dd712aedd9", "title": "zStream: towards a low latency micro-batch streaming system"}, {"paperId": "e98d2d71dec6189eb7f33e915617e5a788a8b073", "title": "A Novel Spark-Based Attribute Reduction and Neighborhood Classification for Rough Evidence"}, {"paperId": "2a6baff0ce9f752f43691687cfdcff5cf6eb048f", "title": "Runtime Adaptation of Data Stream Processing Systems: The State of the Art"}, {"paperId": "8b8a67b16f3484503fde23f6561af8508bc17472", "title": "IoT data analytics architecture for smart healthcare using RFID and WSN"}, {"paperId": "18739c1fec070d4e0ac2d06e000075e5d65c50a8", "title": "Self\u2010adaptation on parallel stream processing: A systematic review"}, {"paperId": "ea26c20a6afe1b869c1aec41bffc470acb3e8c51", "title": "Run-time adaptation of stream processing spanning the cloud and the edge"}, {"paperId": "4989709fd9e5e7f0cd27f9a06b0fc17f936e2b8a", "title": "A cost-efficient scheduling algorithm for streaming processing applications on cloud"}, {"paperId": "b78c4f6e49ea469a85bd7d5e669868e58fdc568b", "title": "A multi-level collaborative framework for elastic stream computing systems"}, {"paperId": "53b676f3b1f7395a6afbcac3cb2b1815ece0d67c", "title": "AI\u2010Driven Performance Management in Data\u2010Intensive Applications"}, {"paperId": "53dac5d590fc1cb17668277198f21df907386cc4", "title": "A spark-based parallel distributed posterior decoding algorithm for big data hidden Markov models decoding problem"}, {"paperId": "c3ddae5cb7ad9473453765a657cdfc341d7bcf13", "title": "NoStop: A Novel Configuration Optimization Scheme for Spark Streaming"}, {"paperId": "1eae7530d660c750b1c4b1e27d5bf45801e8582e", "title": "Streaming Data Priority Scheduling Framework for Autonomous Driving by Edge"}, {"paperId": "40b41ee1cebb34650ffea75c5da6c1f9edc61e40", "title": "VID-WIN: Fast Video Event Matching With Query-Aware Windowing at the Edge for the Internet of Multimedia Things"}, {"paperId": "6fcc7739b8edb0a16b8d2eb0ee4889334ca634fa", "title": "An improved approach for mining association rules in parallel using Spark Streaming"}, {"paperId": "f98af445e3e7dd2fae8ee0967c4bfe3bae7e845c", "title": "Cluster equilibrium scheduling method based on backpressure flow control in railway power supply systems"}, {"paperId": "2df5a82ced15a92536723ceae61c4d985857793c", "title": "ImRP: A Predictive Partition Method for Data Skew Alleviation in Spark Streaming Environment"}, {"paperId": "efd861c2d9d46b42a4e15fceedaa3e6f82b4fc9e", "title": "An edge streaming data processing framework for autonomous driving"}, {"paperId": "c0f4476512d066c20eb31eb29ff23eced12ece3e", "title": "A Data Streaming Process Framework for Autonomous Driving By Edge"}, {"paperId": "21bd6c6efd91cfa9773b1b9134d5b9afea757cd9", "title": "DAG-Aware Joint Task Scheduling and Cache Management in Spark Clusters"}, {"paperId": "456c011594ecacdd24298a161787389ccbe4b88b", "title": "Big Data Service Architecture: A Survey"}, {"paperId": "77132163ce79c4c4216b33f02491ddb83460b3ad", "title": "Challenges and Limitation of Resource Allocation in Cloud Computing"}, {"paperId": "2d727c808a080ea0d10386130b84a13a32513f6b", "title": "AdCom: Adaptive Combiner for Streaming Aggregations"}, {"paperId": "9208d0dec18996255ac318530b3f300714bee5bd", "title": "A Machine Learning-Based Elastic Strategy for Operator Parallelism in a Big Data Stream Computing System"}, {"paperId": "0a11e78b927ee67951205a86e7141610f8a3987d", "title": "Research on Optimization Technology of Multi-data Center for Multi-site Integration"}, {"paperId": "b16838c70832b54100c0130ec8cb73baf4922bea", "title": "Resource Efficient Stream Processing Platform with Latency-Aware Scheduling Algorithms"}]}
