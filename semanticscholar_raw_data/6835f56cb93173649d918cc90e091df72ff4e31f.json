{"paperId": "6835f56cb93173649d918cc90e091df72ff4e31f", "publicationVenue": {"id": "9e4c2972-9815-4058-a619-677fc68cb552", "name": "ACM Transactions on Programming Languages and Systems", "type": "journal", "alternate_names": ["ACM Trans Program Lang Syst"], "issn": "0164-0925", "url": "http://www.acm.org/pubs/contents/journals/toplas/", "alternate_urls": ["http://toplas.acm.org/", "http://portal.acm.org/toplas/archive", "https://toplas.acm.org/"]}, "title": "SPL", "abstract": "Big data is revolutionizing how all sectors of our economy do business, including telecommunication, transportation, medical, and finance. Big data comes in two flavors: data at rest and data in motion. Processing data in motion is stream processing. Stream processing for big data analytics often requires scale that can only be delivered by a distributed system, exploiting parallelism on many hosts and many cores. One such distributed stream processing system is IBM Streams. Early customer experience with IBM Streams uncovered that another core requirement is extensibility, since customers want to build high-performance domain-specific operators for use in their streaming applications. Based on these two core requirements of distribution and extensibility, we designed and implemented the Streams Processing Language (SPL). This article describes SPL with an emphasis on the language design, distributed runtime, and extensibility mechanism. SPL is now the gateway for the IBM Streams platform, used by our customers for stream processing in a broad range of application domains.", "venue": "ACM Transactions on Programming Languages and Systems", "year": 2017, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2017-03-06", "journal": {"name": "ACM Transactions on Programming Languages and Systems (TOPLAS)", "pages": "1 - 39", "volume": "39"}, "authors": [{"authorId": "1728836", "name": "Martin Hirzel"}, {"authorId": "144402955", "name": "S. Schneider"}, {"authorId": "1742813", "name": "B. Gedik"}], "citations": [{"paperId": "2aca944f3ae4a6644456819caea4b8fba36edbe2", "title": "Out-of-Order Sliding-Window Aggregation with Efficient Bulk Evictions and Insertions"}, {"paperId": "840655584f9870d8fd8f484e816428863e906165", "title": "Towards a Methodology for Building Dynamic Urgent Applications on Continuum Computing Platforms"}, {"paperId": "21020225576f206e6629937912d66a7fc5093158", "title": "Ephemeral data handling in microservices with Tquery"}, {"paperId": "06349a2335798769bc372b08dd94a1b24cbdacb9", "title": "Kognitor: Big Data Real-Time Reasoning and Probabilistic Programming"}, {"paperId": "3e5ffa2f758edc57205046a9ee8d20c9921d9b0e", "title": "In-order sliding-window aggregation in worst-case constant time"}, {"paperId": "7786a9111f38f4255c1aaf1c1a69a3fae037c55f", "title": "A Cloud Native Platform for Stateful Streaming"}, {"paperId": "7200a41152a10e51fcd5f4bec80a55e8d1a1ba37", "title": "Joker: Elastic stream processing with organic adaptation"}, {"paperId": "effe5ee0688c77bc7e8dfc16c71cc34165256ed2", "title": "Dagstuhl Seminar on Big Stream Processing"}, {"paperId": "274afbef7369c7a4d91fbfa17be56bbc15cb25ac", "title": "A Comprehensive Survey on Parallelization and Elasticity in Stream Processing"}, {"paperId": "131bf3b996713653bb273dfb07222721e4fc14e6", "title": "VTDL: A Notation for Data Stream Processing Applications"}, {"paperId": "b563a45f9c0e78f99eeb5459483682d82ca5ea99", "title": "Distributed data stream processing and edge computing: A survey on resource elasticity and future directions"}, {"paperId": "af2870e2a9434fe9956c78a812258a48ed0dcfb8", "title": "Resource Elasticity for Distributed Data Stream Processing: A Survey and Future Directions"}, {"paperId": "e8f14ebe031e2df0b69cec119fc5511a351b830d", "title": "Activity Report 2018 Team STACK Software Stack for Massively Geo-Distributed Infrastructures"}, {"paperId": "23a1d177381072a96b902a688f6ce3fd638067c3", "title": "A Comprehensive Survey on Parallelization and Elasticity in Stream Processing 1 : 3 apply methods from control theory to adapt the parallelization degree of the operators"}, {"paperId": "ab28a0f2a8cb06e2343d3a7df3d3e0b8486269d0", "title": "Stream Query Optimization"}, {"paperId": "28ff154a280be55c47b89ea866c99df6ebd39a03", "title": "Stream Processing Languages and Abstractions"}, {"paperId": "43cf07e127650631ba276b00445a8602ebd837ae", "title": "S Stream Query Optimization"}, {"paperId": "2c166bd85ae5b3aaeef9fb36aac1d3e36a330954", "title": "Apache Avro , etc Data Aggregation Messaging Systems Queueing Systems Publish-Subscribe Messaging Stream Processing Data Stream Processing Engines Complex Event-Processing Frameworks IoT Hubs Delivery Web Interfaces Dashboards"}]}
