{"paperId": "5e682aec37b8c07e3378166691fb6a38ad271a88", "publicationVenue": {"id": "e35a87a3-a6c4-47bf-acca-3e615ddb9c58", "name": "ACM Transactions on Database Systems", "type": "journal", "alternate_names": ["ACM Trans Database Syst"], "issn": "0362-5915", "url": "http://www.acm.org/pubs/contents/journals/tods/", "alternate_urls": ["http://tods.acm.org/", "http://www.acm.org/tods/", "http://portal.acm.org/tods", "https://tods.acm.org/"]}, "title": "Wander Join and XDB", "abstract": "Joins are expensive, and online aggregation over joins was proposed to mitigate the cost, which offers users a nice and flexible tradeoff between query efficiency and accuracy in a continuous, online fashion. However, the state-of-the-art approach, in both internal and external memory, is based on ripple join, which is still very expensive and even needs unrealistic assumptions (e.g., tuples in a table are stored in random order). This article proposes a new approach, the wander join algorithm, to the online aggregation problem by performing random walks over the underlying join graph. We also design an optimizer that chooses the optimal plan for conducting the random walks without having to collect any statistics a priori. Compared with ripple join, wander join is particularly efficient for equality joins involving multiple tables, but also supports \u03b8-joins. Selection predicates and group-by clauses can be handled as well. To demonstrate the usefulness of wander join, we have designed and implemented XDB (approXimate DB) by integrating wander join into various systems including PostgreSQL, Spark, and a stand-alone plug-in version using PL/SQL. The design and implementation of XDB has demonstrated wander join\u2019s practicality in a full-fledged database system. Extensive experiments using the TPC-H benchmark have demonstrated the superior performance of wander join over ripple join.", "venue": "ACM Transactions on Database Systems", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-01-29", "journal": {"name": "ACM Transactions on Database Systems (TODS)", "pages": "1 - 41", "volume": "44"}, "authors": [{"authorId": "3245752", "name": "Feifei Li"}, {"authorId": "2152563567", "name": "Bin Wu"}, {"authorId": "144744111", "name": "K. Yi"}, {"authorId": "3416271", "name": "Zhuoyue Zhao"}], "citations": [{"paperId": "e467d487035f95962af39a8f7d21eccfccf9faa3", "title": "gSWORD: GPU-accelerated Sampling for Subgraph Counting"}, {"paperId": "17bd21a328514fa005b57687dfcfa135edbbf00b", "title": "Practical Dynamic Extension for Sampling Indexes"}, {"paperId": "4e9ef60fdd0c08b017e34bcefb683c90c65eacb8", "title": "Approximate Queries over Concurrent Updates"}, {"paperId": "5013c78394c0c40625bdcf077835eebf06f07cc3", "title": "Tuple Bubbles: Learned Tuple Representations for Tunable Approximate Query Processing"}, {"paperId": "4ce3e861cbf76a6f8f28bd0fbceb31296962c5e0", "title": "Answering (Unions of) Conjunctive Queries using Random Access and Random-Order Enumeration"}, {"paperId": "d58ac1399a8db5fe436573e7f692a352e0aa8a51", "title": "Cardinality Estimation in DBMS: A Comprehensive Benchmark Evaluation"}, {"paperId": "d2a46eff62339ecf8c16f265004074bc88f32fab", "title": "Answering (Unions of) Conjunctive Queries using Random Access and Random-Order Enumeration"}, {"paperId": "621108af2dc17bd690478561039c3df92d1e0e19", "title": "Learning Models over Relational Data: A Brief Tutorial"}]}
