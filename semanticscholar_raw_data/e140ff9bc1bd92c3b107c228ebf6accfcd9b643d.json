{"paperId": "e140ff9bc1bd92c3b107c228ebf6accfcd9b643d", "publicationVenue": null, "title": "A Hybrid Multi-Query Optimization Technique Combining Sub-Expression and Materialized View Reuse", "abstract": "Query execution in traditional database systems is sequential and isolated. Such query execution does not reuse results generated for aiding the execution of subsequent queries. Though this type of execution might not present potential gains in performance for OLTP (Online Transaction Processing) workloads, re-using results is beneficial for OLAP (Online Analytical Processing) workloads as queries share some similarity. Multi-Query Execution (MQO) achieves this by generating shared execution strategies for multiple queries. Similarities between queries are used by the Multi-Query optimizer to create an efficient shared query execution plan that may either be batched or use cached information to optimize execution. Unfortunately, both batched and realtime multi-query processing techniques have certain inherent limitations. In this work, we merge these two techniques to form the basis for our hybrid MQO technique. By generating shared query plans and using materialized views for deriving query results, we show that our hybrid MQO technique is suitable for multiple query execution in derivable workloads. We also study the role that different operators play in the performance of our hybrid system. Finally, we evaluate the effect that varying cache sizes and derivabilities has on our hybrid MQO system, showing gains in performance over sequential execution for larger caches and higher derivabilities. Our results show that with a generously sized cache, workloads that contain similar queries benefit from using our hybrid method, with an observed speed-up of 2x over sequential execution in the best case.", "venue": "", "year": 2022, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2197760438", "name": "Vasudev Raghavendra Bidarkar"}], "citations": []}
