{"paperId": "8356864e3802eaee426a1fec7ea838bf8d7d7e57", "publicationVenue": null, "title": "Industry Practice of Coverage-Guided Enterprise-Level DBMS Fuzzing", "abstract": "As an infrastructure for data persistence and analysis, Database Management Systems (DBMSs) are the cornerstones of modern enterprise software. To improve their correctness, the industry has been applying blackbox fuzzing for decades. Recently, the research community achieved impressive fuzzing gains using coverage guidance. However, due to the complexity and distributed nature of enterprise-level DBMSs, seldom are these researches applied to the industry. In this paper, we apply coverage-guided fuzzing to enterprise-level DBMSs from Huawei and Bloomberg LP. In our practice of testing GaussDB and Comdb2, we found major challenges in all three testing stages. The challenges are collecting precise coverage, optimizing fuzzing performance, and analyzing root causes. In search of a general method to overcome these challenges, we propose Ratel, a coverage-guided fuzzer for enterprise-level DBMSs. With its industry-oriented design, Ratel improves the feedback precision, enhances the robustness of input generation, and performs an online investigation on the root cause of bugs. As a result, Ratel outperformed other fuzzers in terms of coverage and bugs. Compared to industrial black box fuzzers SQLsmith and SQLancer, as well as coverage-guided academic fuzzer Squirrel, Ratel covered 38.38%, 106.14%, 583.05% more basic blocks than the best results of other three fuzzers in GaussDB, PostgreSQL, and Comdb2, respectively. More importantly, Ratel has discovered 32, 42, and 5 unknown bugs in GaussDB, Comdb2, and PostgreSQL.", "venue": "2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2021-03-01", "journal": {"name": "2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)", "pages": "328-337"}, "authors": [{"authorId": "2433617", "name": "Mingzhe Wang"}, {"authorId": "2146253995", "name": "Zhiyong Wu"}, {"authorId": null, "name": "Xinyi Xu"}, {"authorId": "2118673419", "name": "Jie Liang"}, {"authorId": "83359050", "name": "Chijin Zhou"}, {"authorId": "145454088", "name": "Huafeng Zhang"}, {"authorId": "152771714", "name": "Yu Jiang"}], "citations": [{"paperId": "5ff9885778f8ec824beaeb6802af5c82e299f702", "title": "A Comprehensive Survey on Database Management System Fuzzing: Techniques, Taxonomy and Experimental Comparison"}, {"paperId": "c4a6a53c4c859e6d4c71ae122272a5e7bf91a163", "title": "Towards Better Semantics Exploration for Browser Fuzzing"}, {"paperId": "6200bb7acb7f2d10f5111f75a895ef4e74b81389", "title": "An empirical study on configuration-related branch statement in database management system"}, {"paperId": "a3f904ba97221a2e65f6ac9e34f3403e287e0a49", "title": "DAFuzz: data-aware fuzzing of in-memory data stores"}, {"paperId": "6c755fc901d0b41a5d73c265f64a5aacf62e83b8", "title": "GDsmith: Detecting Bugs in Cypher Graph Database Engines"}, {"paperId": "ac90874516a505e075ca20123f3d648075aa8e63", "title": "Daisy: Effective Fuzz Driver Synthesis with Object Usage Sequence Analysis"}, {"paperId": "0b083953239d0617b534a0d76762fa8350db4e6f", "title": "Randomized Differential Testing of RDF Stores"}, {"paperId": "5724e138fc08329e0baa08d2090d9424df1cb945", "title": "Testing Database Systems via Differential Query Execution"}, {"paperId": "cb1822da92c680e69885b1b70343ba0facd4f0b8", "title": "Understanding and Detecting On-The-Fly Configuration Bugs"}, {"paperId": "a9fa1a56ba118fa3b629fc6308d6b5606751f023", "title": "Detecting Isolation Bugs via Transaction Oracle Construction"}, {"paperId": "470754e17de89081f63dde4719922fe9b63251d5", "title": "Large Language Models are Edge-Case Fuzzers: Testing Deep Learning Libraries via FuzzGPT"}, {"paperId": "058f7a552121c7417e783c995f8bc584d09b3eff", "title": "Sequence-Oriented DBMS Fuzzing"}, {"paperId": "5b15efecca0f9f42e9d7842a8ec6689d2f45bc6a", "title": "Griffin : Grammar-Free DBMS Fuzzing"}, {"paperId": "148b13a52caf2c28ad00034b72780c3d1d04eed5", "title": "SPIDER: A Practical Fuzzing Framework to Uncover Stateful Performance Issues in SDN Controllers"}, {"paperId": "1ac6b3a3904b6c9022206be7c0b9d180b84b1fb4", "title": "Unicorn: detect runtime errors in time-series databases with hybrid input synthesis"}, {"paperId": "6c8ad2d2e977e0a45d987959fc3e4adcde10e4ca", "title": "Fuzzing DBMS via NNLM"}, {"paperId": "71dd291b4be0d074982f521ff654468755084a76", "title": "GDsmith: Detecting Bugs in Graph Database Engines"}, {"paperId": "e87c67ba2787bde2ae00f9bc23fb8e135c4d9508", "title": "Odin: on-demand instrumentation with on-the-fly recompilation"}, {"paperId": "8958ed9b0410e3f5f3a3ab2f4391c052c1ae25e1", "title": "Rtkaller: State-aware Task Generation for RTOS Fuzzing"}, {"paperId": "3a7373bd891702ae93d7e058241a7e8be25e89eb", "title": "DynSQL: Stateful Fuzzing for Database Management Systems with Complex and Valid SQL Query Generation"}, {"paperId": "c5c2bcb84acde8c7fe8964aba2d6d27f220ae80b", "title": "Pinolo: Detecting Logical Bugs in Database Management Systems with Approximate Query Synthesis"}, {"paperId": "77faa12e3aa52f3cb41009e9e8f65c79c9ef9f42", "title": "Detecting Logical Bugs of DBMS with Coverage-based Guidance"}, {"paperId": "1b209b2da737fd26c50a2cb9116c73c9d1db904e", "title": "DBStorm: A Cost-effective Approach for Generating Valid Workload to Test Transaction Processing"}]}
