{"paperId": "dea3cac9612d5681f0b30579b6df9532ee1548e6", "publicationVenue": {"id": "1c2ab05c-7d69-465e-929d-0920857aedce", "name": "International Conference on Automated Software Engineering", "type": "conference", "alternate_names": ["Autom Softw Eng", "ASE", "Automated Software Engineering", "Int Conf Autom Softw Eng"], "url": "http://ase.informatik.uni-essen.de/"}, "title": "BuildSonic: Detecting and Repairing Performance-Related Configuration Smells for Continuous Integration Builds", "abstract": "Despite the benefits, continuous integration (CI) can incur high costs. One of the well-recognized costs is long build time, which greatly affects the speed of software development and increases the cost in computational resources. While there exist configuration options in the CI infrastructure to accelerate builds, the CI infrastructure is often not optimally configured, leading to CI configuration smells. Attempts have been made to detect or repair CI configuration smells. However, none of them is specifically designed to improve build performance in CI. In this paper, we first create a catalog of 20 performance-related CI configuration smells (PCSs) in three tools (i.e., Travis CI, Maven and Gradle) of the CI infrastructure for Java projects. Then, we propose an automated approach, named BuildSonic, to detect and repair 15 types of PCSs by analyzing configuration files. We have conducted large-scale experiments to evaluate BuildSonic. We detected 20,318 PCSs in 99.0% of the 4,140 Java projects, with a precision of 0.998 and a recall of 0.991. We submitted 1,138 pull requests for sampled PCSs of each PCS type, 246 and 11 of which have been respectively merged and accepted by developers. We successfully triggered CI builds before and after merging 288 pull requests, and observed an average build performance improvement of 12.4% after repairing a PCS.", "venue": "International Conference on Automated Software Engineering", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2022-10-10", "journal": {"name": "Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering"}, "authors": [{"authorId": "2111575377", "name": "Chen Zhang"}, {"authorId": "144943089", "name": "Bihuan Chen"}, {"authorId": "2117230712", "name": "Junhao Hu"}, {"authorId": "2152488627", "name": "Xin Peng"}, {"authorId": "2636713", "name": "Wenyun Zhao"}], "citations": [{"paperId": "7a6a3066907388d2de32a9304c2cc9aa5bf9ba0c", "title": "Semantic configuration model with natural transformations"}, {"paperId": "37a37fc62e2d77b5791d3b4235120ce6719f59ae", "title": "Do Developers Fix Continuous Integration Smells?"}, {"paperId": "c5e4d3ef6d61cbeea895863856501e2e35a67dd0", "title": "Optimizing Continuous Development by Detecting and Preventing Unnecessary Content Generation"}]}
