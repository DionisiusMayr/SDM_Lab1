{"paperId": "a4ecbcb9d1bc0edeb965685e2f32b7269ca7e8f2", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Massively Parallel Computation and Sublinear-Time Algorithms for Embedded Planar Graphs", "abstract": "While algorithms for planar graphs have received a lot of attention, few papers have focused on the additional power that one gets from assuming an embedding of the graph is available. While in the classic sequential setting, this assumption gives no additional power (as a planar graph can be embedded in linear time), we show that this is far from being the case in other settings. We assume that the embedding is straight-line, but our methods also generalize to non-straight-line embeddings. Speci\ufb01cally, we focus on sublinear-time computation and massively parallel computation (MPC). Our main technical contribution is a sublinear-time algorithm for computing a relaxed version of an r -division. We then show how this can be used to estimate Lipschitz additive graph parameters. This includes, for example, the maximum matching, maximum independent set, or the minimum dominating set. We also show how this can be used to solve some property testing problems with respect to the vertex edit distance. In the second part of our paper, we show an MPC algorithm that computes an r -division of the input graph. We show how this can be used to solve various classical graph problems with space per machine of O ( n 2 / 3+ (cid:15) ) for some (cid:15) > 0, and while performing O (1) rounds. One needs \u2126(log n ) rounds with n 1 \u2212 \u2126(1) space per machine without the embedding to solve these problems, assuming the 1-vs-2-cycles conjecture. Among the problems solved by our approach are: counting connected components, bipartition, minimum spanning tree problem, O (1)-approximate shortest paths, O (1)-approximate diameter/radius. Our techniques however also apply to other problems. In conjunction with existing algorithms for computing the Delaunay triangulation, our results imply an MPC algorithm for Euclidean minimum spanning three that uses O ( n 2 / 3+ (cid:15) ) space per machine and performs O (", "venue": "arXiv.org", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal": {"name": "ArXiv", "volume": "abs/2204.09035"}, "authors": [{"authorId": "1902819", "name": "J. Holm"}, {"authorId": "51951176", "name": "Jakub Tvetek"}], "citations": [{"paperId": "4ca30a51eab9718f23d1721ed15a4f4e82718c96", "title": "Bias Reduction for Sum Estimation"}]}
