{"paperId": "e2c2de7a319583f7a3e36356383ef05f376b09f7", "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b", "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names": ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"}, "title": "Henge: Intent-driven Multi-Tenant Stream Processing", "abstract": "We present Henge, a system to support intent-based multi-tenancy in modern distributed stream processing systems. Henge supports multi-tenancy as a first-class citizen: everyone in an organization can now submit their stream processing jobs to a single, shared, consolidated cluster. Secondly, Henge allows each job to specify its own intents (i.e., requirements) as a Service Level Objective (SLO) that captures latency and/or throughput needs. In such an intent-driven multi-tenant cluster, the Henge scheduler adapts continually to meet jobs' respective SLOs in spite of limited cluster resources, and under dynamically varying workloads. SLOs are soft and are based on utility functions. Henge's overall goal is to maximize the total system utility achieved by all jobs in the system. Henge is integrated into Apache Storm and we present experimental results using both production jobs from Yahoo! and real datasets from Twitter.", "venue": "ACM Symposium on Cloud Computing", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2018-01-31", "journal": {"name": "Proceedings of the ACM Symposium on Cloud Computing"}, "authors": [{"authorId": "8124005", "name": "Faria Kalim"}, {"authorId": "153152418", "name": "Le Xu"}, {"authorId": "35838422", "name": "Sharanya Bathey"}, {"authorId": "35923864", "name": "Richa Meherwal"}, {"authorId": "143720373", "name": "Indranil Gupta"}], "citations": [{"paperId": "c44b23f6b060f3004b5b243c4afbf7c1cb778f52", "title": "Dirigo: Self-scaling Stateful Actors For Serverless Real-time Data Processing"}, {"paperId": "b4a7c65ae255ffd2acc44c38fa1f3b6d85b12bc9", "title": "StreamOps: Cloud-Native Runtime Management for Streaming Services in ByteDance"}, {"paperId": "b4258742a640151fa863092bed7f35d25dd92ab5", "title": "Shepherd: Seamless Stream Processing on the Edge"}, {"paperId": "249e261452dd5418c5212ffc0a50d1e153c77791", "title": "SIMPPO: a scalable and incremental online learning framework for serverless resource management"}, {"paperId": "2a6baff0ce9f752f43691687cfdcff5cf6eb048f", "title": "Runtime Adaptation of Data Stream Processing Systems: The State of the Art"}, {"paperId": "9aaa896c495293d0519e8ccdbf3c49cf833a8656", "title": "Trisk: Task-Centric Data Stream Reconfiguration"}, {"paperId": "d0137f41e2388ba5b01c61d31ecedbc2e4a73963", "title": "Hone: Mitigating Stragglers in Distributed Stream Processing With Tuple Scheduling"}, {"paperId": "119da67cb0923048120cdb0b990efd24973eebc4", "title": "Move Fast and Meet Deadlines: Fine-grained Real-time Stream Processing with Cameo"}, {"paperId": "db633d5a36df1155ed877926a371a925d112bbe4", "title": "A Distributed Stream Processing Middleware Framework for Real-Time Analysis of Heterogeneous Data on Big Data Platform: Case of Environmental Monitoring"}, {"paperId": "3d5e9ba7b5e68a8aa86a0f0d587f4d0bdf348d34", "title": "Enactment of adaptation in data stream processing with latency implications - A systematic literature review"}, {"paperId": "0b6f391b39bd8d07eb82ff40ab013f797ccc9657", "title": "Caladrius: A Performance Modelling Service for Distributed Stream Processing Systems"}, {"paperId": "b4b27ea6167337763c2bf80d6a9fd3aee1113b4d", "title": "Cilantro: Performance-Aware Resource Allocation for General Objectives via Online Feedback"}, {"paperId": "2b76b31eb9008e8209b76a9626d24aa2f9a06018", "title": "Adaptive Online Cache Capacity Optimization via Lightweight Working Set Size Estimation at Scale"}, {"paperId": "5e8aa2fdfdc6839c629441a5f2a8ceb3399a04ee", "title": "Sponge: Fast Reactive Scaling for Stream Processing with Serverless Frameworks"}, {"paperId": "725046c474ff5523d267a8dc3177b25844d3eacd", "title": "Whiz: Data-Driven Analytics Execution"}, {"paperId": "1f9623e3b1b631bc7648ace17cb45e8e5c5cb77c", "title": "Shuffle Grouping Fields Grouping Spout Count Count Splitter Metrics Manager Stream Manager Container 2 Spout Count Count Splitter Stream Manager Stream Manager Splitter Splitter Stream Manager Stream Manager Count Count Count Count"}]}
