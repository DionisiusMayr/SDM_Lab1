{"paperId": "6d1814d08f240d0efde960e12d027b6bede3405d", "publicationVenue": null, "title": "FactorJoin: A New Cardinality Estimation Framework for Join Queries", "abstract": "Cardinality estimation is one of the most fundamental and challenging problems in query optimization. Neither classical nor learning-based methods yield satisfactory performance when estimating the cardinality of the join queries. They either rely on simplified assumptions leading to ineffective cardinality estimates or build large models to understand the complicated data distributions, leading to long planning times and a lack of generalizability across queries. In this paper, we propose a new framework FactorJoin for estimating join queries. FactorJoin combines the idea behind the classical join-histogram method to efficiently handle joins with the learning-based methods to accurately capture attribute correlation Specifically, FactorJoin scans every table in a DB and builds single-table conditional distributions during an offline preparation phase. When a join query comes, FactorJoin translates it into a factor graph model over the learned distributions to effectively and efficiently estimate its cardinality. Unlike existing learning-based methods, FactorJoin does not need to de-normalize joins upfront or require executed query workloads to train the model. Since it only relies on single-table statistics, FactorJoin has a small space overhead and is extremely easy to train and maintain. In our evaluation, FactorJoin can produce more effective estimates than the previous state-of-the-art learning-based methods, with 40x less estimation latency, 100x smaller model size, and 100x faster training speed at comparable or better accuracy. In addition, FactorJoin can estimate 10,000 sub-plan queries within one second to optimize the query plan, which is very close to the traditional cardinality estimators in commercial DBMS.", "venue": "Proc. ACM Manag. Data", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-12-11", "journal": {"name": "Proceedings of the ACM on Management of Data", "pages": "1 - 27", "volume": "1"}, "authors": [{"authorId": "2109685286", "name": "Ziniu Wu"}, {"authorId": "50816104", "name": "Parimarjan Negi"}, {"authorId": "79404966", "name": "Mohammad Alizadeh"}, {"authorId": "1746961", "name": "Tim Kraska"}, {"authorId": "2053630301", "name": "Sam Madden"}], "citations": [{"paperId": "bfb2b0b0d0621ea4de93fb960d45a4c5bbabcc38", "title": "ByteCard: Enhancing ByteDance's Data Warehouse with Learned Cardinality Estimation"}, {"paperId": "551ff631d62b524cae31f44fb9af2ad812db5cfb", "title": "Stage: Query Execution Time Prediction in Amazon Redshift"}, {"paperId": "b76e903b9f1a9c7c51962a79eda10885efda1d35", "title": "Sample-Efficient Cardinality Estimation Using Geometric Deep Learning"}, {"paperId": "cb05ef87cf3c8616626e3648f6a4146199acf57f", "title": "Machine Unlearning in Learned Databases: An Experimental Analysis"}, {"paperId": "b53e3a987571564332cd0a40da2a8eb164cadb7d", "title": "ALECE: An Attention-based Learned Cardinality Estimator for SPJ Queries on Dynamic Workloads (Extended)"}, {"paperId": "3dd82e0ab1e141e0e57f2807a5123458f6b1388e", "title": "ShadowAQP: Efficient Approximate Group-by and Join Query via Attribute-oriented Sample Size Allocation and Data Generation"}, {"paperId": "75d7e643f1e1f071213a712fe407a73336d23465", "title": "Cardinality estimation of activity trajectory similarity queries using deep learning"}, {"paperId": "86504845c4f0544bfca5a9fbc89f3ae2a3685adb", "title": "Check Out the Big Brain on BRAD: Simplifying Cloud Data Processing with Learned Automated Data Meshes"}, {"paperId": "8dcd6fb14077a738592bb3a19ba54e5b1f04f47c", "title": "Compiling Discrete Probabilistic Programs for Vectorized Exact Inference"}, {"paperId": "ab46b919ed09cf213467463541170c6ab7845087", "title": "Robust Query Driven Cardinality Estimation under Changing Workloads"}]}
