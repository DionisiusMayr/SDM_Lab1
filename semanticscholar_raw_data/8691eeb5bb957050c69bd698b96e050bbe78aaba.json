{"paperId": "8691eeb5bb957050c69bd698b96e050bbe78aaba", "publicationVenue": {"id": "e4f51561-5050-4b9c-87c2-c49957677fbf", "name": "European Conference on Computer Systems", "type": "conference", "alternate_names": ["Eur Conf Comput Syst", "EuroSys"], "url": "http://www.eurosys.org/"}, "title": "Subway: minimizing data transfer during out-of-GPU-memory graph processing", "abstract": "In many graph-based applications, the graphs tend to grow, imposing a great challenge for GPU-based graph processing. When the graph size exceeds the device memory capacity (i.e., GPU memory oversubscription), the performance of graph processing often degrades dramatically, due to the sheer amount of data transfer between CPU and GPU. To reduce the volume of data transfer, existing approaches track the activeness of graph partitions and only load the ones that need to be processed. In fact, the recent advances of unified memory implements this optimization implicitly by loading memory pages on demand. However, either way, the benefits are limited by the coarse-granularity activeness tracking - each loaded partition or memory page may still carry a large ratio of inactive edges. In this work, we present, to the best of our knowledge, the first solution that only loads active edges of the graph to the GPU memory. To achieve this, we design a fast subgraph generation algorithm with a simple yet efficient subgraph representation and a GPU-accelerated implementation. They allow the subgraph generation to be applied in almost every iteration of the vertex-centric graph processing. Furthermore, we bring asynchrony to the subgraph processing, delaying the synchronization between a subgraph in the GPU memory and the rest of the graph in the CPU memory. This can safely reduce the needs of generating and loading subgraphs for many common graph algorithms. Our prototyped system, Subway (subgraph processing with asynchrony) yields over 4X speedup on average comparing with existing out-of-GPU-memory solutions and the unified memory-based approach, based on an evaluation with six common graph algorithms.", "venue": "European Conference on Computer Systems", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2020-04-15", "journal": {"name": "Proceedings of the Fifteenth European Conference on Computer Systems"}, "authors": [{"authorId": "2064923735", "name": "Amir Hossein Nodehi Sabet"}, {"authorId": "47122839", "name": "Zhijia Zhao"}, {"authorId": "2110340773", "name": "Rajiv Gupta"}], "citations": [{"paperId": "aae7a3652d1d16c0958ab3c5eea250ba9eafc86a", "title": "INFINEL: An efficient GPU-based processing method for unpredictable large output graph queries"}, {"paperId": "439f218381f0569f4c660b56e8685ca345e2c744", "title": "Reduce, Reuse, and Adapt: Accelerating Graph Processing on GPUs"}, {"paperId": "6e419d87084f8cc153f79f6c399e48092ba237b0", "title": "HongTu: Scalable Full-Graph GNN Training on Multiple GPUs"}, {"paperId": "e52a7a8b6fe27420749af97dc983e1dadab3afea", "title": "GPU Graph Processing on CXL-Based Microsecond-Latency External Memory"}, {"paperId": "ae1d0f32e24bafed0539b9b7152949db50ea1460", "title": "OneGraph: a cross-architecture framework for large-scale graph computing on GPUs based on oneAPI"}, {"paperId": "a6497d6e4ce02693cdc54401b1df27b609fd8757", "title": "HKTGNN: Hierarchical Knowledge Transferable Graph Neural Network-based Supply Chain Risk Assessment"}, {"paperId": "4533045a6e550796638c0d2d8b51237d0a2a45c5", "title": "MEGA Evolving Graph Accelerator"}, {"paperId": "7a320a1c521be53de9df9f7ea1e1973f2897e5c9", "title": "Performance Implications of Async Memcpy and UVM: A Tale of Two Data Transfer Modes"}, {"paperId": "e1e8c693632e69e9560d09d0f858341486d0d597", "title": "JVAP: A Joint Video Acceleration Processing Architecture for Online Edge Systems"}, {"paperId": "e52549fdb6be6d36071143764b8d8862aabb930c", "title": "Optimizing GPU-Based Graph Sampling and Random Walk for Efficiency and Scalability"}, {"paperId": "b026fa23f0f73e18004a0ac909476cb205ff967e", "title": "EGraph: Efficient Concurrent GPU-Based Dynamic Graph Processing"}, {"paperId": "be2f8368f414c4806b37bcf2d2283391d3680ca3", "title": "Liberator: A Data Reuse Framework for Out-of-Memory Graph Computing on GPUs"}, {"paperId": "5e08cdaa5bcaa5e3ee75fdb6ddb9b04d6e8795a8", "title": "FSGraph: fast and scalable implementation of graph traversal on GPUs"}, {"paperId": "a4959bdd6780f1c801cd5a63ea60f23fd77d3665", "title": "Traversing Large Compressed Graphs on GPUs"}, {"paperId": "79af8667ea55f0bf63462ee807d001d900754b27", "title": "GAMMA: A Graph Pattern Mining Framework for Large Graphs on GPU"}, {"paperId": "44775b43d0f55d0d8b94beb1fe8b76ad64270cbb", "title": "LightTraffic: On Optimizing CPU-GPU Data Traffic for Efficient Large-scale Random Walks"}, {"paperId": "1d4f8f69f90f5479d1dff65fa10650b449fae3e2", "title": "End-to-End LU Factorization of Large Matrices on GPUs"}, {"paperId": "27c36cea72db228d5cbc5e112a6a912d838a9cf4", "title": "CommonGraph: Graph Analytics on Evolving Data"}, {"paperId": "3f5701f0b8ae2a039635d2486123f52bb6a1711c", "title": "Glign: Taming Misaligned Graph Traversals in Concurrent Graph Processing"}, {"paperId": "cdaa30519029d0e0d7c545dbfefe94dc4e333ef3", "title": "BARM: A Batch-Aware Resource Manager for Boosting Multiple Neural Networks Inference on GPUs With Memory Oversubscription"}, {"paperId": "9ca0f04c432d19de7db252e47a3b63d48944d9c3", "title": "UVM Discard: Eliminating Redundant Memory Transfers for Accelerators"}, {"paperId": "17f3d9b84c21cfc313d5c11f9efba37605cade94", "title": "Software Systems Implementation and Domain-Specific Architectures towards Graph Analytics"}, {"paperId": "3b9e59e91d99a49122124b25d58e8a1a887e448b", "title": "HyTGraph: GPU-Accelerated Graph Processing with Hybrid Transfer Management"}, {"paperId": "2cf170d49339371e93c4b050de09bb8f979369b6", "title": "Scaling and Selecting GPU Methods for All Pairs Shortest Paths (APSP) Computations"}, {"paperId": "e14409fa9ac7ac6d1f9beaad4761f871ae640ccb", "title": "PERKS: a Locality-Optimized Execution Model for Iterative Memory-bound GPU Applications"}, {"paperId": "789f8b0ac4ebd1a3f7aca76e3a4b7335703a1a4c", "title": "Detection of fickle trolls in large-scale online social networks"}, {"paperId": "f2259b785c76fdd285ae574ba38dd56ca6900865", "title": "Unified-memory-based hybrid processing for partition-oriented subgraph matching on GPU"}, {"paperId": "e086c4da3565ce7315e3d8639a3cd62ec792d388", "title": "PERFORMANCE ENHANCEMENT OF CUDA APPLICATIONS BY OVERLAPPING DATA TRANSFER AND KERNEL EXECUTION"}, {"paperId": "4595404a30579368ffb6f15f0b96cf346c5d0658", "title": "LargeGraph"}, {"paperId": "dfcd4cbd47b17eb60392ff918e2b5191921b503e", "title": "Skywalker: Efficient Alias-Method-Based Graph Sampling and Random Walk on GPUs"}, {"paperId": "63a6fddd6ef73cf0594bfe2bde58a31a804de1b2", "title": "Ascetic: Enhancing Cross-Iterations Data Efficiency in Out-of-Memory Graph Processing on GPUs"}, {"paperId": "e5d878e57f4ffff999abe5a69a0abd7a6c418dbb", "title": "Self-adaptive Graph Traversal on GPUs"}, {"paperId": "341b47125034ffd3792fae05d91b1baea990cd30", "title": "Tripoline: generalized incremental graph processing via graph triangle inequality"}, {"paperId": "3eabdfc1e8ebc3c3a5b40676ad6cc55dad2469ef", "title": "Large Graph Convolutional Network Training with GPU-Oriented Data Communication Architecture"}, {"paperId": "a92ac38658b3a7f75e1836b9d9b6c41b21c40d79", "title": "Compiling Graph Applications for GPU s with GraphIt"}, {"paperId": "7035388f963546e6544b31fd8f0e0246d31c5900", "title": "Efficient Execution of Graph Algorithms on CPU with SIMD Extensions"}, {"paperId": "b37c5a96fe2f3389d9fe3addb8812634abb82164", "title": "Grus"}, {"paperId": "4b798d2886e1f3fc214676b731e6e306eb1cfa74", "title": "PyTorch-Direct: Enabling GPU Centric Data Access for Very Large Graph Neural Network Training with Irregular Accesses"}, {"paperId": "76031ea3119e840798d4aef5cfe3c55814077698", "title": "Compliation Techniques for Graphs Algorithms on GPUs"}, {"paperId": "974a06b07fc2d51b14a37d1fca5cb16ee1fef306", "title": "Compilation Techniques for Graph Algorithms on GPUs"}, {"paperId": "528ff02f6d6505bd121107edd69ab9c777a53d7e", "title": "Accelerating graph sampling for graph machine learning using GPUs"}, {"paperId": "a2976770da75e2144ae02e737e8211cc05255ec9", "title": "NextDoor: GPU-Based Graph Sampling for Graph Machine Learning"}, {"paperId": "465a768ffbf42834d07168e40bf6f657ed7e3e0d", "title": "EMOGI: Efficient Memory-access for Out-of-memory Graph-traversal In GPUs"}, {"paperId": "f0055eb0d2d8f347a3ad9b1143e8048ced07d06c", "title": "R"}, {"paperId": "1317840becf93e27ca43cd2ecb05c055cbdff371", "title": "R"}, {"paperId": "99e568d08ad43f1dc9e9ad3fe138e90e6d5bcefe", "title": "Wukong+G: Fast and Concurrent RDF Query Processing Using RDMA-assisted GPU Graph Exploration"}, {"paperId": "19ef7e9d6f3b4fc6a50a83541940c7520eebbca9", "title": "R"}, {"paperId": "096819782ce34058faa7ad3d81c9b3d49a5cf527", "title": "Core Graph: Exploiting Edge Centrality to Speedup the Evaluation of Iterative Graph Queries"}]}
