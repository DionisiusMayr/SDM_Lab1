{"paperId": "25e690f954404b7cfc08c3c2c1b8a4e3f7c30056", "publicationVenue": {"id": "0942fb86-c16f-4084-9902-10ddcfe18180", "name": "Micro", "type": "conference", "alternate_names": ["Int Symp Microarchitecture", "MICRO", "International Symposium on Microarchitecture", "Annual IEEE/ACM International Symposium on Microarchitecture", "Annu IEEE/ACM Int Symp Microarchitecture"], "issn": "0271-9002", "alternate_issns": ["2151-4143", "2673-8023"], "url": "http://www.microarch.org/"}, "title": "Improving Address Translation in Multi-GPUs via Sharing and Spilling aware TLB Design", "abstract": "In recent years, the ever-growing application complexity and input dataset sizes have driven the popularity of multi-GPU systems as a desirable computing platform for many application domains. While employing multiple GPUs intuitively exposes substantial parallelism for the application acceleration, the delivered performance rarely scales with the number of GPUs. One of the major challenges behind is the address translation efficiency. Many prior works focus on CPUs or single GPU execution scenarios while the address translation in multi-GPU systems receives little attention. In this paper, we conduct a comprehensive investigation of the address translation efficiency in both \u201csingle-application-multi-GPU\u201d and \u201cmulti-application-multi-GPU\u201d execution paradigms. Based on our observations, we propose a new TLB hierarchy design, called least-TLB, tailored for multi-GPU systems and effectively improves the TLB performance with minimal hardware overheads. Experimental results on 9 single-application workloads and 10 multi-application workloads indicate the proposed least-TLB improves the performances, on average, by 23.5% and 16.3%, respectively.", "venue": "Micro", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2021-10-17", "journal": {"name": "MICRO-54: 54th Annual IEEE/ACM International Symposium on Microarchitecture"}, "authors": [{"authorId": "30306544", "name": "Bingyao Li"}, {"authorId": "3160909", "name": "Jieming Yin"}, {"authorId": "1686367", "name": "Youtao Zhang"}, {"authorId": "8573809", "name": "Xulong Tang"}], "citations": [{"paperId": "daac6116da574ae21551a9f0037972067257b5b2", "title": "GRIT: Enhancing Multi-GPU Performance with Fine-Grained Dynamic Page Placement"}, {"paperId": "cea663d26d1ec0af3c59bb9ea34f80e6467c1928", "title": "H3DM: A High-bandwidth High-capacity Hybrid 3D Memory Design for GPUs"}, {"paperId": "e630103f8b9f90566b826cc2b812d2caf7070edd", "title": "mNPUsim: Evaluating the Effect of Sharing Resources in Multi-core NPUs"}, {"paperId": "f3d3455aabaea1ba4f57480e161735497cfd5804", "title": "GPU Performance Acceleration via Intra-Group Sharing TLB"}, {"paperId": "a7fce47bb4bb8b5f81599792e0801aa100516cf1", "title": "Orchestrated Scheduling and Partitioning for Improved Address Translation in GPUs"}, {"paperId": "c5c352960229da0019fa5488e9c2446792c8f8cb", "title": "Trans-FW: Short Circuiting Page Table Walk in Multi-GPU Systems via Remote Forwarding"}, {"paperId": "2f540a42d18fbff04d235743fab2fd5eb4f46da5", "title": "SnakeByte: A TLB Design with Adaptive and Recursive Page Merging in GPUs"}, {"paperId": "5536d5aa186068629fd54f11ab7dc9acda815edb", "title": "Designing Virtual Memory System of MCM GPUs"}, {"paperId": "a7ce23dd425c3f897d1805e66d3a15eccd10f5ff", "title": "Enhancing GPU Performance via Neighboring Directory Table Based Inter-TLB Sharing"}, {"paperId": "50d4f2e299dcddfacd9ecf20807e53d4169b1855", "title": "LITE: a low-cost practical inter-operable GPU TEE"}]}
