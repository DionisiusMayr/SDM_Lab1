{"paperId": "55a4e4a42cd86fac55491d089d07d04f09dcf957", "publicationVenue": null, "title": "Detecting optimization bugs in database engines via non-optimizing reference engine construction", "abstract": "Database Management Systems (DBMS) are used ubiquitously. To efficiently access data, they apply sophisticated optimizations. Incorrect optimizations can result in logic bugs, which cause a query to compute an incorrect result set. We propose Non-Optimizing Reference Engine Construction (NoREC), a fully-automatic approach to detect optimization bugs in DBMS. Conceptually, this approach aims to evaluate a query by an optimizing and a non-optimizing version of a DBMS, to then detect differences in their returned result set, which would indicate a bug in the DBMS. Obtaining a non-optimizing version of a DBMS is challenging, because DBMS typically provide limited control over optimizations. Our core insight is that a given, potentially randomly-generated optimized query can be rewritten to one that the DBMS cannot optimize. Evaluating this unoptimized query effectively corresponds to a non-optimizing reference engine executing the original query. We evaluated NoREC in an extensive testing campaign on four widely-used DBMS, namely PostgreSQL, MariaDB, SQLite, and CockroachDB. We found 159 previously unknown bugs in the latest versions of these systems, 141 of which have been fixed by the developers. Of these, 51 were optimization bugs, while the remaining were error and crash bugs. Our results suggest that NoREC is effective, general and requires little implementation effort, which makes the technique widely applicable in practice.", "venue": "ESEC/SIGSOFT FSE", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2020-07-16", "journal": {"name": "Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering"}, "authors": [{"authorId": "2868147", "name": "Manuel Rigger"}, {"authorId": "38319925", "name": "Z. Su"}], "citations": [{"paperId": "428d0ae6be2e3e5146c2ca166fc7e64848929297", "title": "Finding Cross-rule Optimization Bugs in Datalog Engines"}, {"paperId": "321f669f888e43e8f44390985a5da2d3fabe8a7e", "title": "Detecting Logic Bugs in Graph Database Management Systems via Injective and Surjective Graph Query Transformation"}, {"paperId": "1072e6d03a19b157356c5da57257b2b92eefc68c", "title": "Effective Bug Detection in Graph Database Engines: An LLM-based Approach"}, {"paperId": "c39d40e3127a56a0abe12f2fb1d698ea6ba1724d", "title": "Finding XPath Bugs in XML Document Processors via Differential Testing"}, {"paperId": "95db0384945786d61210ca73bf62b5e59bbe266e", "title": "Detecting DBMS Bugs with Context-Sensitive Instantiation and Multi-Plan Execution"}, {"paperId": "ac441cb1810dce8e41d9cd554366b72aa182bf41", "title": "Testing Graph Database Systems via Graph-Aware Metamorphic Relations"}, {"paperId": "b0b3eecc7e3953547ae24a909d5967240c19f373", "title": "Adapting Performance Analytic Techniques in a Real-World Database-Centric System: An Industrial Experience Report"}, {"paperId": "5ff9885778f8ec824beaeb6802af5c82e299f702", "title": "A Comprehensive Survey on Database Management System Fuzzing: Techniques, Taxonomy and Experimental Comparison"}, {"paperId": "cc095f9ce71982a8dcc0ea1b813a7486b3f6c962", "title": "Retromorphic Testing: A New Approach to the Test Oracle Problem"}, {"paperId": "7c4173e9df28137dcf56cfd0f13c1d0dd11908f3", "title": "A Demonstration of DLBD: Database Logic Bug Detection System"}, {"paperId": "86a60acfe93752af1159dea65d01808134754467", "title": "GrayC: Greybox Fuzzing of Compilers and Analysers for C"}, {"paperId": "a2a514ed839dafdd0fb76d6c2615f25f35bf8087", "title": "Testing Graph Database Engines via Query Partitioning"}, {"paperId": "dc1cc47e14653eb9a834f44a39273c1a2e2de4ae", "title": "Exploring Missed Optimizations in WebAssembly Optimizers"}, {"paperId": "6c755fc901d0b41a5d73c265f64a5aacf62e83b8", "title": "GDsmith: Detecting Bugs in Cypher Graph Database Engines"}, {"paperId": "a4ec52e8b18e41359cf87097efae760905c27115", "title": "CERT: Finding Performance Issues in Database Systems Through the Lens of Cardinality Estimation"}, {"paperId": "e9db272057833ba69d1c6e9ecbb992af02ce25a9", "title": "Detecting Hidden Failures of DBMS: A Comprehensive Metamorphic Relation Output Patterns Approach"}, {"paperId": "728c97e05665b2e966a1b17abc5d6d4eaf7e136f", "title": "Detecting Logic Bugs of Join Optimizations in DBMS"}, {"paperId": "a9fa1a56ba118fa3b629fc6308d6b5606751f023", "title": "Detecting Isolation Bugs via Transaction Oracle Construction"}, {"paperId": "ec682d9c7d68149dcd8932acd01a751f2f8b5611", "title": "Testing Database Engines via Query Plan Guidance"}, {"paperId": "5724e138fc08329e0baa08d2090d9424df1cb945", "title": "Testing Database Systems via Differential Query Execution"}, {"paperId": "0b083953239d0617b534a0d76762fa8350db4e6f", "title": "Randomized Differential Testing of RDF Stores"}, {"paperId": "35b7f91900e5d37aaf160bb0590a812754fd3137", "title": "A Comprehensive Study of Real-World Bugs in Machine Learning Model Optimization"}, {"paperId": "058f7a552121c7417e783c995f8bc584d09b3eff", "title": "Sequence-Oriented DBMS Fuzzing"}, {"paperId": "03e0d8d1839045a6fd25080bbfa945b2801a2f3f", "title": "Finding Unstable Code via Compiler-Driven Differential Testing"}, {"paperId": "2616a143f10df0500639a93360521ea2d3706bfc", "title": "Intramorphic Testing: A New Approach to the Test Oracle Problem"}, {"paperId": "b3135c616d6267fe1d2b4ca9d27c8792c0acf3e5", "title": "Differentially Testing Database Transactions for Fun and Profit"}, {"paperId": "fb419d29d7be63fd12e809891f4abca66bcdff9d", "title": "Report from Dagstuhl Seminar 21442: Ensuring the Reliability and Robustness of Database Management Systems"}, {"paperId": "de7f728893406aa870766bad7b626f6eb774abcc", "title": "A Disjoint-Partitioning Approach to Enhancing Metamorphic Testing of DBMS"}, {"paperId": "1ac6b3a3904b6c9022206be7c0b9d180b84b1fb4", "title": "Unicorn: detect runtime errors in time-series databases with hybrid input synthesis"}, {"paperId": "e67a2817089312746d69b38ce9abfdc4b1bc69c3", "title": "Finding bugs in Gremlin-based graph database systems via Randomized differential testing"}, {"paperId": "6c8ad2d2e977e0a45d987959fc3e4adcde10e4ca", "title": "Fuzzing DBMS via NNLM"}, {"paperId": "71dd291b4be0d074982f521ff654468755084a76", "title": "GDsmith: Detecting Bugs in Graph Database Engines"}, {"paperId": "1f74989f2884e71ff09ca23f0c10e753bab9fcc9", "title": "Automatic Detection of Performance Bugs in Database Systems using Equivalent Queries"}, {"paperId": "ba2770c990b740b6dfa4a122ac4ad719868796dd", "title": "An Empirical Study on Quality Issues of eBay's Big Data SQL Analytics Platform"}, {"paperId": "18ad0da02b2207288a3fe7c19ee8d223a9ee3ef4", "title": "MT-Teql: Evaluating and Augmenting Neural NLIDB on Real-world Linguistic and Schema Variations"}, {"paperId": "6f07a14a3fe93d2938350e2a3b8ec16f3c27ac16", "title": "MTKeras: An Automated Metamorphic Testing Platform"}, {"paperId": "13cf48695d23f7e019d670a1bf059b7f28396992", "title": "Metamorphic testing of Datalog engines"}, {"paperId": "e27baad105b7fba74658580ed2fb7439328b053c", "title": "Duplicate-sensitivity Guided Transformation Synthesis for DBMS Correctness Bug Detection"}, {"paperId": "4ce512cdd51d4926d9353aca8a588a2414a0d305", "title": "Testing DBMS Performance with Mutations"}, {"paperId": "4bc8bd72ffa9bda2e3a7aef483008935a7a97656", "title": "Data-Oriented Differential Testing of Object-Relational Mapping Systems"}, {"paperId": "8356864e3802eaee426a1fec7ea838bf8d7d7e57", "title": "Industry Practice of Coverage-Guided Enterprise-Level DBMS Fuzzing"}, {"paperId": "d69216947188267d5537ee0f0501b2d960ecc457", "title": "Finding bugs in database systems via query partitioning"}, {"paperId": "ab6addb4b50a1af3f78fea402980648135d3b8c9", "title": "On the unusual effectiveness of type-aware operator mutations for testing SMT solvers"}, {"paperId": "26ca95a72994fdba1c1855eb6b699f98c992b5f4", "title": "Testing Database Engines via Pivoted Query Synthesis"}, {"paperId": "3a7373bd891702ae93d7e058241a7e8be25e89eb", "title": "DynSQL: Stateful Fuzzing for Database Management Systems with Complex and Valid SQL Query Generation"}, {"paperId": "c5c2bcb84acde8c7fe8964aba2d6d27f220ae80b", "title": "Pinolo: Detecting Logical Bugs in Database Management Systems with Approximate Query Synthesis"}, {"paperId": "77faa12e3aa52f3cb41009e9e8f65c79c9ef9f42", "title": "Detecting Logical Bugs of DBMS with Coverage-based Guidance"}, {"paperId": "74820ccf6c039c7745f8e1c30857dee61b243464", "title": "Automated Performance Bug Detection in Database Systems"}, {"paperId": "b6c64dbe0130ef1bf6af12266b958a5d5396101f", "title": "Differential Monitoring - Technical Report \u22c6"}, {"paperId": "f232b1bd730f6c4d4a48be5f642074dffb7a1ed0", "title": "Differential Monitoring"}, {"paperId": "9c8243cc846844f3af89a9ff742ba25947212bc8", "title": "Verifying Serializability Protocols With Version Order Recovery"}, {"paperId": "65a95db3f127442942085400fedd67dc8b61cda4", "title": "Ternary Logic Partitioning: Detecting Logic Bugs in Database Management Systems"}, {"paperId": "c8376be6e5d269467545de4edffe06bb2b74b1c7", "title": "Understanding Transaction Bugs in Database Systems"}, {"paperId": "5c47e23ec4d2d8c6641ce7671b2054a5fff1911f", "title": "Finding Bugs in Gremlin-Based Graph Database Systems via Randomized Differential Testing Graph database systems, differential testing, Gremlin"}]}
