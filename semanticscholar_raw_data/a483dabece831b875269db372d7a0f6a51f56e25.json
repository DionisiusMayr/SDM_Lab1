{"paperId": "a483dabece831b875269db372d7a0f6a51f56e25", "publicationVenue": {"id": "deedf64a-dd5c-4b33-b345-ff83bfb93d71", "name": "International Symposium on Computer Architecture", "type": "conference", "alternate_names": ["Int Symp Comput Archit", "ISCA"], "url": "http://www.cs.wisc.edu/~arch/www/"}, "title": "GraphABCD: Scaling Out Graph Analytics with Asynchronous Block Coordinate Descent", "abstract": "It is of vital importance to efficiently process large graphs for many data-intensive applications. As a result, a large collection of graph analytic frameworks has been proposed to improve the per-iteration performance on a single kind of computation resource. However, heavy coordination and synchronization overhead make it hard to scale out graph analytic frameworks from single platform to heterogeneous platforms. Furthermore, increasing the convergence rate, i.e. reducing the number of iterations, which is equally vital for improving the overall performance of iterative graph algorithms, receives much less attention.In this paper, we introduce the Block Coordinate Descent (BCD) view of graph algorithms and propose an asynchronous heterogeneous graph analytic framework, GraphABCD, using the BCD view. The BCD view offers key insights and trade-offs on achieving high convergence rate of iterative graph algorithms. GraphABCD features fast convergence under the algorithm design options suggested by BCD. GraphABCD offers algorithm and architectural supports for asynchronous execution, without undermining its fast convergence properties. With minimum synchronization overhead, GraphABCD is able to scale out to heterogeneous and distributed accelerators efficiently. To demonstrate GraphABCD, we prototype its whole system on Intel HARPv2 CPU-FPGA heterogeneous platform. Evaluations on HARPv2 show that GraphABCD achieves geo-mean speedups of 4.8x and 2.0x over GraphMat, a state-of-the-art framework in terms of convergence rate and execution time, respectively.", "venue": "International Symposium on Computer Architecture", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2020-05-01", "journal": {"name": "2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA)", "pages": "419-432"}, "authors": [{"authorId": "2108989534", "name": "Yifan Yang"}, {"authorId": "8704205", "name": "Zhaoshi Li"}, {"authorId": "40381677", "name": "Yangdong Deng"}, {"authorId": "2109079608", "name": "Zhiwei Liu"}, {"authorId": "145746022", "name": "Shouyi Yin"}, {"authorId": "1803672", "name": "Shaojun Wei"}, {"authorId": "25533190", "name": "Leibo Liu"}], "citations": [{"paperId": "a818c337a115d9b19da6a582d6cfc55310a8805e", "title": "SaGraph: A Similarity-aware Hardware Accelerator for Temporal Graph Processing"}, {"paperId": "1bb10600aa2ebc639a878fde3b0c75471abd0da5", "title": "Shogun: A Task Scheduling Framework for Graph Mining Accelerators"}, {"paperId": "6c826444b0ca7894a420de1a9b1ed23a30a34203", "title": "GGPA: A General Graph Processing Architecture with Flexible Execution Paradigm"}, {"paperId": "1e601f2e82809d9a804afcbc7fed2e12d2c08ade", "title": "Systematically Understanding Graph Accelerator Dimensions and the Value of Hardware Flexibility"}, {"paperId": "5be7d06ee1647b4b257036e8d1f3b4a0ecb0b05c", "title": "Hyperscale FPGA-as-a-service architecture for large-scale distributed graph neural network"}, {"paperId": "7aff55edc983ddf42943813f28bfccb659332ef5", "title": "TDGraph: a topology-driven accelerator for high-performance streaming graph processing"}, {"paperId": "3c0eb90dec4bbc9ae9de351faf21c403ede0a3ee", "title": "HetGraph: A High Performance CPU-CGRA Architecture for Matrix-based Graph Analytics"}, {"paperId": "5f1776b961a8f3080a66a76daf3c38879ad53242", "title": "QEGCN: An FPGA-based accelerator for quantized GCNs with edge-level parallelism"}, {"paperId": "cdc789b0b058685c892fa9445662800a3c686db9", "title": "PCFBCD: An Innovative Approach to Accelerating Collaborative Filtering"}, {"paperId": "077edce841c0a1569da8abe0167b30d105a82c70", "title": "Only Buffer When You Need To: Reducing On-chip GPU Traffic with Reconfigurable Local Atomic Buffers"}, {"paperId": "5ba725bfd56c24c19b1eca64a3f19c84931fa35a", "title": "A Gather Accelerator for GNNs on FPGA Platform"}, {"paperId": "f624bfc432f5ed9350125de1500e4e02baaf841b", "title": "LCCG: A Locality-Centric Hardware Accelerator for High Throughput of Concurrent Graph Processing"}, {"paperId": "a39b5a163b0544ec382540839685d8ebfc64849b", "title": "SPA-GCN: Efficient and Flexible GCN Accelerator with Application for Graph Similarity Computation"}, {"paperId": "862b475d2602000bac075513eec35f3de668f9fe", "title": "PolyGraph: Exposing the Value of Flexibility for Graph Processing Accelerators"}, {"paperId": "3d58bf1d2b90d07ded8ddff707caac2a23ea46df", "title": "FlexMiner: A Pattern-Aware Accelerator for Graph Pattern Mining"}, {"paperId": "15e8ea5fc76485cadb04cdde21b1b52b038609ee", "title": "SpZip: Architectural Support for Effective Data Compression In Irregular Applications"}, {"paperId": "5984a0b6957b0e9ed8b030c3784f3ec367fbfd8c", "title": "SISA: Set-Centric Instruction Set Architecture for Graph Mining on Processing-in-Memory Systems"}, {"paperId": "c130448814f002df3d82df61533d7f8a1d434e68", "title": "DepGraph: A Dependency-Driven Accelerator for Efficient Iterative Graph Processing"}, {"paperId": "61a0bc1c9ba2783b99cd64f74b58663a82ad2818", "title": "GCNAX: A Flexible and Energy-efficient Accelerator for Graph Convolutional Neural Networks"}, {"paperId": "5fa3ad48ed3cfcd86318f775638c2e22ffd29808", "title": "IntersectX: An Accelerator for Graph Mining"}, {"paperId": "7fe5029cf78c8d8e58cce763291389be7b384793", "title": "ISCA 2020 TOC"}, {"paperId": "9de73bbcf64e800d300d89bcc8cbb1100616e8c6", "title": "Shugra: A Shuf\ufb02ing-Driven Graph Convolutional Network Accelerator"}, {"paperId": "63b4d4fe4bd912825949e5c8ae803cd4ea673fcc", "title": "SGCNAX: A Scalable Graph Convolutional Neural Network Accelerator with Workload Balancing"}]}
