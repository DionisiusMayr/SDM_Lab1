{"paperId": "3d879cde5e905fce83f10c35fbe0365dfda0af32", "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414", "name": "IEEE Transactions on Parallel and Distributed Systems", "type": "journal", "alternate_names": ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219", "url": "http://www.computer.org/tpds", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]}, "title": "Clip: A Disk I/O Focused Parallel Out-of-Core Graph Processing System", "abstract": "Existing parallel out-of-core graph processing systems focus on improving disk I/O locality, which leads to restrictions on their programming models. Although improving the locality, these constraints also restrict the expressiveness and hence only sub-optimal algorithms are supported. These sub-optimal algorithms typically incur sequential, but much larger, amount of disk I/O. In this paper, we explore a fundamentally different tradeoff: less total amount of I/O rather than better locality. We show that out-of-core graph processing systems uniquely provide the opportunities to lift the restrictions of the programming model in a feasible manner. To demonstrate the ideas, we build Clip, which enables more efficient algorithms that require much less amount of total disk I/O. Our experiments show that the algorithms that can be only implemented in Clip are much faster than the original disk-locality-optimized algorithms. We also further extend our technique's scope of application by providing a semi-external mode. Our analysis and evaluation demonstrate that semi-external is not only feasible for many cases, but also be able to deliver a significant speedup for important graph applications. Moreover, we further improve the performance of originally supported applications by designing more optimizations and evaluate our system on NVMe SSD.", "venue": "IEEE Transactions on Parallel and Distributed Systems", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-01-01", "journal": {"name": "IEEE Transactions on Parallel and Distributed Systems", "pages": "45-62", "volume": "30"}, "authors": [{"authorId": "20829764", "name": "Zhiyuan Ai"}, {"authorId": "145179162", "name": "Mingxing Zhang"}, {"authorId": "2115858706", "name": "Yongwei Wu"}, {"authorId": "2288203548", "name": "Xuehai Qian"}, {"authorId": "1680073", "name": "Kang Chen"}, {"authorId": "2225511", "name": "Weimin Zheng"}], "citations": [{"paperId": "231b88e974b3117fbbeade9fa4f758ed4f15369b", "title": "NosWalker: A Decoupled Architecture for Out-of-Core Random Walk Processing"}, {"paperId": "9eaa98ef4c9801cfa1afcec6e4c448906600f08c", "title": "GraphZeppelin: Storage-Friendly Sketching for Connected Components on Dynamic Graph Streams"}, {"paperId": "158935c72757eddbb35c9e832078ad35f36067ac", "title": "DFOGraph: an I/O- and communication-efficient system for distributed fully-out-of-core graph processing"}, {"paperId": null, "title": "2020 Index IEEE Transactions on Parallel and Distributed Systems Vol. 31"}, {"paperId": "dd8ae69a82d7d2bc3ee1ecd4092e9315a709fd65", "title": "Processing Grid-format Real-world Graphs on DRAM-based FPGA Accelerators with Application-specific Caching Mechanisms"}, {"paperId": "a483dabece831b875269db372d7a0f6a51f56e25", "title": "GraphABCD: Scaling Out Graph Analytics with Asynchronous Block Coordinate Descent"}, {"paperId": "5a47391366199055620169e271cc551b79f75571", "title": "PartitionedVC: Partitioned External Memory Graph Analytics Framework for SSDs"}]}
