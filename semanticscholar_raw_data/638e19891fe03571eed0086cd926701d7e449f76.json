{"paperId": "638e19891fe03571eed0086cd926701d7e449f76", "publicationVenue": {"id": "911e7332-8ea8-4e9d-bc20-5572a2523f92", "name": "International Middleware Conference", "type": "conference", "alternate_names": ["Middleware", "ACM/IFIP/USENIX int conf Middlew", "ACM/IFIP/USENIX international conference on Middleware", "Int Middlew Conf"], "url": "https://dl.acm.org/conference/middleware/proceedings"}, "title": "SR3: Customizable Recovery for Stateful Stream Processing Systems", "abstract": "Modern stream processing applications need to store and update state along with their processing, and process live data streams in a timely fashion from massive and geo-distributed data sets. Since they run in a dynamic distributed environment and their workloads may change in unexpected ways, multiple stream operators can fail at the same time, causing severe state loss. However, the state-of-the-art stream processing systems are mainly designed for low-latency intra-datacenter settings and do not scale well for running stream applications that contain large distributed states, suffering a significantly centralized bottleneck and high latency to recover state. They offer failure recovery mainly through three approaches: replication recovery, checkpointing recovery, and DStream-based lineage recovery, which are either slow, resource-expensive or fail to handle multiple simultaneous failures. We present SR3, a customizable state recovery framework that provides fast and scalable state recovery mechanisms for protecting large distributed states in stream processing systems. SR3 offers three recovery mechanisms --- the star-structured recovery, the line-structured recovery, and the tree-structured recovery --- to cater to the needs of different stream processing computation models, state sizes, and network settings. Our design adopts a decentralized architecture that partitions and replicates states by using consistent ring overlays that leverage distributed hash tables (DHTs). We show that this approach can significantly improve the scalability and flexibility of state recovery. We realize the SR3 design on a prototype integrated with the widely adopted Apache Storm framework. Large-scale experiments using real-world datasets demonstrate SR3's scalability, fast recovery, and flexibility properties.", "venue": "International Middleware Conference", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2020-12-07", "journal": {"name": "Proceedings of the 21st International Middleware Conference"}, "authors": [{"authorId": "9127578", "name": "Hailu Xu"}, {"authorId": "51308947", "name": "Pinchao Liu"}, {"authorId": "2034202017", "name": "Susana Cruz-Diaz"}, {"authorId": "145308335", "name": "D. D. Silva"}, {"authorId": "2303604", "name": "Liting Hu"}], "citations": [{"paperId": "4f19f63fe79861bcefcaacb764b818f4144b8968", "title": "Adaptive Fragment-Based Parallel State Recovery for Stream Processing Systems"}, {"paperId": "e603147e665047984b7fb0f7a82def32f80ea7eb", "title": "ShadowSync: latency long tail caused by hidden synchronization in real-time LSM-tree based stream processing systems"}]}
