{"paperId": "d8bc509529f44b97f1b2f5a39dfd5c6a93c5a2de", "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f", "name": "IEEE Transactions on Network and Service Management", "type": "journal", "alternate_names": ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url": "http://ejournals.ebsco.com/direct.asp?JournalID=714200", "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028", "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]}, "title": "Blender: A Container Placement Strategy by Leveraging Zipf-Like Distribution Within Containerized Data Centers", "abstract": "Instantiated containers of an application are distributed across multiple Physical Machines (PMs) to achieve high parallel performance. Container placement plays a vital role in network traffic and the performance of containerized data centers. Existing container placement techniques are inadequate due to the ignorance of container traffic patterns. To solve this issue, we first investigate the network traffic between containers and observe that it exhibits a Zipf-like distribution. Motivated by this finding, we propose a novel container placement approach-Blender-by taking into account the Zipf-like distribution. Blender employs two algorithms called RefineAlg and SplitAlg to divide containers of applications into blocks, and place these blocks across Virtual Machines (VMs). Blender exhibits two salient features: (i) it minimizes inter-block traffic by arranging the containers that communicate frequently in the same block. (ii) it achieves good load balancing by combining complementary blocks that request different resource types (e.g., CPU-intensive and memory-intensive blocks) and distributing these blocks across multiple VMs. The experimental results show that Blender significantly reduces communication traffic and network latency. In particular, Blender reduces the traffic of SBP and CA-WFD by 22% and 32%, respectively. Blender decreases network latency by 16% and 26% compared to SBP and CA-WFD. Furthermore, with Blender in place, the physical resources of hosting PMs are well balanced and utilized.", "venue": "IEEE Transactions on Network and Service Management", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-06-01", "journal": {"name": "IEEE Transactions on Network and Service Management", "pages": "1382-1398", "volume": "19"}, "authors": [{"authorId": "2146045399", "name": "Zhaorui Wu"}, {"authorId": "35143368", "name": "Yuhui Deng"}, {"authorId": "1605724563", "name": "Hao Feng"}, {"authorId": "2044335124", "name": "Yi Zhou"}, {"authorId": "145896559", "name": "G. Min"}, {"authorId": "2116702968", "name": "Zhen Zhang"}], "citations": [{"paperId": "696e0eb5c61ac700fb60e8987716433f3bbca43c", "title": "APRG:A Fair Information Granule Model Based on Adaptive Probability Replacement Resampling"}, {"paperId": "15a3aaf82edb35516527076f3b52b1480ae66503", "title": "HashCache: Accelerating Serverless Computing by Skipping Duplicated Function Execution"}, {"paperId": "a88e445818229761d300f481abdfac223d62ef7e", "title": "TADRP: Toward Thermal-Aware Data Replica Placement in Data-Intensive Data Centers"}, {"paperId": "9a4404b4bb2e8f0908eb7ab3a483bb6dca1893d0", "title": "An Efficient Online Auction for Placing and Pricing Cloud Container Clusters"}, {"paperId": "012fbd3a947ff9786c8fdd3bbd9b156b032c35ea", "title": "Layer-Aware Containerized Service Orchestration in Edge Networks"}, {"paperId": "84684845d285fc164425d8c40d6236de1d0b568c", "title": "Task Containerization and Container Placement Optimization for MEC: A Joint Communication and Computing Perspective"}, {"paperId": "bd059b74457f080edd802bb4d0802c642a3a79ca", "title": "Energy-Efficient Thermal-Aware Data Placement Strategy for Storage Clusters"}]}
