{"paperId": "e530ff9eee3633ba3b0f93409f1ac6fd61ae41f5", "publicationVenue": {"id": "93be7524-e38d-4d5a-b7f1-bb2b08b85275", "name": "Data Science Journal", "type": "journal", "alternate_names": ["Data Sci J"], "issn": "1683-1470", "url": "http://www.jds-online.com/", "alternate_urls": ["https://datascience.codata.org/", "http://www.codata.org/dsj/", "http://www.datasciencejournal.org/"]}, "title": "SparkNN: A Distributed In-Memory Data Partitioning for KNN Queries on Big Spatial Data", "abstract": "The increase in GPS-enabled devices and proliferation of location-based applications have resulted in an abundance of geotagged (spatial) data. As a consequence, numerous applications have emerged that utilize the spatial data to provide different types of location-based services. However, the huge amount of available spatial data presents a challenge to the efficiency of these location-based services. Although the advent of big data frameworks like Apache Spark has enabled the processing of large amounts of data efficiently, they are designed for general (non-spatial) data. That is due to the build-in data partitioning mechanism that does not take into account the spatial proximity of the data. Therefore, these big data frameworks cannot be readily used for spatial analytics such as efficiently answering spatial queries. To fill this gap, this paper proposes SparkNN, an in-memory partitioning and indexing system for answering spatial queries, such as K-nearest neighbor, on big spatial data. SparkNN is implemented on top of Apache Spark and consists of three layers to facilitate efficient spatial queries. The first layer is a spatial-aware partitioning layer, which partitions the spatial data into several partitions ensuring that the load of the partitions is balanced and data objects with close proximity are placed in the same, or neighboring, partitions. The second layer is a local indexing layer, which provides a spatial index inside each partition to speed up the data search within the partition. The third layer is a global index, which is placed in the master node of Spark to route spatial queries to the relevant partitions. The efficiency of SparkNN was evaluated by extensive experiments with big spatial datasets. The results show SparkNN significantly outperforms the state-of-the-art Spark system when evaluated on the same set of queries.", "venue": "Data Science Journal", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2020-08-24", "journal": {"name": "Data Sci. J.", "pages": "35", "volume": "19"}, "authors": [{"authorId": "1694612", "name": "Z. Aghbari"}, {"authorId": "2058579720", "name": "Tasneem Ismail"}, {"authorId": "145096817", "name": "I. Kamel"}], "citations": [{"paperId": "6a4ef4f0391aae863fff4c36a18e04fed43ace1e", "title": "A PID-Based kNN Query Processing Algorithm for Spatial Data"}, {"paperId": "549f632ea0f0d800116cc4760571d0ff7e9eaeb5", "title": "Efficient spatial data partitioning for distributed \n \n \n \n $$k$$\n \n k\n \n NN joins"}, {"paperId": "4100e67536b89244b8c85355c32ac65b75760b0f", "title": "Efficient Group K Nearest-Neighbor Spatial Query Processing in Apache Spark"}]}
