{"paperId": "4a70a739e565f477b06c1b5dc4adf6e7e5300ce1", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "Heracles: An Efficient Storage Model And Data Flushing For Performance Monitoring Timeseries", "abstract": "Performance-monitoring timeseries systems such as Prometheus and InfluxDB play a critical role in assuring reliability and operationally. These systems commonly adopt a column-oriented storage model, by which timeseries samples from different time-series are separated, and all samples (with both numeric values and timestamps) in one timeseries are grouped into chunks and stored together. As a group of timeseries are often collected from the same source with the same timestamps, managing timestamps and metrics in a group manner provides more opportunities for query and insertion optimization but posts new challenges as well. Besides, for performance monitoring systems, to support better compression and efficient queries for most recent data that are most likely accessed by users, huge volumes of data are first cached in memory and then periodically flushed to disks. Periodic data flushing incurs high IO overhead, and simply discarding flushed data, which can still serve queries, not only is a waste but also brings huge memory reclamation cost. In this paper, we propose Heracles which integrates two techniques - (1) a new storage model, which enables efficient queries on compressed data by utilizing the shared timestamp column to easily locate corresponding metric values; (2) a novel two-level epoch-based memory manager, which allows the system to gradually flush and reclaim in-memory data while unreclaimed data can still serve queries. Heracles is implemented as a standalone module that can be easily integrated into existing performance monitoring timeseries systems. We have implemented a fully functional prototype with Heracles based on Prometheus tsdb, a representative open-source performance monitoring system, and conducted extensive experiments with real and synthetic timeseries data. Experimental results show that, compared with Prometheus, Heracles can improve the insertion throughput by 171%, and reduce the query latency and space usage by 32% and 30%, respectively, on average. Besides, to compare with other state-of-the-art storage techniques, we have integrated LevelDB (for LSM-tree-based structure) and Parquet (for column stores) into Prometheus tsdb, respectively, and experimental results show Heracles outperform these two integrations. We have released the open-source code of Heracles for public access.", "venue": "Proceedings of the VLDB Endowment", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-02-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "1080-1092", "volume": "14"}, "authors": [{"authorId": "2108332606", "name": "Zhiqi Wang"}, {"authorId": "2067731900", "name": "Jin Xue"}, {"authorId": "144668859", "name": "Z. Shao"}], "citations": [{"paperId": "5dba3b9244fae93e840efb66d2568039d7a7fc20", "title": "AFC: An adaptive lossless floating-point compression algorithm in time series database"}, {"paperId": "68fdc992cf1b9e1b33110380a3f93e32027abd47", "title": "Khronos: A Real-Time Indexing Framework for Time Series Databases on Large-Scale Performance Monitoring Systems"}, {"paperId": "0c8bb7e5943ddb3fe80e4a0391243c1915837bf8", "title": "ForestTI: A Scalable Inverted-Index-Oriented Timeseries Management System with Flexible Memory Efficiency"}, {"paperId": "12f004dc121591aaf1f751cbbfd364de1e5574a7", "title": "Grouping Time Series for Efficient Columnar Storage"}, {"paperId": "72f5f099ebb65a776d12bcd257b787016053a7fb", "title": "TimeUnion: An Efficient Architecture with Unified Data Model for Timeseries Management Systems on Hybrid Cloud Storage"}, {"paperId": "3b5a3fcfca9f87c8ac7d886a27f9e464078d4b65", "title": "Mach: A Pluggable Metrics Storage Engine for the Age of Observability"}, {"paperId": "5fc7da9d626d4512acab6bc511a7f20f024b87e2", "title": "HLF-Kubed: Blockchain-Based Resource Monitoring for Edge Clusters"}, {"paperId": "0ef22742e925f93c70f797762652591b4bfb8c4e", "title": "An Efficient NoSQL-Based Storage Schema for Large-Scale Time Series Data"}]}
