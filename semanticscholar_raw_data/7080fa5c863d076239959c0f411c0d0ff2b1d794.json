{"paperId": "7080fa5c863d076239959c0f411c0d0ff2b1d794", "publicationVenue": null, "title": "Boolean Interpreter Query Parser Abstract Syntax Tree Logical Plan Logical Plan Logical Plan Physical Plan Hyracks Job Language Implementations", "abstract": "A number of high-level query languages, such as Hive, Pig, Flume, and Jaql, have been developed in recent years to increase analyst productivity when processing and analyzing very large datasets. The implementation of each of these languages includes a complete, data model-dependent query compiler, yet each involves a number of similar optimizations. In this work, we describe a new query compiler architecture that separates language-specific and data model-dependent aspects from a more general query compiler backend that can generate executable data-parallel programs for shared-nothing clusters and can be used to develop multiple languages with different data models. We have built such a data modelagnostic query compiler substrate, called Algebricks, and have used it to implement three different query languages \u2014 HiveQL, AQL, and XQuery \u2014 to validate the efficacy of this approach. Experiments show that all three query languages benefit from the parallelization and optimization that Algebricks provides and thus have good parallel speedup and scaleup characteristics for large datasets.", "venue": "", "year": 2015, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "1860208", "name": "V. Borkar"}, {"authorId": "1925686", "name": "Yingyi Bu"}, {"authorId": "144206370", "name": "E. Carman"}, {"authorId": "2119658", "name": "Nicola Onose"}, {"authorId": "2830802", "name": "T. Westmann"}, {"authorId": "34616685", "name": "Pouria Pirzadeh"}, {"authorId": "1703347", "name": "M. Carey"}, {"authorId": "1761528", "name": "V. Tsotras"}], "citations": []}
