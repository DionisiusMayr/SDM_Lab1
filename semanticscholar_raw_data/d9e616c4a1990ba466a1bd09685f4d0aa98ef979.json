{"paperId": "d9e616c4a1990ba466a1bd09685f4d0aa98ef979", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "DBSP: Automatic Incremental View Maintenance for Rich Query Languages", "abstract": "Incremental view maintenance (IVM) has long been a central problem in database theory. Many solutions have been proposed for restricted classes of database languages, such as the relational algebra, or Datalog. These techniques do not naturally generalize to richer languages. In this paper we give a general, heuristic-free solution to this problem in 3 steps: (1) we describe a simple but expressive language called DBSP for describing computations over data streams; (2) we give a new mathematical definition of IVM and a general algorithm for solving IVM for arbitrary DBSP programs, and (3) we show how to model many rich database query languages using DBSP (including the full relational algebra, queries over sets and multisets, arbitrarily nested relations, aggregation, flatmap (unnest), monotonic and non-monotonic recursion, streaming aggregation, and arbitrary compositions of all of these). SQL and Datalog can both be implemented in DBSP. As a consequence, we obtain efficient incremental view maintenance algorithms for queries written in all these languages.", "venue": "Proceedings of the VLDB Endowment", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-03-30", "journal": {"name": "Proc. VLDB Endow.", "pages": "1601-1614", "volume": "16"}, "authors": [{"authorId": "1707533", "name": "M. Budiu"}, {"authorId": "3137076", "name": "Frank McSherry"}, {"authorId": "3150866", "name": "L. Ryzhyk"}, {"authorId": "144879888", "name": "V. Tannen"}], "citations": [{"paperId": "4065b64183def080f8c46968f12ae45579c57be6", "title": "Improving Data Minimization through Decentralized Data Architectures"}, {"paperId": "124e19ea97f1377c6d352b308fb736d1aece49fd", "title": "Insert-Only versus Insert-Delete in Dynamic Query Evaluation"}, {"paperId": "83527b4410e220be3451a83346ef5db4b593e8b7", "title": "Modern Datalog on the GPU"}, {"paperId": "d9e6c4fefd0f6d0147b965ad0fbff6db1eed4424", "title": "Surprise-Inspired Networking"}, {"paperId": "05b5b9db47830ba21f73bbc17b071a9a7326fa50", "title": "Full-stack SDN"}, {"paperId": "9788e40e3d599926866a1d81c2ceaa455c2d9751", "title": "Datalog in Wonderland"}]}
