{"paperId": "11acd89b85610c6d5f86d00f235fbdc9c95fe2ac", "publicationVenue": {"id": "c99cfe66-b71c-4ca4-bedd-26267b9cb068", "name": "IEEE Transactions on Software Engineering", "type": "journal", "alternate_names": ["IEEE Trans Softw Eng"], "issn": "0098-5589", "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=32", "alternate_urls": ["http://www.computer.org/portal/web/tse/about"]}, "title": "Whence to Learn? Transferring Knowledge in Configurable Systems Using BEETLE", "abstract": "As software systems grow in complexity and the space of possible configurations increases exponentially, finding the near-optimal configuration of a software system becomes challenging. Recent approaches address this challenge by learning performance models based on a sample set of configurations. However, collecting enough sample configurations can be very expensive since each such sample requires configuring, compiling, and executing the entire system using a complex test suite. When learning on new data is too expensive, it is possible to use <italic>Transfer Learning</italic> to \u201ctransfer\u201d old lessons to the new context. Traditional transfer learning has a number of challenges, specifically, (a) learning from excessive data takes excessive time, and (b) the performance of the models built via transfer can deteriorate as a result of learning from a poor source. To resolve these problems, we propose a novel transfer learning framework called BEETLE, which is a \u201cbellwether\u201d-based transfer learner that focuses on identifying and learning from the most relevant source from amongst the old data. This paper evaluates BEETLE with 57 different software configuration problems based on five software systems (a video encoder, an SAT solver, a SQL database, a high-performance C-compiler, and a streaming data analytics tool). In each of these cases, BEETLE found configurations that are as good as or better than those found by other state-of-the-art transfer learners while requiring only a fraction (<inline-formula><tex-math notation=\"LaTeX\">$\\frac{1}{7}$</tex-math><alternatives><mml:math><mml:mfrac><mml:mn>1</mml:mn><mml:mn>7</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href=\"krishna-ieq1-2983927.gif\"/></alternatives></inline-formula>th) of the measurements needed by those other methods. Based on these results, we say that BEETLE is a new high-water mark in optimally configuring software.", "venue": "IEEE Transactions on Software Engineering", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-11-01", "journal": {"name": "IEEE Transactions on Software Engineering", "pages": "2956-2972", "volume": "47"}, "authors": [{"authorId": "49206685", "name": "R. Krishna"}, {"authorId": "143934608", "name": "V. Nair"}, {"authorId": "31948108", "name": "Pooyan Jamshidi"}, {"authorId": "1703872", "name": "T. Menzies"}], "citations": [{"paperId": "5f09b23505a90cb275f99faac4384ab7b3fbedf9", "title": "Predicting Configuration Performance in Multiple Environments with Sequential Meta-learning"}, {"paperId": "2a1384351115dfd4b0f1444bbf9587718d2595d6", "title": "Learning input-aware performance models of configurable systems: An empirical evaluation"}, {"paperId": "45f7142efb25a5c88c61dbb661012ac7476c9f43", "title": "CoMSA: A Modeling-Driven Sampling Approach for Configuration Performance Testing"}, {"paperId": "4c9f8390d1db1ad97cd92160f9c523c2a0233868", "title": "CAMEO: A Causal Transfer Learning Approach for Performance Optimization of Configurable Computer Systems"}, {"paperId": "60d9171f624760a9fbf79bb982351c71fd04e274", "title": "Detecting feature influences to quality attributes in large and partially measured spaces using smart sampling and dynamic learning"}, {"paperId": "4fb4d7613413203916eb712c5f3dc0d95f393e52", "title": "Exploring Approaches for Heterogeneous Transfer Learning in Dynamic Networks"}, {"paperId": "e5a23090fb575c70358aabbad2537689a92a3b46", "title": "Transferring Performance between Distinct Configurable Systems : A Case Study"}, {"paperId": "2587f724dacdc10cad3a12cb1892cced5bd14ee3", "title": "Input sensitivity on the performance of configurable systems an empirical study"}, {"paperId": "4e326771a5c8ae56920e384b72ac66e731040f30", "title": "On Heterogeneous Transfer Learning for Improved Network Service Performance Prediction"}, {"paperId": "c89a47897d806c0eaed05163f563914a9bdd7ef0", "title": "Fast Performance Modeling across Different Database Versions Using Partitioned Co-Kriging"}, {"paperId": "8d0db0f758c3f989ec0fc37ae0a00f4b3a86d963", "title": "Transfer Learning Across Variants and Versions: The Case of Linux Kernel Size"}, {"paperId": "95b4faa14b66192291c2f88fa6cddf465ac167ae", "title": "The interplay of compile-time and run-time options for performance prediction"}, {"paperId": "b728c7d63cc2ec4092558e56c9a63c8634749fb5", "title": "Transfer learning for multiobjective optimization algorithms supporting dynamic software product lines"}, {"paperId": "f45ec7b57f4cbc9ee76be778ec6170ea0b587de1", "title": "Generalizable and interpretable learning for configuration extrapolation"}, {"paperId": "e1eae536d01b2977d22bd54797393dc92549a13f", "title": "Source Selection in Transfer Learning for Improved Service Performance Predictions"}, {"paperId": "329245eace253321df4e167483d3a2c7bc66325d", "title": "An Evolutionary Study of Configuration Design and Implementation in Cloud Systems"}, {"paperId": "e50207e5ddb04a0f152d72a7be03766a5eee6788", "title": "Faster SAT Solving for Software with Repeated Structures (with Case Studies on Software Test Suite Minimization)"}, {"paperId": "577c142b5b93d021c3606dbdb95d86c152855ac3", "title": "Simpler Hyperparameter Optimization for Software Analytics: Why, How, When?"}, {"paperId": "305714367a54f6466afed5155e159a2fc15fbb44", "title": "Predicting health indicators for open source projects (using hyperparameter optimization)"}, {"paperId": "459d879d74bbcd9704b9e98340cb3b44f717ffb5", "title": "Building Very Small Test Suites (with Snap)."}, {"paperId": "3eaf02337da6a4d0c0d9c9a4ea82294cb7e5cc7b", "title": "CADET: Debugging and Fixing Misconfigurations using Counterfactual Reasoning"}, {"paperId": "9efd2ec28552bf2fdc46f1b6a7284b08b2073c11", "title": "The Interaction between Inputs and Configurations fed to Software Systems: an Empirical Study"}, {"paperId": "2abd4bc040f7f7e6055649d8c93efecc0e8f03f2", "title": "BUILDING RESOURCE ADAPTIVE SOFTWARE SYSTEMS MODEL-BASED ADAPTATION FOR ROBOTICS SOFTWARE"}]}
