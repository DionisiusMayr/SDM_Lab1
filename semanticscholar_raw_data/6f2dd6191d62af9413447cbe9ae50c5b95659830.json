{"paperId": "6f2dd6191d62af9413447cbe9ae50c5b95659830", "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414", "name": "IEEE Transactions on Parallel and Distributed Systems", "type": "journal", "alternate_names": ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219", "url": "http://www.computer.org/tpds", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]}, "title": "Confluence: Speeding Up Iterative Distributed Operations by Key-Dependency-Aware Partitioning", "abstract": "A typical shuffle operation randomly partitions data on many computers, generating possibly a significant amount of network traffic which often dominates a job's completion time. This traffic is particularly pronounced in iterative distributed operations where each iteration invokes a shuffle operation. We observe that data of different iterations are related according to the transformation logic of distributed operations. If data generated by the current iteration are partitioned to the computers where they will be processed in the next iteration, unnecessary shuffle network traffic between the two iterations can be prevented. We model general iterative distributed operations as the transform-and-shuffle primitive and define a powerful notion named Confluence key dependency to precisely capture the data relations in the primitive. We further find that by binding key partitions between different iterations based on the Confluence key dependency, the shuffle network traffic can always be reduced by a predictable percentage. We implemented the Confluence system. Confluence provides a simple interface for programmers to express the Confluence key dependency, based on which Confluence automatically generates efficient key partitioning schemes. Evaluation results on diverse real-life applications show that Confluence greatly reduces the shuffle network traffic, resulting in as much as 23 percent job completion time reduction.", "venue": "IEEE Transactions on Parallel and Distributed Systems", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2018-02-01", "journal": {"name": "IEEE Transactions on Parallel and Distributed Systems", "pages": "351-364", "volume": "29"}, "authors": [{"authorId": "2053834922", "name": "Feng Liang"}, {"authorId": "1697834", "name": "F. Lau"}, {"authorId": "2944075", "name": "Heming Cui"}, {"authorId": "1943837", "name": "Cho-Li Wang"}], "citations": [{"paperId": "a684521b7865b70948f4fbd1aade5629c767ab8e", "title": "Performance enhancement for iterative data computing with in\u2010memory concurrent processing"}]}
