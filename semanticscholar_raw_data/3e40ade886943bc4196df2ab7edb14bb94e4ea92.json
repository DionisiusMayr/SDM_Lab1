{"paperId": "3e40ade886943bc4196df2ab7edb14bb94e4ea92", "publicationVenue": {"id": "a5a3a31d-dd0a-4e97-882e-dbad82cd710e", "name": "ACM SIGPLAN International Conference on Functional Programming", "type": "conference", "alternate_names": ["International Conference on Functional Programming", "ACM SIGPLAN Int Conf Funct Program", "ICFP", "Int Conf Funct Program"], "url": "http://www.cs.luc.edu/icfp/"}, "title": "Think like a vertex, behave like a function! a functional DSL for vertex-centric big graph processing", "abstract": "The vertex-centric programming model, known as \u201cthink like a vertex\u201d, is being used more and more to support various big graph processing methods through iterative supersteps that execute in parallel a user-defined vertex program over each vertex of a graph. However, the imperative and message-passing style of existing systems makes defining a vertex program unintuitive. In this paper, we show that one can benefit more from \u201cThinking like a vertex\u201d by \u201cBehaving like a function\u201d rather than \u201cActing like a procedure\u201d with full use of side effects and explicit control of message passing, state, and termination. We propose a functional approach to vertex-centric graph processing in which the computation at every vertex is abstracted as a higher-order function and present Fregel, a new domain-specific language. Fregel has clear functional semantics, supports declarative description of vertex computation, and can be automatically translated into Pregel, an emerging imperative-style distributed graph processing framework, and thereby achieve promising performance. Experimental results for several typical examples show the promise of this functional approach.", "venue": "ACM SIGPLAN International Conference on Functional Programming", "year": 2016, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2016-09-04", "journal": {"name": "Proceedings of the 21st ACM SIGPLAN International Conference on Functional Programming"}, "authors": [{"authorId": "1743418", "name": "Kento Emoto"}, {"authorId": "2171152", "name": "Kiminori Matsuzaki"}, {"authorId": "34667855", "name": "Zhenjiang Hu"}, {"authorId": "2613051", "name": "Akimasa Morihata"}, {"authorId": "1745636", "name": "H. Iwasaki"}], "citations": [{"paperId": "a17aadf1f3af6a3790c2ad091db814440a77940c", "title": "Multi-Stage Vertex-Centric Programming for Agent-Based Simulations"}, {"paperId": "dd2d91963902dbb774e5c1fb6e8d3257737d6958", "title": "The essence of online data processing"}, {"paperId": "673f7655d4a87ac123584f8c0843e2fb4a23ab53", "title": "Fregel: a functional domain-specific language for vertex-centric large-scale graph processing"}, {"paperId": "98a666e1fa13041268c6c21b3669057b4d68aee7", "title": "Creating Knowledge Graphs Subsets using Shape Expressions"}, {"paperId": "a391e04b078ff564e48615d4d72134cdcc1fc77d", "title": "Grafs: declarative graph analytics"}, {"paperId": "628f32ba7c90f643a7f63833896a0281c210e060", "title": "GraFS: Graph Analytics Fusion and Synthesis"}, {"paperId": "ac08a20ba92eb56d89269b49c8c9f24e80d690f9", "title": "PySke: Algorithmic Skeletons for Python"}, {"paperId": "605bad962c56a74d4fe5e42b36271c2e67becaa3", "title": "Incrementalization of Vertex-Centric Programs"}, {"paperId": "7ebba962969c1bac6492cab1a31834bd2287a5a3", "title": "A DSL for graph parallel programming with vertex subsets"}, {"paperId": "54271ed7b397a141e0f069881d1b0b68ddeb3419", "title": "Optimizing Declarative Parallel Distributed Graph Processing by Using Constraint Solvers"}, {"paperId": "6ee55b0237422b959a49b28bf273ba1127f51088", "title": "Formalization of a Big Graph API in Coq"}, {"paperId": "7e5acf2654e34d406c46d053372a8d70bd9c956b", "title": "Palgol: A High-Level DSL for Vertex-Centric Graph Processing with Remote Data Access"}, {"paperId": "d06142e19516c108ecd109a4edfcdbce86b2dfa4", "title": "s6raph: vertex-centric graph processing framework with functional interface"}, {"paperId": "e5ff1668b4ce071c033b38c4e0d51000d7a4d67e", "title": "Automatic Incrementalization of Vertex-Centric Programs"}]}
