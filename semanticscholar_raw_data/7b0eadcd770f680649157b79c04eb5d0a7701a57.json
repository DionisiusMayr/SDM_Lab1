{"paperId": "7b0eadcd770f680649157b79c04eb5d0a7701a57", "publicationVenue": null, "title": "Scaleable Code Clone Detection", "abstract": "Code clone detection helps connect developers across projects, if we do it on a large scale. The cornerstones that allow clone detection to work on a large scale are: (1) bad hashing (2) lightweight parsing using regular expressions and (3) MapReduce pipelines. Bad hashing means to determine whether or not two artifacts are similar by checking whether their hashes are identical. We show a bad hashing scheme that works well on source code. Lightweight parsing using regular expressions is our technique of obtaining entire parse trees from regular expressions, robustly and efficiently. We detail the algorithm and implementation of one such regular expression engine. MapReduce pipelines are a way of expressing a computation such that it can automatically and simply be parallelized. We detail the design and implementation of one such MapReduce pipeline that is efficient and debuggable. We show a clone detector that combines these cornerstones to detect code clones across all projects, across all versions of each project.", "venue": "", "year": 2014, "fieldsOfStudy": ["Computer Science"], "publicationTypes": null, "publicationDate": "2014-02-01", "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "5151693", "name": "Niko Schwarz"}], "citations": [{"paperId": "c14acc093d0f5643b660d01be44c9ab69c78f9e3", "title": "A visual analytics architecture for the analysis and understanding of software systems"}, {"paperId": "b9abaa3f0f7484f7d146c24a9038290d655a2d0f", "title": "A Proposal towards the Design of an Architecture for Evolutionary Visual Software Analytics"}, {"paperId": "999d0b918dba9cb066a9ae0bb015e80c3d5f908b", "title": "Stream Processing using Grammars and Regular Expressions"}, {"paperId": "2b6d335b0fa8738b6c238009cec139d09ccec95d", "title": "Efficiently extracting full parse trees using regular expressions with capture groups"}]}
