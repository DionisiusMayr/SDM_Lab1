{"paperId": "b031e5b5bb0a23700a495f0506daaa03a7f212a6", "publicationVenue": {"id": "914d4734-285a-4cd8-bba1-eec0db26a512", "name": "International Conference on Supercomputing", "type": "conference", "alternate_names": ["International Conference Computer, Communication and Computational Sciences", "ICS", "INFORMS Comput Soc", "Int Conf Supercomput", "INFORMS Computing Society", "Int Conf Comput Commun Comput Sci"], "url": "http://portal.acm.org/proceedings/ics/"}, "title": "Replichard: Towards Tradeoff between Consistency and Performance for Metadata", "abstract": "Metadata scalability is critical for distributed systems as the storage scale is growing rapidly. Because of the strict consistency requirement of metadata, many existing metadata services utilize a fundamentally unscalable design for the sake of easy management, while others provide improved scalability but lead to unacceptable latency and management complexity. Without delivering scalable performance, metadata will be the bottleneck of the entire system. Based on the observation that real file dependencies are few, and there are usually more idempotent than non-idempotent operations, we propose a practical strategy, Replichard, allowing a tradeoff between metadata consistency and scalable performance. Replichard provides metadata services through a cluster of metadata servers, in which a flexible consistency scheme is adopted: strict consistency for non-idempotent operations with dynamic write-lock sharding, and relaxed consistency with accuracy estimations of return values where consistency for idempotent requests is relaxed to achieve high throughput. Write-locks are dynamically created at subtree-level and designated to independent metadata servers in an application-oriented manner. A subtree metadata update that occurs on a particular server is replicated to all metadata servers conforming to the application \"start-end\" semantics, resulting in an eventually consistent namespace. An asynchronous notification mechanism is also devised to enable users to deal with potential stale reads from operations of relaxed consistency. A prototype was implemented based on HDFS, and the experimental results show promising scalability and performance for both micro benchmarks and various real-world applications written in Pig, Hive and MapReduce.", "venue": "International Conference on Supercomputing", "year": 2016, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2016-06-01", "journal": {"name": "Proceedings of the 2016 International Conference on Supercomputing"}, "authors": [{"authorId": "2109823012", "name": "Zhiying Li"}, {"authorId": "2385784", "name": "Ruini Xue"}, {"authorId": "2992723", "name": "Lixiang Ao"}], "citations": [{"paperId": "f024ec97f9f2be9c842f8b5df56ae26dc778f80b", "title": "A Survey on Large Scale Metadata Server for Big Data Storage"}, {"paperId": "153f4c352c9d938709a3ef9fe3bdce0b813a2742", "title": "Fine Granularity and Adaptive Cache Update Mechanism for Client Caching"}, {"paperId": "107062f11ccc838e083a4efff4cbc9a2cca20aee", "title": "A Novel Approach for Maintaining Consistency in Distributed File System"}, {"paperId": "176d42d5aa658da1599b2d03be7fb987f5194642", "title": "Impact of Metadata Server on a Large Scale File System"}, {"paperId": "b28ead3a0ceaa45394b713fd1c8efb0c4d5eb857", "title": "Exploiting Virtual Metadata Servers to Provide Multi-Level Consistency for Key-Value Object-Based Data Store"}, {"paperId": "8e53fc669ae1e743ab48f7432cf3bb53bbf20dec", "title": "MDS: In-Depth Insight"}, {"paperId": "c586e9e7481e8b67d50a3b72abf48a9f395f3d02", "title": "The State of the Art of Metadata Managements in Large-Scale Distributed File Systems Scalability, Performance and Availability"}, {"paperId": "36477cad60b6c2a8b6d53a753612c8cc72ea022e", "title": "PEER TO PEER SYSTEM FOR COLLABORATIVE WORK Using version control and fixed merge pattern to ensure eventual consistency"}]}
