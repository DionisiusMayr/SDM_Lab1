{"paperId": "0e11e4dcc086339cd1d9b56916fd4a963ea59431", "publicationVenue": null, "title": "Efficient Processing of Image Processing Applications on CPU/GPU", "abstract": "Heterogeneous systems have gained popularity due to the rapid growth in data and the need for processing this big data to extract useful information. In recent years, many healthcare applications have been developed which use machine learning algorithms to perform tasks such as image classification, object detection, image segmentation, and instance segmentation. The increasing amount of big visual data requires images to be processed efficiently. It is common that we use heterogeneous systems for such type of applications, as processing a huge number of images on a single PC may take months of computation. In heterogeneous systems, data are distributed on different nodes in the system. However, heterogeneous systems do not distribute images based on the computing capabilities of different types of processors in the node; therefore, a slow processor may take much longer to process an image compared to a faster processor. This imbalanced workload distribution observed in heterogeneous systems for image processing applications is the main cause of inefficient execution. In this paper, an efficient workload distribution mechanism for image processing applications is introduced. The proposed approach consists of two phases. In the first phase, image data are divided into an ideal split size and distributed amongst nodes, and in the second phase, image data are further distributed between CPU and GPU according to their computation speeds. Java bindings for OpenCL are used to configure both the CPU and GPU to execute the program. The results have demonstrated that the proposed workload distribution policy efficiently distributes the images in a heterogeneous system for image processing applications and achieves 50% improvements compared to the current state-of-the-art programming frameworks.", "venue": "", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": null, "publicationDate": "2020-10-10", "journal": {"name": "Mathematical Problems in Engineering", "pages": "1-14", "volume": "2020"}, "authors": [{"authorId": "2004283401", "name": "Najia Naz"}, {"authorId": "133604429", "name": "Abdul Haseeb Malik"}, {"authorId": "2004282391", "name": "Abu Bakar Khurshid"}, {"authorId": "40211462", "name": "Furqan Aziz"}, {"authorId": "35307171", "name": "Bader Alouffi"}, {"authorId": "1717097509", "name": "M. I. Uddin"}, {"authorId": "1434843346", "name": "A. Alghamdi"}], "citations": [{"paperId": "a892500e1b63dfcce752a397c62756427e6d67c7", "title": "A feasibility analysis of image approximation with image quality assessments"}, {"paperId": "db674f55fefdb6b793e3ef907a9da46690bb424e", "title": "Evaluation of Different Methods and Models for Grass Cereals\u2019 Production Estimation: Case Study in Wheat"}, {"paperId": "6241c43883d2421ce439b90dde7faac42a318c01", "title": "DLA-E: a deep learning accelerator for endoscopic images classification"}, {"paperId": "fbbe3b967e903c8cee4f95b0fc30ad927f2a74ef", "title": "Heterogeneous Hadoop Cluster-Based Image Processing Workload Distribution Framework between CPU and GPU"}, {"paperId": "d7a6556842053d0d55aea070dc2c8b29d3d7c973", "title": "Online Resource Allocation in Edge Computing Using Distributed Bidding Approaches"}, {"paperId": "7ce8df1996457efaa43436896733bddb2121cb05", "title": "Convolutional neural network based hurricane damage detection using satellite images"}, {"paperId": "5b317f133973c7d3c6c38ce50fe1caac717f3e89", "title": "RETRACTED: Mixed-mode database miner classifier: Parallel computation of graphical processing unit mining"}, {"paperId": "90b490c0c970bcc8a937cde8d181e0ead5cd4413", "title": "Symmetric Quantile Quantizer Parameterization for the Laplacian Source: Qualification for Contemporary Quantization Solutions"}, {"paperId": "cb082d0ef13b7d1e6db355c81eb1bcc52ba71525", "title": "HCE: A Runtime System for Efficiently Supporting Heterogeneous Cooperative Execution"}]}
