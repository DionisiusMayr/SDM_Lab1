{"paperId": "5fa3ad48ed3cfcd86318f775638c2e22ffd29808", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "IntersectX: An Accelerator for Graph Mining", "abstract": "Graph mining applications try to find all embeddings that match specific patterns. Compared to the traditional graph computation, graph mining applications are computation intensive. The state-of-the-art method, pattern enumeration, specifically constructs the embeddings that satisfy the pattern, leading to significant speedups over the exhaustive check method. However, the key operation intersection poses challenges to conventional architectures and takes substantial execution time. In this paper, we propose IntersectX, a vertical approach to accelerate graph mining with stream instruction set extension and architectural supports based on conventional processor. The stream based ISA can considered as a natural extension to the traditional instructions for ordinary scalar values. We develop the IntersectX architecture composed of specialized mechanisms that efficiently implement the stream ISA extensions, including: (1) Stream Mapping Table (SMT) that records the mapping between stream ID and stream register; (2) the Stream Cache(S-Cache) that enables efficient stream data movements; (3) tracking the dependency between streams with a property of intersection; (4) Stream Value Processing Unit (SVPU) that implements sparse value computations; and (5) the nested intersection translator that generates micro-op sequences for implementing nested intersections. We implement IntersectX ISA and architecture on zsim. We use 7 popular graph mining applications (triangle/three-chain/tailed-traingle counting, 3-motif mining, 4/5-clique counting, and FSM) on 10 real graphs. Our experiments show that IntersectX significantly outperforms our CPU baseline and GRAMER, a state-of-the-art graph mining accelerator. IntersectX's speedups over the CPU baseline and GRAMER are on average 10.7x and 40.1x(up to 83.9x and 181.8x), respectively.", "venue": "arXiv.org", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2020-12-20", "journal": {"name": "ArXiv", "volume": "abs/2012.10848"}, "authors": [{"authorId": "2114193567", "name": "G. Rao"}, {"authorId": "2108536872", "name": "Jingji Chen"}, {"authorId": "2288203548", "name": "Xuehai Qian"}], "citations": [{"paperId": "338191e6464727584b1b67f6e9792641e4c7da4f", "title": "Fast Community Detection in Graphs with Infomap Method using Accelerated Sparse Accumulation"}, {"paperId": "1d53d767356edce2f3b4a57f999ff899a5e37aaa", "title": "Exploring PIM Architecture for High-Performance Graph Pattern Mining"}, {"paperId": "5984a0b6957b0e9ed8b030c3784f3ec367fbfd8c", "title": "SISA: Set-Centric Instruction Set Architecture for Graph Mining on Processing-in-Memory Systems"}]}
