{"paperId": "e6d8c963e99a80994d509bca9aaa1d49e137cdc5", "publicationVenue": {"id": "6c2ef016-936e-4f16-bc1f-a931f0bd59a3", "name": "Datenbanksysteme f\u00fcr Business, Technologie und Web", "type": "conference", "alternate_names": ["BTW Workshops", "Datenbanksysteme Bus Technol Web", "BTW Work", "BTW"], "url": "https://fb-dbis.gi.de/btw-konferenz/vergangene-konferenzen/"}, "title": "Fast CSV Loading Using GPUs and RDMA for In-Memory Data Processing", "abstract": ": Comma-separated values (CSV) is a widely-used format for data exchange. Due to the format\u2019s prevalence, virtually all industrial-strength database systems and stream processing frameworks support importing CSV input. However, loading CSV input close to the speed of I/O hardware is challenging. Modern I/O devices such as InfiniBand NICs and NVMe SSDs are capable of sustaining high transfer rates of 100 Gbit/s and higher. At the same time, CSV parsing performance is limited by the complex control flows that its semi-structured and text-based layout incurs. In this paper, we propose to speed-up loading CSV input using GPUs. We devise a new parsing approach that streamlines the control flow while correctly handling context-sensitive CSV features such as quotes. By offloading I/O and parsing to the GPU, our approach enables databases to load CSVs at high throughput from main memory with NVLink 2.0, as well as directly from the network with RDMA. In our evaluation, we show that GPUs parse real-world datasets at up to 60 GB/s, thereby saturating high-bandwidth I/O devices.", "venue": "Datenbanksysteme f\u00fcr Business, Technologie und Web", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal": {"pages": "19-38"}, "authors": [{"authorId": "2055764697", "name": "Alexander Kumaigorodski"}, {"authorId": "92744560", "name": "Clemens Lutz"}, {"authorId": "1733290", "name": "V. Markl"}], "citations": [{"paperId": "bfb02b9c1d79699815ad5f52a0035499883de508", "title": "AMNES: Accelerating the computation of data correlation using FPGAs"}, {"paperId": "06ddfa296cf270dac061347fa7da56daf43a05ef", "title": "SheetReader: Efficient Specialized Spreadsheet Parsing"}, {"paperId": "b6faa858b8ec91e52b21ff81c72ef60f1aacab64", "title": "Triton Join: Efficiently Scaling to a Large Join State on GPUs with Fast Interconnects"}, {"paperId": "e248e3a79a77d3ee60dbb3bf07af43637c1e7991", "title": "Efficient Specialized Spreadsheet Parsing for Data Science"}]}
