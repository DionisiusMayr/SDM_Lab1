{"paperId": "b9b1614034f80fac761c36ce5ce506972ec2e28f", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "Optimizing An In-memory Database System For AI-powered On-line Decision Augmentation Using Persistent Memory", "abstract": "\n On-line decision augmentation (OLDA) has been considered as a promising paradigm for real-time decision making powered by Artificial Intelligence (AI). OLDA has been widely used in many applications such as real-time fraud detection, personalized recommendation, etc. On-line inference puts real-time features extracted from multiple time windows through a pre-trained model to evaluate new data to support decision making. Feature extraction is usually the most time-consuming operation in many OLDA data pipelines. In this work, we started by studying how existing in-memory databases can be leveraged to efficiently support such real-time feature extractions. However, we found that existing in-memory databases cost hundreds or even thousands of milliseconds. This is unacceptable for OLDA applications with strict real-time constraints. We therefore propose\n FEDB\n (\n F\n eature\n E\n ngineering\n D\n ata\n b\n ase), a distributed in-memory database system designed to efficiently support on-line\n feature extraction.\n Our experimental results show that FEDB can be one to two orders of magnitude faster than the state-of-the-art in-memory databases on real-time feature extraction. Furthermore, we explore the use of the Intel Optane DC Persistent Memory Module (PMEM) to make FEDB more cost-effective. When comparing the proposed PMEM-optimized persistent skiplist to the FEDB using DRAM+SSD, PMEM-based FEDB can shorten the tail latency up to 19.7%, reduce the recovery time up to 99.7%, and save up to 58.4% total cost of a real OLDA pipeline.\n", "venue": "Proceedings of the VLDB Endowment", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-01-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "799-812", "volume": "14"}, "authors": [{"authorId": "93353108", "name": "Cheng Chen"}, {"authorId": "97672105", "name": "Jun Yang"}], "citations": [{"paperId": "d6214ed84f305d2c155366f76e1ad5a891554e62", "title": "Optimizing Data Pipelines for Machine Learning in Feature Stores"}, {"paperId": "de020c6853b7a0d6345043b4bb8b8f1760615e1c", "title": "FEBench: A Benchmark for Real-Time Relational Data Feature Extraction"}, {"paperId": "1968f976061080517e2da9ac1f969d869af4abcc", "title": "ADOps: An Anomaly Detection Pipeline in Structured Logs"}, {"paperId": "c4c193b3fca96a8b16f3dbe3247ad36389073537", "title": "Krypton: Real-time Serving and Analytical SQL Engine at ByteDance"}, {"paperId": "7f85d954e8750db143193c0391c02e19f0f5bc0a", "title": "Principles and Practices of Real-Time Feature Computing Platforms for ML"}, {"paperId": "473f8b6e949721f56d5d71c1e26954080ddf5148", "title": "OpenEmbedding: A Distributed Parameter Server for Deep Learning Recommendation Models using Persistent Memory"}, {"paperId": "32b84001880df214d956ad619e3ccea327f10a95", "title": "SpecPMT: Speculative Logging for Resolving Crash Consistency Overhead of Persistent Memory"}, {"paperId": "1d4e042c33349ce4931c5919843e8e9fcc8cee5a", "title": "A System for Time Series Feature Extraction in Federated Learning"}, {"paperId": "5720d33d86da15c0641154336458d708badaf766", "title": "ArrayQL Integration into Code-Generating Database Systems"}, {"paperId": "3fe20371042b7fba38c2d00cfcc00d138590f421", "title": "Intel\u00ae Optane\u2122 Persistent Memory Empowers 4Paradigm\u2019s All-Process AI System with Both Capacity and Persistence"}]}
