{"paperId": "1a6e68264a1726b867a0dcdafae536a7e1d2af78", "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99", "name": "International Conference on Architectural Support for Programming Languages and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS", "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program Lang Oper Syst", "Architectural Support for Programming Languages and Operating Systems"], "url": "http://www.acm.org/sigplan/"}, "title": "Compiler-driven FPGA virtualization with SYNERGY", "abstract": "FPGAs are increasingly common in modern applications, and cloud providers now support on-demand FPGA acceleration in data centers. Applications in data centers run on virtual infrastructure, where consolidation, multi-tenancy, and workload migration enable economies of scale that are fundamental to the provider\u2019s business. However, a general strategy for virtualizing FPGAs has yet to emerge. While manufacturers struggle with hardware-based approaches, we propose a compiler/runtime-based solution called Synergy. We show a compiler transformation for Verilog programs that produces code able to yield control to software at sub-clock-tick granularity according to the semantics of the original program. Synergy uses this property to efficiently support core virtualization primitives: suspend and resume, program migration, and spatial/temporal multiplexing, on hardware which is available today. We use Synergy to virtualize FPGA workloads across a cluster of Altera SoCs and Xilinx FPGAs on Amazon F1. The workloads require no modification, run within 3\u22124\u00d7 of unvirtualized performance, and incur a modest increase in FPGA fabric utilization.", "venue": "International Conference on Architectural Support for Programming Languages and Operating Systems", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2021-04-19", "journal": {"name": "Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems"}, "authors": [{"authorId": "34348348", "name": "Joshua Landgraf"}, {"authorId": "2122814775", "name": "Tiffany Yang"}, {"authorId": "2109430837", "name": "Will Lin"}, {"authorId": "1692790", "name": "C. Rossbach"}, {"authorId": "1945094", "name": "Eric Schkufza"}], "citations": [{"paperId": "13cc4f15ce289dc30c9af6bcac502cc1aa3599bd", "title": "FPGA Technology Mapping Using Sketch-Guided Program Synthesis"}, {"paperId": "64527929a912a4fe66a30184ef2040926537d2a4", "title": "ExHiPR: Extended High-level Partial Reconfiguration for Fast Incremental FPGA Compilation"}, {"paperId": "a490646bc1857939c94f9593d8398832fde0aeac", "title": "CPU-free Computing: A Vision with a Blueprint"}, {"paperId": "34e42631fd1dd527a2b86338cbe47ab39f494ee0", "title": "V10: Hardware-Assisted NPU Multi-tenancy for Improved Resource Utilization and Fairness"}, {"paperId": "d2043425ad66e02c91b028f0bdef09a4f9d4a2d3", "title": "Reconfigurable Virtual Memory for FPGA-Driven I/O"}, {"paperId": "bf444fe86d19caa42a5e93b4a5199bd3effca39d", "title": "Vidi: Record Replay for Reconfigurable Hardware"}, {"paperId": "9f3bc4e8814d81fa278ad9baa5c3e529e079067c", "title": "Towards a Machine Learning-Assisted Kernel with LAKE"}, {"paperId": "8ec4ed52eaadf72ea01c50b77b165d029dbeb001", "title": "FPGA sharing in the cloud: a comprehensive analysis"}, {"paperId": "a8c24f0d52d939f0e9c43f63cec7a3bfd250c589", "title": "HiPR: High-level Partial Reconfiguration for Fast Incremental FPGA Compilation"}, {"paperId": "3f61775cb652637f9bec1b3ba93f11dfc8f45018", "title": "Hyperion: A Case for Unified, Self-Hosting, Zero-CPU Data-Processing Units (DPUs)"}, {"paperId": "2d1d5a51c7cd44a88f8ad60d4cc31e07405e3a3c", "title": "Spatiotemporal Strategies for Long-Term FPGA Resource Management"}, {"paperId": "df64f7083338d4ad85d204a49f931ba50d9cabc6", "title": "Debugging in the brave new world of reconfigurable hardware"}, {"paperId": "593c53186df072a346684ebf09524f1235c82983", "title": "PLD: fast FPGA compilation to make reconfigurable acceleration compatible with modern incremental refinement software development"}, {"paperId": "f6ef921b63a47acd3b256c96980628a0928e5ea7", "title": "HeteroGen: transpiling C to heterogeneous HLS code with automated test generation and program repair"}, {"paperId": "47a0e5361cb0dd864afec0c5438cb52cf3add726", "title": "The Future of FPGA Acceleration in Datacenters and the Cloud"}]}
