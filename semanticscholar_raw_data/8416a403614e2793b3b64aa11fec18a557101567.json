{"paperId": "8416a403614e2793b3b64aa11fec18a557101567", "publicationVenue": {"id": "c99cfe66-b71c-4ca4-bedd-26267b9cb068", "name": "IEEE Transactions on Software Engineering", "type": "journal", "alternate_names": ["IEEE Trans Softw Eng"], "issn": "0098-5589", "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=32", "alternate_urls": ["http://www.computer.org/portal/web/tse/about"]}, "title": "Mitigating False Positive Static Analysis Warnings: Progress, Challenges, and Opportunities", "abstract": "Static analysis (SA) tools can generate useful static warnings to reveal the problematic code snippets in a software system without dynamically executing the corresponding source code. In the literature, static warnings are of paramount importance because they can easily indicate specific types of software defects in the early stage of a software development process, which accordingly reduces the maintenance costs by a substantial margin. Unfortunately, due to the conservative approximations of such SA tools, a large number of false positive (FP for short) warnings (i.e., they do not indicate real bugs) are generated, making these tools less effective. During the past two decades, therefore, many false positive mitigation (FPM for short) approaches have been proposed so that more accurate and critical warnings can be delivered to developers. This paper offers a detailed survey of research achievements on the topic of FPM. Given the collected 130 surveyed papers, we conduct a comprehensive investigation from five different perspectives. First, we reveal the research trends of this field. Second, we classify the existing FPM approaches into five different types and then present the concrete research progress. Third, we analyze the evaluation system applied to examine the performance of the proposed approaches in terms of studied SA tools, evaluation scenarios, performance indicators, and collected datasets, respectively. Fourth, we summarize the four types of empirical studies relating to SA warnings to exploit the insightful findings that are helpful to reduce FP warnings. Finally, we sum up 10 challenges unresolved in the literature from the aspects of systematicness, effectiveness, completeness, and practicability and outline possible research opportunities based on three emerging techniques in the future.", "venue": "IEEE Transactions on Software Engineering", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2023-12-01", "journal": {"name": "IEEE Transactions on Software Engineering", "pages": "5154-5188", "volume": "49"}, "authors": [{"authorId": "95292083", "name": "Zhaoqiang Guo"}, {"authorId": "2265108074", "name": "Tingting Tan"}, {"authorId": "2131152150", "name": "Shiran Liu"}, {"authorId": "2265022393", "name": "Xutong Liu"}, {"authorId": "2265092810", "name": "Wei Lai"}, {"authorId": "3290779", "name": "Yibiao Yang"}, {"authorId": "2144433748", "name": "Yanhui Li"}, {"authorId": "2238544783", "name": "Lin Chen"}, {"authorId": "2265240869", "name": "Wei Dong"}, {"authorId": "2131564208", "name": "Yuming Zhou"}], "citations": []}
