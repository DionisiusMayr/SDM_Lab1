{"paperId": "477133fdd561d9f08550b5ffb74a5e2c275d177e", "publicationVenue": null, "title": "Proving Query Equivalence Using Linear Integer Arithmetic", "abstract": "Proving the equivalence between SQL queries is a fundamental problem in database research. Existing solvers model queries using algebraic representations and convert such representations into first-order logic formulas so that query equivalence can be verified by solving a satisfiability problem. The main challenge lies in \"unbounded summations\", which appear commonly in a query's algebraic representation in order to model common SQL features, such as projection and aggregate functions. Unfortunately, existing solvers handle unbounded summations in an ad-hoc manner based on heuristics or syntax comparison, which severely limits the set of queries that can be supported. This paper develops a new SQL equivalence prover called SQLSolver, which can handle unbounded summations in a principled way. Our key insight is to use the theory of LIA^*, which extends linear integer arithmetic formulas with unbounded sums and provides algorithms to translate a LIA^* formula to a LIA formula that can be decided using existing SMT solvers. We augment the basic LIA^* theory to handle several complex scenarios (such as nested unbounded summations) that arise from modeling real-world queries. We evaluate SQLSolver with 359 equivalent query pairs derived from the SQL rewrite rules in Calcite and Spark SQL. SQLSolver successfully proves 346 pairs of them, which significantly outperforms existing provers.", "venue": "Proc. ACM Manag. Data", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-12-08", "journal": {"name": "Proceedings of the ACM on Management of Data", "pages": "1 - 26", "volume": "1"}, "authors": [{"authorId": "2113454063", "name": "Haoran Ding"}, {"authorId": "8491577", "name": "Zhaoguo Wang"}, {"authorId": "2169801604", "name": "Yicun Yang"}, {"authorId": "2274064062", "name": "Dexin Zhang"}, {"authorId": "2274170068", "name": "Zhenglin Xu"}, {"authorId": "2240209894", "name": "Haibo Chen"}, {"authorId": "2869954", "name": "R. Piskac"}, {"authorId": "2274077111", "name": "Jinyang Li"}], "citations": [{"paperId": "6d892169ba8ad60cbc1d127d8b3c74cbe9ba7237", "title": "Query Rewriting via Large Language Models"}]}
