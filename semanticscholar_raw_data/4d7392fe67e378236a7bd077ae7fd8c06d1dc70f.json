{"paperId": "4d7392fe67e378236a7bd077ae7fd8c06d1dc70f", "publicationVenue": {"id": "790cb8e5-b66b-4c4e-bbeb-271d8f6dac7c", "name": "ACM Transactions on Computational Logic", "type": "journal", "alternate_names": ["ACM Trans Comput Log"], "issn": "1529-3785", "url": "http://www.acm.org/pubs/contents/journals/tocl/", "alternate_urls": ["http://www.acm.org/pubs/tocl/", "http://portal.acm.org/tocl", "https://tocl.acm.org/"]}, "title": "Finite-State Map-Reduce Computation and Relational Algebra Queries", "abstract": "We introduce three formal models of distributed systems for query evaluation on massive databases: Distributed Streaming with Register Automata (DSAs), Distributed Streaming with Register Transducers (DSTs), and Distributed Streaming with Register Transducers and Joins (DSTJs). These models are based on the map-reduce paradigm where the input is transformed into a dataset of key-value pairs, and on each key a local computation is performed on the values associated with that key resulting in another set of key-value pairs. Computation proceeds in a constant number of rounds, where the result of the last round is the input to the next round, and transformation of key-value pairs is required to be generic. The difference between the three models is in the local computation part. In DSAs it is limited to making one pass over its input using a register automaton, while in DSTs it can make two passes: in the first pass it uses a finite state automaton and in the second it uses a register transducer. The third model DSTJs is an extension of DSTs, where local computations are capable of constructing the Cartesian product of two sets. We obtain the following results: (1) DSAs can evaluate first-order queries over bounded degree databases; (2) DSTs can evaluate semijoin algebra queries over arbitrary databases; (3) DSTJs can evaluate the whole relational algebra over arbitrary databases; (4) DSTJs are strictly stronger than DSTs, which in turn are strictly stronger than DSAs; (5) within DSAs, DSTs, and DSTJs, there is a strict hierarchy w.r.t. the number of rounds.", "venue": "ACM Transactions on Computational Logic", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2018-06-26", "journal": {"name": "ACM Transactions on Computational Logic (TOCL)", "pages": "1 - 37", "volume": "19"}, "authors": [{"authorId": "1786248", "name": "F. Neven"}, {"authorId": "1691736", "name": "Nicole Schweikardt"}, {"authorId": "2058408", "name": "Fr\u00e9d\u00e9ric Servais"}, {"authorId": "143822123", "name": "Tony Tan"}], "citations": [{"paperId": "3cc4b3496dfe97c730ec18d6b28223bee0f57ffc", "title": "How to protect reader lending privacy under a cloud environment: a technical method"}]}
