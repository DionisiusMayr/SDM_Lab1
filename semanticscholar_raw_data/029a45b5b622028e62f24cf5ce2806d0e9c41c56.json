{"paperId": "029a45b5b622028e62f24cf5ce2806d0e9c41c56", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "Challenges and Experiences in Building an Efficient Apache Beam Runner For IBM Streams", "abstract": "\n This paper describes the challenges and experiences in the development of IBM Streams runner for Apache Beam. Apache Beam is emerging as a common stream programming interface for multiple computing engines. Each participating engine implements a\n runner\n to translate Beam applications into engine-specific programs. Hence, applications written with the Beam SDK can be executed on different underlying stream computing engines, with negligible migration penalty. IBM Streams is a widely-used enterprise streaming platform. It has a rich set of connectors and toolkits for easy integration of streaming applications with other enterprise applications. It also supports a broad range of programming language interfaces, including Java, C++, Python, Stream Processing Language (SPL) and Apache Beam. This paper focuses on our solutions to efficiently support the Beam programming abstractions in IBM Streams runner. Beam organizes data into discrete event time windows. This design, on the one hand, supports out-of-order data arrivals, but on the other hand, forces runners to maintain more states, which leads to higher space and computation overhead. IBM Streams runner mitigates this problem by efficiently indexing inter-dependent states, garbage-collecting stale keys, and enforcing bundle sizes. We also share performance concerns in Beam that could potentially impact applications. Evaluations show that IBM Streams runner outperforms Flink runner and Spark runner in most scenarios when running the Beam NEXMark benchmarks. IBM Streams runner is available for download from IBM Cloud Streaming Analytics service console.\n", "venue": "Proceedings of the VLDB Endowment", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2018-08-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "1742-1754", "volume": "11"}, "authors": [{"authorId": null, "name": "Shen Li"}, {"authorId": "51189909", "name": "Paul Gerver"}, {"authorId": "2059515833", "name": "John Macmillan"}, {"authorId": "1906105", "name": "Daniel Debrunner"}, {"authorId": "1392044643", "name": "W. Marshall"}, {"authorId": "145271132", "name": "Kun-Lung Wu"}], "citations": [{"paperId": "a3f024adb39ecfa4fdb098b435545c396e26a112", "title": "Building Advanced Web Applications Using Data Ingestion and Data Processing Tools"}, {"paperId": "d1d1bfd0a80d9740feb2b9eff7a60c0fbea8bb31", "title": "Performance Analysis of Lambda Architecture-Based Big-Data Systems on Air/Ground Surveillance Application with ADS-B Data"}, {"paperId": "e2927500053a4654c5ac15adfbb6463a10f0a5e6", "title": "MLOps in freight rail operations"}, {"paperId": "edb0c0907548a72220ca375aeda8fe9d2cceea61", "title": "FlowKV: A Semantic-Aware Store for Large-Scale State Management of Stream Processing Engines"}, {"paperId": "0d77c5578eca3ce256137850b49e3b652e2f3654", "title": "An adaptive geographic meshing and coding method for remote sensing data"}, {"paperId": "c1ba9dead003aee46aae8a24e4e171034f4e3c75", "title": "Application and Research of Deep Mining of Health Medical Big Data Based on Internet of Things"}, {"paperId": "886c398deebeaaa148ff227b9f8aa5cfcdc52241", "title": "Designing and developing smart production planning and control systems in the industry 4.0 era: a methodology and case study"}, {"paperId": "c6387a5ab1a80b9a5ea30272969bde9c73110512", "title": "An Adapter for IBM Streams and Apache Spark to Facilitate Multi-level Data Analytics"}, {"paperId": "2b9040855c35964594133346a926c5e751b02651", "title": "High\u2010performance iterative dataflow abstractions in Twister2:TSet"}, {"paperId": "b51cca6fcf42d6e56c967144cf54a8151a3958d6", "title": "Quantitative Impact Evaluation of an Abstraction Layer for Data Stream Processing Systems"}, {"paperId": "6efd0bfe229d6307fe3f3efd9d3a220b5a0c2f13", "title": "ML-TOSCA: ML pipeline modelling and orchestration using TOSCA"}, {"paperId": "5e8aa2fdfdc6839c629441a5f2a8ceb3399a04ee", "title": "Sponge: Fast Reactive Scaling for Stream Processing with Serverless Frameworks"}, {"paperId": "2dd0f8d71aa49dbc378fc07152ed12e4e00c0dee", "title": "Scalability Benchmarking of Stream Processing Engines with Apache Beam"}]}
