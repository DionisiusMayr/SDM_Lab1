{"paperId": "e919bcc14e08cc7bf2f844934d04ebfd7ad100f4", "publicationVenue": {"id": "58f55ec2-1f5a-4e79-af2a-0046ee1dcd2a", "name": "Journal of functional programming", "type": "journal", "alternate_names": ["J funct program", "Journal of Functional Programming", "J Funct Program"], "issn": "0956-7968", "url": "https://www.cambridge.org/core/journals/journal-of-functional-programming", "alternate_urls": ["http://journals.cambridge.org/jid_JFP"]}, "title": "Computation semantics of the functional scientific workflow language Cuneiform*", "abstract": "Abstract Cuneiform is a minimal functional programming language for large-scale scientific data analysis. Implementing a strict black-box view on external operators and data, it allows the direct embedding of code in a variety of external languages like Python or R, provides data-parallel higher order operators for processing large partitioned data sets, allows conditionals and general recursion, and has a naturally parallelizable evaluation strategy suitable for multi-core servers and distributed execution environments like Hadoop, HTCondor, or distributed Erlang. Cuneiform has been applied in several data-intensive research areas including remote sensing, machine learning, and bioinformatics, all of which critically depend on the flexible assembly of pre-existing tools and libraries written in different languages into complex pipelines. This paper introduces the computation semantics for Cuneiform. It presents Cuneiform's abstract syntax, a simple type system, and the semantics of evaluation. Providing an unambiguous specification of the behavior of Cuneiform eases the implementation of interpreters which we showcase by providing a concise reference implementation in Erlang. The similarity of Cuneiform's syntax to the simply typed lambda calculus puts Cuneiform in perspective and allows a straightforward discussion of its design in the context of functional programming. Moreover, the simple type system allows the deduction of the language's safety up to black-box operators. Last, the formulation of the semantics also permits the verification of compilers to and from other workflow languages.", "venue": "Journal of functional programming", "year": 2017, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2017-10-24", "journal": {"name": "Journal of Functional Programming", "volume": "27"}, "authors": [{"authorId": "144772469", "name": "J\u00f6rgen Brandt"}, {"authorId": "1731926", "name": "W. Reisig"}, {"authorId": "1693022", "name": "U. Leser"}], "citations": [{"paperId": "adc829ea230a1d884d91f2448841d324bf03e3d5", "title": "Solving Partially Observable Environments with Universal Search Using Dataflow Graph-Based Programming Model"}, {"paperId": "e154ff9f7275a5493cefbe9f0f1a74109740e94d", "title": "Unifying package managers, workflow engines, and containers: Computational reproducibility with BioNix"}, {"paperId": "7e7b68a06f622141e62f167277dc91c7040259fa", "title": "Portability of Scientific Workflows in NGS Data Analysis: A Case Study"}, {"paperId": "66c9f4c60c3bea1cb9379cfa1e3fefcbeaae70b5", "title": "Towards reproducible computational drug discovery"}, {"paperId": "c8dc089296e858a169584ee24d03158bcd803444", "title": "Feedback-Based Resource Allocation for Batch Scheduling of Scientific Workflows"}, {"paperId": "3a43c756aae279ef8ec4ea9b989dd9847d9085ba", "title": "Towards an Internet of Science"}, {"paperId": "d64b9f8f7bf0cdec2876815037e0e9ffafe9c0f4", "title": "SciPipe\u2014Turning Scientific Workflows into Computer Programs"}, {"paperId": "fa78b39d4d20beabd27a7eb0978fff38fc648a7d", "title": "Script of Scripts: A pragmatic workflow system for daily computational research"}, {"paperId": "6b9e84a03d0ad38beba2c4ad42746d9a83028f93", "title": "Desarrollo y despliegue de un workflow para el an\u00e1lisis gen\u00f3mico de Campylobacter Jejuni"}, {"paperId": "5b94afd84e59da930740c711a008b9c58aa345b0", "title": "Modeling Erlang processes as Petri nets"}, {"paperId": "61585741c987ffc236cd754ca8c5fc4559967dd2", "title": "SciPipe: A workflow library for agile development of complex and dynamic bioinformatics pipelines"}, {"paperId": "cad1057a722868f24cb5e2a39a09d6fd012aed33", "title": "Criteria for the Evaluation of Workflow Management Systems for Scientific Data Analysis"}]}
