{"paperId": "2a9250a113ddb49b87ddfa4e11c77ace1f9cc7e5", "publicationVenue": {"id": "7ddefda0-174f-499a-9dce-855879dd01b7", "name": "IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum", "type": "conference", "alternate_names": ["IPDPSW", "IEEE Int Symp Parallel  Distrib Process Work Phd Forum"]}, "title": "PageRank Pipeline Benchmark: Proposal for a Holistic System Benchmark for Big-Data Platforms", "abstract": "The rise of big data systems has created a need for benchmarks to measure and compare the capabilities of these systems. Big data benchmarks present unique scalability challenges. The supercomputing community has wrestled with these challenges for decades and developed methodologies for creating rigorous scalable benchmarks (e.g., HPC Challenge). The proposed PageRank pipeline benchmark employs supercomputing benchmarking methodologies to create a scalable benchmark that is reflective of many real-world big data processing systems. The PageRank pipeline benchmark builds on existing prior scalable benchmarks (Graph500, Sort, and PageRank) to create a holistic benchmark with multiple integrated kernels that can be run together or independently. Each kernel is well defined mathematically and can be implemented in any programming environment. The linear algebraic nature of PageRank makes it well suited to being implemented using the GraphBLAS standard. The computations are simple enough that performance predictions can be made based on simple computing hardware models. The surrounding kernels provide the context for each kernel that allows rigorous definition of both the input and the output for each kernel. Furthermore, since the proposed PageRank pipeline benchmark is scalable in both problem size and hardware, it can be used to measure and quantitatively compare a wide range of present day and future systems. Serial implementations in C++, Python, Python with Pandas, Matlab, Octave, and Julia have been implemented and their single threaded performance has been measured.", "venue": "IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum", "year": 2016, "fieldsOfStudy": ["Computer Science", "Physics"], "publicationTypes": ["JournalArticle"], "publicationDate": "2016-03-06", "journal": {"name": "2016 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)", "pages": "929-937"}, "authors": [{"authorId": "145228522", "name": "P. Dreher"}, {"authorId": "2098646", "name": "C. Byun"}, {"authorId": "2114171266", "name": "Chris Hill"}, {"authorId": "74882299", "name": "V. Gadepally"}, {"authorId": "1871661", "name": "Bradley C. Kuszmaul"}, {"authorId": "3257323", "name": "J. Kepner"}], "citations": [{"paperId": "19df3f66303a8c304aaa233602bf26b37bee54bd", "title": "GraphChallenge.org Sparse Deep Neural Network Performance"}, {"paperId": "11dc2856a6ad295ccbad73f19d0df0aee633064e", "title": "GraphChallenge.org Triangle Counting Performance"}, {"paperId": "4022bd72825fd9e3b778550e1a9483ab55f66e02", "title": "Sparse Deep Neural Network Graph Challenge"}, {"paperId": "5761c171f57f2eb08c73b6426d13ccf12ac9e008", "title": "A GPU Implementation of the Sparse Deep Neural Network Graph Challenge"}, {"paperId": "93a97c4483dd4afbee63b245a52780a33268e858", "title": "Data Prefetching and Eviction Mechanisms of In-Memory Storage Systems Based on Scheduling for Big Data Processing"}, {"paperId": "a8c65c9543c1af39ced30d16e186946743bd5dcf", "title": "PageRank Acceleration for Large Graphs with Scalable Hardware and Two-Step SpMV"}, {"paperId": "0d5245b44dc311da3746bf5ceb6e357df2d894df", "title": "GraphChallenge.org: Raising the Bar on Graph Analytic Performance"}, {"paperId": "33572d19d80f3dd31ff2740cb059f7ffbea61ce1", "title": "Benchmarking Big Data Systems: A Review"}, {"paperId": "2eca0851b8ab7991739ffe7f84b930e771b14d1b", "title": "Design, Generation, and Validation of Extreme Scale Power-Law Graphs"}, {"paperId": "a4c88f0afcc5ba68b3860f8507d50649642158b1", "title": "Streaming graph challenge: Stochastic block partition"}, {"paperId": "bae9bd3fa9dc123d131a30d8d73e765eed0cd888", "title": "Static graph challenge: Subgraph isomorphism"}, {"paperId": "d285ec7909da9c59fc8a92a5c63b82d586a04552", "title": "In-storage embedded accelerator for sparse pattern processing"}, {"paperId": "d5a33432ae4e27f768680c236085c8849b714ab2", "title": "A CUDA implementation of the pagerank pipeline benchmark"}, {"paperId": "943e04e8740e9d4a76146134ca71a33ffba6a984", "title": "Stochastic Block Partition Graph Challenge-draft -"}, {"paperId": "ff8c9f1ce9072f3cda7e87f3d6a70519e586160e", "title": "IMPROVING HADOOP THROUGH DATA PLACEMENT STRATEGY"}]}
