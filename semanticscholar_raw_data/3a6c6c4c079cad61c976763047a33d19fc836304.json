{"paperId": "3a6c6c4c079cad61c976763047a33d19fc836304", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Scheduling Space Expander: An Extension of Concurrency Control for Data Ingestion Queries", "abstract": "With the continuing advances of sensing devices and IoT applications, database systems needs to process data ingestion queries that update the sensor data frequently. To process data ingestion queries with transactional correctness, we propose a novel protocol extension method, scheduling space expander (SSE). The key idea of SSE is that we can safely omit an update if the update becomes outdated and unnecessary. SSE adds another control flow to conventional protocols to test the transactional correctness of an erasing version order, which assumes that a transactions\u2019 updates are all outdated and unnecessary. In addition, we present an optimization of SSE called epoch-based SSE (ESSE), which generates, tests, and maintains the erasing version order more efficiently than SSE. Our approach makes the performance of data ingestion queries more efficient. Experimental results demonstrate that our ESSE extensions of Silo and MVTO improve 2.7 \u00d7 and 2.5 \u00d7 performance on the TATP benchmark on a 144-core machine, and the extensions achieved performance comparable to that of the original protocol for the TPC-C benchmark.", "venue": "arXiv.org", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-01-25", "journal": {"name": "ArXiv", "volume": "abs/2301.10440"}, "authors": [{"authorId": "102314011", "name": "Sho Nakazono"}, {"authorId": "2069151697", "name": "Hiroyuki Uchiyama"}, {"authorId": "2112645174", "name": "Yasuhiro Fujiwara"}, {"authorId": "2131033", "name": "H. Kawashima"}], "citations": [{"paperId": "8b4fd02d1c18c596b735116be6319dd7bff4b2d8", "title": "CLMD: Making Lock Manager Predictable and Concurrent for Deterministic Concurrency Control"}]}
