{"paperId": "df8eb298471be7d0f8e6f647fbaa562366c0d901", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "Pushing Data-Induced Predicates Through Joins in Big-Data Clusters", "abstract": "Using data statistics, we convert predicates on a table into data induced predicates (diPs) that apply on the joining tables. Doing so substantially speeds up multi-relation queries because the benefits of predicate pushdown can now apply beyond just the tables that have predicates. We use diPs to skip data exclusively during query optimization; i.e., diPs lead to better plans and have no overhead during query execution. We study how to apply diPs for complex query expressions and how the usefulness of diPs varies with the data statistics used to construct diPs and the data distributions. Our results show that building diPs using zone-maps which are already maintained in today's clusters leads to sizable data skipping gains. Using a new (slightly larger) statistic, 50% of the queries in the TPC-H, TPC-DS and JoinOrder benchmarks can skip at least 33% of the query input. Consequently, the median query in a production big-data cluster finishes roughly 2x faster.", "venue": "Proceedings of the VLDB Endowment", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-11-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "252-265", "volume": "13"}, "authors": [{"authorId": "4773175", "name": "Laurel J. Orr"}, {"authorId": "1741860", "name": "Srikanth Kandula"}, {"authorId": "145647476", "name": "S. Chaudhuri"}], "citations": [{"paperId": "87ccf1ae6771336620ec6fbeeb3ac15ce4fe99b1", "title": "PLAQUE: Automated Predicate Learning at Query Time"}, {"paperId": "5145100a70727643f1104c7155a49ad512062e9b", "title": "TreeTracker Join: Turning the Tide When a Tuple Fails to Join"}, {"paperId": "73fcde53244ea9ee9227a56c27d69b426d4c22fa", "title": "SH2O: Efficient Data Access for Work-Sharing Databases"}, {"paperId": "5bf2656e17adb4ce8a12ed09a612e23aa2209f29", "title": "NOCAP: Near-Optimal Correlation-Aware Partitioning Joins"}, {"paperId": "a81934feff1c9575199d2086795650fb141f6e3f", "title": "SAT: sampling acceleration tree for adaptive database repartition"}, {"paperId": "736cb7a66eaa0df3655a8989f2e506b4aa546144", "title": "Predicate Transfer: Efficient Pre-Filtering on Multi-Join Queries"}, {"paperId": "c8ae41a86b4deee090c79790c5fcebb7d046aefd", "title": "Real-Time Analytics by Coordinating Reuse and Work Sharing"}, {"paperId": "f7e14a3b43377dea6f7258b1933aaa8c9156c7fe", "title": "Simple Adaptive Query Processing vs. Learned Query Optimizers: Observations and Analysis"}, {"paperId": "5aa034c62c09e32f18babd5bdb198f2dbe34a34b", "title": "Sieve: A Learned Data-Skipping Index for Data Analytics"}, {"paperId": "62ab0c752b63393c9462ef2b749cd7545d2b1a49", "title": "Predicate Pushdown for Data Science Pipelines"}, {"paperId": "60ba359fccf0cbe952931fb8cb132035f0313198", "title": "Selection Pushdown in Column Stores using Bit Manipulation Instructions"}, {"paperId": "d160e727d27cf621705efd7bef5b4e261a999c1d", "title": "Pando: Enhanced Data Skipping with Logical Data Partitioning"}, {"paperId": "dff0e6b1b327ab13be7ef42bbb2567c94d551f95", "title": "Analytical Engines With Context-Rich Processing: Towards Efficient Next-Generation Analytics"}, {"paperId": "938ff51b43f95921c6071bf7f85ccb358da23951", "title": "End-to-end Optimization of Machine Learning Prediction Queries"}, {"paperId": "ab5c21f89cf2e56433ad7c480f44725457e60495", "title": "Data-induced predicates for sideways information passing in query optimizers"}, {"paperId": "83c8b9ffccb4f76516a8317e9735b4ccacc281c6", "title": "Making RDBMSs Efficient on Graph Workloads Through Predefined Joins"}, {"paperId": "03fe5309d8ea349ed1aba77ba1e66ba5900856b8", "title": "The Cosmos Big Data Platform at Microsoft: Over a Decade of Progress and a Decade to Look Forward"}, {"paperId": "3957d638e7ad2c26b32ac6a12e4c6662431ebaff", "title": "Hyperspace: The Indexing Subsystem of Azure Synapse"}, {"paperId": "b645ede48c4929913e55313a4bd5084096cdd1de", "title": "Threshold Queries in Theory and in the Wild"}, {"paperId": "9f362a8d36777addaaafb51f10129e30860f74cc", "title": "Instance-Optimized Data Layouts for Cloud Analytics Workloads"}, {"paperId": "faa62d3280bf3d040f2c719c32b27a9785f90557", "title": "SIA: Optimizing Queries using Learned Predicates"}, {"paperId": "32b3e4b7fbf86829c753f8ddd233542f189cf246", "title": "Extensible Data Skipping"}, {"paperId": "c0a95fc046be779625156b585cc86d723ca760e0", "title": "Approximate partition selection for big-data workloads using summary statistics"}, {"paperId": "9e2f0e874f42d54ab5b15dc9d4789e8a725cd4f7", "title": "Conditional Cuckoo Filters"}, {"paperId": "224ee2c204471bd3ac295e88bbf070e0607339ae", "title": "Quantifying TPC-H choke points and their optimizations"}, {"paperId": "1053445c1ad561036c5282467986e45c15af06e6", "title": "Crystal: A Unified Cache Storage System for Analytical Databases"}]}
