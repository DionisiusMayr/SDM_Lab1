{"paperId": "3b3f458357af3b1a818f12a3ee410d034ec8b131", "publicationVenue": {"id": "47f3ab87-b9a2-4519-a61f-2b025937c786", "name": "International Conference on Internet of Things, Big Data and Security", "type": "conference", "alternate_names": ["IoTBDS", "Int Conf Internet Thing Big Data Secur"], "url": "http://www.iotbds.org"}, "title": "Analysis Layer Implementation Method for a Streaming Data Processing System", "abstract": "Analysis is an important part of the widely used streaming data processing. The frequency of flow element occurrence and their values sum are calculated during analysis. The algorithms like Count-Min Sketch and others give a big error in restoring the aggregate with a large number of elements. The article proposes application of a vector matrix. Each vector has a length of 'n'. If the number of different elements approaches 'n', then the window size is automatically reduced. This allows accurate storage of the aggregate without element loss. The SELECT operator for searching in a vector array is also proposed. It allows getting various slices of the aggregated data accumulated over the window. The comparison of the developed method with the Count-Min Sketch data processing method in the Analysis Layer was performed. The experiment showed that the method based on the vector matrix more than twice reduces memory consumption. It also ensures the exact SELECT statement execution. An introduction of a floating window allows maintaining the calculation accuracy and avoiding losing records from the stream. The same query sketch-based execution", "venue": "International Conference on Internet of Things, Big Data and Security", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal": {"pages": "262-269"}, "authors": [{"authorId": "40026683", "name": "A. V. Burdakov"}, {"authorId": "1942286", "name": "Y. Grigorev"}, {"authorId": "2729125", "name": "A. Ploutenko"}, {"authorId": "71812339", "name": "O. Ermakov"}], "citations": []}
