{"paperId": "916f6aa78aeb78ed3cf4976e1f8c67b634f3fc95", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "Evaluating query languages and systems for high-energy physics data", "abstract": "In the domain of high-energy physics (HEP), general-purpose query languages have found little adoption in analysis. This is surprising regarding SQL-based systems, as HEP data analysis matches SQL\u2019s processing model well: the data is fully structured and makes use of predominantly standard operators. To better understand the situation, we select six general-purpose query engines, from both the SQL and NoSQL domain, and analyze their performance, scalability, and usability in HEP analysis, employing standard HEP tools as baseline. We also identify a set of core language features needed to support HEP data analysis. Our results reveal an interesting and complex picture: several query languages provide a rich and natural query development experience, while others fall short. In terms of performance, our results reveal that many of the database systems are one or two orders of magnitude slower than the standard HEP analysis tools, while others manage to scale and perform well. These conclusions suggest that while the existing data processing systems are viable candidates for HEP analysis, there is still work to be done to improve their performance and ability to succinctly express HEP queries.", "venue": "Proceedings of the VLDB Endowment", "year": 2021, "fieldsOfStudy": ["Physics", "Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-04-26", "journal": {"name": "Journal of Physics: Conference Series", "volume": "2438"}, "authors": [{"authorId": "2997351", "name": "D. Graur"}, {"authorId": "2068635149", "name": "Ingo M\u00fcller"}, {"authorId": "2702548", "name": "G. Fourny"}, {"authorId": "1815031", "name": "G. Watts"}, {"authorId": "102295116", "name": "M. Proffitt"}, {"authorId": "144641551", "name": "G. Alonso"}], "citations": [{"paperId": "c8c05a0bcf8ca6230f901c34a4f26bf257a38883", "title": "NLSQL: Generating and Executing SQL Queries via Natural Language Using Large Language Models"}, {"paperId": "e4f0b124725ffc9c0f847dd58a3567a61407cd91", "title": "Snowmass 2021 Computational Frontier CompF4 Topical Group Report Storage and Processing Resource Access"}, {"paperId": "8e8808966fce454d09eb23212624f5991bba674e", "title": "Leveraging State-of-the-Art Engines for Large-Scale Data Analysis in High Energy Physics"}, {"paperId": "6afcc0de4cdc9e709651f3a9762a1615148a2261", "title": "Evaluating Awkward Arrays, uproot, and coffea as a query platform for High Energy Physics Data"}, {"paperId": "2d2b784fd927cf80246a6d5865590b9265953c44", "title": "HL-LHC Analysis With ROOT"}, {"paperId": "164a6bcfa1af83f2ba1d8688769e81d8820f265f", "title": "HL-LHC Computing Review Stage 2, Common Software Projects: Data Science Tools for Analysis"}, {"paperId": "0323f7f26a7a6c994f4e34c4661e5e471765ada8", "title": "RumbleML: program the lakehouse with JSONiq"}]}
