{"paperId": "00cf787add0f7b31f5ddf41d8d9ece1eb4af46ca", "publicationVenue": {"id": "289bfdda-eab3-4c9a-97be-ef1e0f9ddfc0", "name": "International Symposium on Software Testing and Analysis", "type": "conference", "alternate_names": ["ISSTA", "Int Symp Softw Test Anal"], "url": "https://dl.acm.org/conference/issta"}, "title": "More Precise Regression Test Selection via Reasoning about Semantics-Modifying Changes", "abstract": "Regression test selection (RTS) speeds up regression testing by only re-running tests that might be affected by code changes. Ideal RTS safely selects all affected tests and precisely selects only affected tests. But, aiming for this ideal is often slower than re-running all tests. So, recent RTS techniques use program analysis to trade precision for speed, i.e., lower regression testing time, or even use machine learning to trade safety for speed. We seek to make recent analysis-based RTS techniques more precise, to further speed up regression testing. Independent studies suggest that these techniques reached a \u201cperformance wall\u201d in the speed-ups that they provide. We manually inspect code changes to discover those that do not require re-running tests that are only affected by such changes. We categorize 29 kinds of changes that we find from five projects into 13 findings, 11 of which are semantics-modifying. We enhance two RTS techniques---Ekstazi and STARTS---to reason about our findings. Using 1,150 versions of 23 projects, we evaluate the impact on safety and precision of leveraging such changes. We also evaluate if our findings from a few projects can speed up regression testing in other projects. The results show that our enhancements are effective and they can generalize. On average, they result in selecting 41.7% and 31.8% fewer tests, and take 33.7% and 28.7% less time than Ekstazi and STARTS, respectively, with no loss in safety.", "venue": "International Symposium on Software Testing and Analysis", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2023-07-12", "journal": {"name": "Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis"}, "authors": [{"authorId": "2182596408", "name": "Yu Liu"}, {"authorId": "2107966746", "name": "Jiyang Zhang"}, {"authorId": "5890416", "name": "Pengyu Nie"}, {"authorId": "2020926", "name": "Milo\u0161 Gligori\u0107"}, {"authorId": "3023790", "name": "Owolabi Legunsen"}], "citations": [{"paperId": "fdff5c66b2f4ce9f129bcdbcf0577f0aaff9a1e7", "title": "Extracting Inline Tests from Unit Tests"}, {"paperId": "8be861624332e769270171a04ab7e97d53730400", "title": "eMOP: A Maven Plugin for Evolution-Aware Runtime Verification"}]}
