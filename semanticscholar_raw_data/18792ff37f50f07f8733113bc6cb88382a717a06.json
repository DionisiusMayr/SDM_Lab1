{"paperId": "18792ff37f50f07f8733113bc6cb88382a717a06", "publicationVenue": {"id": "138e58fc-8643-41c2-a92c-068ea4f4c607", "name": "PeerJ Computer Science", "alternate_names": ["Peerj Comput Sci"], "issn": "2376-5992", "url": "https://peerj.com/archives/?journal=cs", "alternate_urls": ["https://peerj.com/computer-science/", "http://peerj.com/cs"]}, "title": "FogFrame: a framework for IoT application execution in the fog", "abstract": "Recently, a multitude of conceptual architectures and theoretical foundations for fog computing have been proposed. Despite this, there is still a lack of concrete frameworks to setup real-world fog landscapes. In this work, we design and implement the fog computing framework FogFrame\u2014a system able to manage and monitor edge and cloud resources in fog landscapes and to execute Internet of Things (IoT) applications. FogFrame provides communication and interaction as well as application management within a fog landscape, namely, decentralized service placement, deployment and execution. For service placement, we formalize a system model, define an objective function and constraints, and solve the problem implementing a greedy algorithm and a genetic algorithm. The framework is evaluated with regard to Quality of Service parameters of IoT applications and the utilization of fog resources using a real-world operational testbed. The evaluation shows that the service placement is adapted according to the demand and the available resources in the fog landscape. The greedy placement leads to the maximum utilization of edge devices keeping at the edge as many services as possible, while the placement based on the genetic algorithm keeps devices from overloads by balancing between the cloud and edge. When comparing edge and cloud deployment, the service deployment time at the edge takes 14% of the deployment time in the cloud. If fog resources are utilized at maximum capacity, and a new application request arrives with the need of certain sensor equipment, service deployment becomes impossible, and the application needs to be delegated to other fog resources. The genetic algorithm allows to better accommodate new applications and keep the utilization of edge devices at about 50% CPU. During the experiments, the framework successfully reacts to runtime events: (i) services are recovered when devices disappear from the fog landscape; (ii) cloud resources and highly utilized devices are released by migrating services to new devices; (iii) and in case of overloads, services are migrated in order to release resources.", "venue": "PeerJ Computer Science", "year": 2021, "fieldsOfStudy": ["Computer Science", "Medicine"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-07-05", "journal": {"name": "PeerJ Computer Science", "volume": "7"}, "authors": [{"authorId": "2711278", "name": "O. Skarlat"}, {"authorId": "144042741", "name": "Stefan Schulte"}], "citations": [{"paperId": "6993a2c21b9250e71e8b8d8f3e6accac01ac9987", "title": "Evaluating the integration of Esper complex event processing engine and message brokers"}, {"paperId": "2c16dbabbd454963c9753d8768dabdbbcc0d160a", "title": "A scalable and flexible platform for service placement in multi-fog and multi-cloud environments"}, {"paperId": "a1b1ebb1de0381846eed25d8eb2ffe06410481a7", "title": "Task Allocation in Industrial Edge Networks with Particle Swarm Optimization and Deep Reinforcement Learning"}, {"paperId": "11f0d49a6d691a6abeeda11b2f9e2e8935f6c0f4", "title": "Genetic-based fog colony optimization hybridized with hierarchical clustering and its influence in the placement of fog services"}, {"paperId": "1b22340950ab20d944e37b30d5526a6d1d9c3502", "title": "FLEX: A Platform for Scalable Service Placement in Multi-Fog and Multi-Cloud Environments"}, {"paperId": "945ca3f71c30739a21af89773fb675481a09b9ee", "title": "New Platform for IoT Application Management Based on Fog Computing"}, {"paperId": "1bed512e9f58a9fb7f4e4d3ee671533a48b71966", "title": "GWO-SA: Gray Wolf Optimization Algorithm for Service Activation Management in Fog Computing"}]}
