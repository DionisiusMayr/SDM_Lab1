{"paperId": "b9404b6dd58d7778c32b94c76587219fb2f0b70e", "publicationVenue": {"id": "0942fb86-c16f-4084-9902-10ddcfe18180", "name": "Micro", "type": "conference", "alternate_names": ["Int Symp Microarchitecture", "MICRO", "International Symposium on Microarchitecture", "Annual IEEE/ACM International Symposium on Microarchitecture", "Annu IEEE/ACM Int Symp Microarchitecture"], "issn": "0271-9002", "alternate_issns": ["2151-4143", "2673-8023"], "url": "http://www.microarch.org/"}, "title": "OCOLOS: Online COde Layout OptimizationS", "abstract": "The processor front-end has become an increasingly important bottleneck in recent years due to growing application code footprints, particularly in data centers. First-level instruction caches and branch prediction engines have not been able to keep up with this code growth, leading to more front-end stalls and lower Instructions Per Cycle (IPC). Profile-guided optimizations performed by compilers represent a promising approach, as they rearrange code to maximize instruction cache locality and branch prediction efficiency along a relatively small number of hot code paths. However, these optimizations require continuous profiling and rebuilding of applications to ensure that the code layout matches the collected profiles. If an application\u2019s code is frequently updated, it becomes challenging to map profiling data from a previous version onto the latest version, leading to ignored profiling data and missed optimization opportunities.In this paper, we propose OCOLOS, the first online code layout optimization system for unmodified applications written in unmanaged languages. OCOLOS allows profile-guided optimization to be performed on a running process, instead of being performed offline and requiring the application to be re-launched. By running online, profile data is always relevant to the current execution and always maps perfectly to the running code. OCOLOS demonstrates how to achieve robust online code replacement in complex multithreaded applications like MySQL and MongoDB, without requiring any application changes. Our experiments show that OCOLOS can accelerate MySQL by up to $1.41 \\times $, the Verilator hardware simulator by up to $2.20 \\times $, and a build of the Clang compiler by up to $1.14 \\times $.", "venue": "Micro", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-10-01", "journal": {"name": "2022 55th IEEE/ACM International Symposium on Microarchitecture (MICRO)", "pages": "530-545"}, "authors": [{"authorId": "2108080322", "name": "Yuxuan Zhang"}, {"authorId": "31918563", "name": "Tanvir Ahmed Khan"}, {"authorId": "10019813", "name": "Gilles A. Pokam"}, {"authorId": "3178312", "name": "Baris Kasikci"}, {"authorId": "2655459", "name": "Heiner Litz"}, {"authorId": "1739688", "name": "Joseph Devietti"}], "citations": [{"paperId": "b0683118a90f4af21ea3dfd9176ffd9c728592d1", "title": "JACO: JAva Code Layout Optimizer Enabling Continuous Optimization without Pausing Application Services"}, {"paperId": "81d87087589848d2f0a75c6d97a12755c49f6b25", "title": "Whisper: Profile-Guided Branch Misprediction Elimination for Data Center Applications"}, {"paperId": "398d46960cc4a126d3365f774216a7a8b8c61066", "title": "RPG 2 : Robust Profile-Guided Runtime Prefetch Generation"}]}
