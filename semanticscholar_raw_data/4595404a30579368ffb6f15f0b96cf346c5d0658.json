{"paperId": "4595404a30579368ffb6f15f0b96cf346c5d0658", "publicationVenue": {"id": "1a5858d9-edfe-4a1b-ae39-60020748678f", "name": "ACM Transactions on Architecture and Code Optimization (TACO)", "type": "journal", "alternate_names": ["ACM Transactions on Architecture and Code Optimization", "ACM Trans Archit Code Optim", "ACM Trans Archit Code Optim (TACO"], "issn": "1544-3566", "url": "http://www.acm.org/taco", "alternate_urls": ["http://portal.acm.org/taco/", "https://taco.acm.org/"]}, "title": "LargeGraph", "abstract": "Many out-of-GPU-memory systems are recently designed to support iterative processing of large-scale graphs. However, these systems still suffer from long time to converge because of inefficient propagation of active vertices\u2019 new states along graph paths. To efficiently support out-of-GPU-memory graph processing, this work designs a system LargeGraph. Different from existing out-of-GPU-memory systems, LargeGraph proposes a dependency-aware data-driven execution approach, which can significantly accelerate active vertices\u2019 state propagations along graph paths with low data access cost and also high parallelism. Specifically, according to the dependencies between the vertices, it only loads and processes the graph data associated with dependency chains originated from active vertices for smaller access cost. Because most active vertices frequently use a small evolving set of paths for their new states\u2019 propagation because of power-law property, this small set of paths are dynamically identified and maintained and efficiently handled on the GPU to accelerate most propagations for faster convergence, whereas the remaining graph data are handled over the CPU. For out-of-GPU-memory graph processing, LargeGraph outperforms four cutting-edge systems: Totem (5.19\u201311.62\u00d7), Graphie (3.02\u20139.41\u00d7), Garaph (2.75\u20138.36\u00d7), and Subway (2.45\u20134.15\u00d7).", "venue": "ACM Transactions on Architecture and Code Optimization (TACO)", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-09-29", "journal": {"name": "ACM Transactions on Architecture and Code Optimization (TACO)", "pages": "1 - 24", "volume": "18"}, "authors": [{"authorId": "72095113", "name": "Yu Zhang"}, {"authorId": "2142041771", "name": "Da Peng"}, {"authorId": "144925807", "name": "Xiaofei Liao"}, {"authorId": "145914251", "name": "Hai Jin"}, {"authorId": "2109500825", "name": "Haikun Liu"}, {"authorId": "2069591381", "name": "Lin Gu"}, {"authorId": "143824511", "name": "Bingsheng He"}], "citations": [{"paperId": "daac6116da574ae21551a9f0037972067257b5b2", "title": "GRIT: Enhancing Multi-GPU Performance with Fine-Grained Dynamic Page Placement"}, {"paperId": "aae7a3652d1d16c0958ab3c5eea250ba9eafc86a", "title": "INFINEL: An efficient GPU-based processing method for unpredictable large output graph queries"}, {"paperId": "f30c82d5bc12934982d5d6494b7a06553b84000c", "title": "A Bucket-aware Asynchronous Single-Source Shortest Path Algorithm on GPU"}, {"paperId": "ac0624bdfdc4df24378fa6d172a831a449126789", "title": "Triangle Dropping: An Occluded-geometry Predictor for Energy-efficient Mobile GPUs"}]}
