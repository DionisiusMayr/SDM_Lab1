{"paperId": "e7378506ce1e96b6fd600c6c5ca4cc047dc0ea34", "publicationVenue": null, "title": "Understanding the Impact of Branch Edit Features for the Automatic Prediction of Merge Conflict Resolutions", "abstract": "Developers regularly have to resolve merge conflicts, i.e., two con-flictingsetsofchangestothesamefilesindifferentbranches,which canbetediousanderror-prone.Toresolveconflicts,developers typically:keepthelocalversion(KL)ortheremoteversion(KR)of thecode.Theyalsosometimesmanuallyeditbothversionsintoa singleone(ME).However,mostexistingtechniquesonlysupport mergingthelocalandremoteversions(theMEstrategy). We recently proposed RPRedictoR, a machine learning-based approach to support developers in choosing how to resolve a conflict (by KL, KR, or ME), by predicting their resolution strategy. In its original design, RPRedictoR uses a set of Evolution History Features ( \ud835\udc38\ud835\udc3b\ud835\udc39 s) that capture: the magnitude of the changes in conflict, their evolution, and the experience of the developers involved. In this paper, we proposed and evaluated a new set of Branch Edit Features ( \ud835\udc35\ud835\udc38\ud835\udc39 s), that capture the fine-grained edits that were performed on each branch of the conflict. We learned multiple lessons. First, \ud835\udc35\ud835\udc38\ud835\udc39 s provided lower effectiveness (F-score) than the original \ud835\udc38\ud835\udc3b\ud835\udc39 s. Second, combining \ud835\udc35\ud835\udc38\ud835\udc39 s with \ud835\udc38\ud835\udc3b\ud835\udc39 s still did not improve the effectiveness of \ud835\udc38\ud835\udc3b\ud835\udc39 s, it provided the same f-score. Third, the feature set that provided highest effectiveness in our experiments was the combination of \ud835\udc38\ud835\udc3b\ud835\udc39\ud835\udc60 with a subset of \ud835\udc35\ud835\udc38\ud835\udc39 s that captures the number of insertions performed in the local branch, but this combination only improved \ud835\udc38\ud835\udc3b\ud835\udc39 s by 3 pp. f-score. Finally, our experiments also share the lesson that some feature sets provided higher C-score ( i.e., the safety of the technique\u2019s mistakes) as a trade-off for lower f-scores. This may be valued by developers and we believe that it should be studied in the future", "venue": "", "year": null, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2185088258", "name": "Waad Aldndni"}, {"authorId": "2288309816", "name": "Francisco Servant"}, {"authorId": "2238745214", "name": "Na Meng"}], "citations": []}
