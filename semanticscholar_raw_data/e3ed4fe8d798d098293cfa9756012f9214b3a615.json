{"paperId": "e3ed4fe8d798d098293cfa9756012f9214b3a615", "publicationVenue": {"id": "711c7c92-e80f-40f2-9459-e1dfb9c54cd7", "name": "Theory and Practice of Logic Programming", "type": "journal", "alternate_names": ["Theory Pract Log Program"], "issn": "1471-0684", "url": "https://www.cambridge.org/core/journals/theory-and-practice-of-logic-programming", "alternate_urls": ["http://journals.cambridge.org/TLP"]}, "title": "A datalog-based computational model for coordination-free, data-parallel systems", "abstract": "Abstract Cloud computing refers to maximizing efficiency by sharing computational and storage resources, while data-parallel systems exploit the resources available in the cloud to perform parallel transformations over large amounts of data. In the same line, considerable emphasis has been recently given to two apparently disjoint research topics: data-parallel, and eventually consistent, distributed systems. Declarative networking has been recently proposed to ease the task of programming in the cloud, by allowing the programmer to express only the desired result and leave the implementation details to the responsibility of the run-time system. In this context, we deem it appropriate to propose a study on a logic-programming-based computational model for eventually consistent, data-parallel systems, the keystone of which is provided by the recent finding that the class of programs that can be computed in an eventually consistent, coordination-free way is that of monotonic programs. This principle is called Consistency and Logical Monotonicity (CALM) and has been proven by Ameloot et al. for distributed, asynchronous settings. We advocate that CALM should be employed as a basic theoretical tool also for data-parallel systems, wherein computation usually proceeds synchronously in rounds and where communication is assumed to be reliable. We deem this problem relevant and interesting, especially for what concerns parallel dataflow optimizations. Nowadays, we are in fact witnessing an increasing concern about understanding which properties distinguish synchronous from asynchronous parallel processing, and when the latter can replace the former. It is general opinion that coordination-freedom can be seen as a major discriminant factor. In this work, we make the case that the current form of CALM does not hold in general for data-parallel systems, and show how, using novel techniques, the satisfiability of the CALM principle can still be obtained although just for the subclass of programs called connected monotonic queries. We complete the study with considerations on the relationships between our model and the one employed by Ameloot et al., showing that our techniques subsume the latter when the synchronization constraints imposed on the system are loosened.", "venue": "Theory and Practice of Logic Programming", "year": 2014, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2014-05-28", "journal": {"name": "Theory and Practice of Logic Programming", "pages": "874 - 927", "volume": "18"}, "authors": [{"authorId": "2192580", "name": "Matteo Interlandi"}, {"authorId": "1779997", "name": "L. Tanca"}], "citations": [{"paperId": "2001e952a7453c417e52d6959c2f008fa9555a23", "title": "A Case for Stale Synchronous Distributed Model for Declarative Recursive Computation"}]}
