{"paperId": "c08de1c411aec1129f530f609044d6fc1e2bb1f4", "publicationVenue": null, "title": "All-in-One: Graph Processing in RDBMSs Revisited", "abstract": "To support analytics on massive graphs such as online social networks, RDF, Semantic Web, etc. many new graph algorithms are designed to query graphs for a specific problem, and many distributed graph processing systems are developed to support graph querying by programming. In this paper, we focus on RDBM, which has been well studied over decades to manage large datasets, and we revisit the issue how RDBM can support graph processing at the SQL level. Our work is motivated by the fact that there are many relations stored in RDBM that are closely related to a graph in real applications and need to be used together to query the graph, and RDBM is a system that can query and manage data while data may be updated over time. To support graph processing, in this work, we propose 4 new relational algebra operations, MM-join, MV-join, anti-join, and union-by-update. Here, MM-join and MV-join are join operations between two matrices and between a matrix and a vector, respectively, followed by aggregation computing over groups, given a matrix/vector can be represented by a relation. Both deal with the semiring by which many graph algorithms can be supported. The anti-join removes nodes/edges in a graph when they are unnecessary for the following computing. The union-by-update addresses value updates to compute PageRank, for example. The 4 new relational algebra operations can be defined by the 6 basic relational algebra operations with group-by & aggregation. We revisit SQL recursive queries and show that the 4 operations with others are ensured to have a fixpoint, following the techniques studied in DATALOG, and enhance the recursive WITH clause in SQL'99. We conduct extensive performance studies to test 10 graph algorithms using 9 large real graphs in 3 major RDBMs. We show that RDBMs are capable of dealing with graph processing in reasonable time. The focus of this work is at SQL level. There is high potential to improve the efficiency by main-memory RDBMs, efficient join processing in parallel, and new storage management.", "venue": "SIGMOD Conference", "year": 2017, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2017-05-09", "journal": {"name": "Proceedings of the 2017 ACM International Conference on Management of Data"}, "authors": [{"authorId": "8599669", "name": "Kangfei Zhao"}, {"authorId": "144666776", "name": "J. Yu"}], "citations": [{"paperId": "d178c42b4b4f1aec8a2e3a229ddcc64581fce1ba", "title": "SoK: The Faults in our Graph Benchmarks"}, {"paperId": "575ff25db7fb4aa91d44d0525ebe1b7c53d049da", "title": "Physical Database Design for Manufacturing Business Analytics"}, {"paperId": "37aa6ecd8a783b1c5de94d91a77b7742aa5aea23", "title": "Microarchitectural Analysis of Graph BI Queries on RDBMS"}, {"paperId": "965d8e36b89d4f61a608a2b16b43a6e38e5d9bc4", "title": "Complete Join Reordering for Null-Intolerant Joins"}, {"paperId": "0add05777481ec5bd743b63946a25955e06a995c", "title": "Extracting Graphs Properties with Semantic Joins"}, {"paperId": "fe47e6ab0ea1402198b3f2fc597a0f5b5db16c75", "title": "A bi-directional shortest path calculation speed up technique for RDBMS"}, {"paperId": "3a64f4551ad5297ff6d89e9464c9cccb72b464bb", "title": "Big Graphs: Challenges and Opportunities"}, {"paperId": "2669d32a4df699cd6e402bda424b8dccad1b3459", "title": "AAE: An Active Auto-Estimator for Improving Graph Storage"}, {"paperId": "510c2ebf9380e8ca4482ff81fe886d7203b1f452", "title": "Parallel Query Processing: To Separate Communication from Computation"}, {"paperId": "89942e02c8e6d838de4856a54708ea69206419e5", "title": "Adaptive update handling for graph HTAP"}, {"paperId": "1362dd2314e893e367f67b5d0d1df73b00a6f8c5", "title": "A cross-technology benchmark for incremental graph queries"}, {"paperId": "d2d1248446703603ad9355ef83e5892412e3efa5", "title": "Handling Iterations in Distributed Dataflow Systems"}, {"paperId": "1b74d25ebc02e5dd2d75224825981573ecfb7ca3", "title": "On Efficiently Equi-Joining Graphs"}, {"paperId": "5076689b8955e090173a8d37ecd80077c5db5092", "title": "SQL-G: Efficient Graph Analytics by SQL"}, {"paperId": "5984a0b6957b0e9ed8b030c3784f3ec367fbfd8c", "title": "SISA: Set-Centric Instruction Set Architecture for Graph Mining on Processing-in-Memory Systems"}, {"paperId": "18230127a20e46a13bccbdae6ce90f29f3a7c464", "title": "DBSpinner: Making a Case for Iterative Processing in Databases"}, {"paperId": "9784a15521e4565b1d3dc2653b9c9fd43c7bf8d5", "title": "Vertex-centric Parallel Computation of SQL Queries"}, {"paperId": "4690dce7202de83debaf3598949776483920bb64", "title": "SHARq: sharing recursive queries in relational databases"}, {"paperId": "e9ed552735493e9da3365ff3b77d48646e22e0e8", "title": "Towards Expectation-Maximization by SQL in RDBMS"}, {"paperId": "a20e707395132f750fa958ebc0ea629b23b57bfe", "title": "An overview of graph databases and their applications in the biomedical domain"}, {"paperId": "a800e01366848276ac4e482a846e24e971384256", "title": "Moving Recursion Out of the RDBMS for Transactional Graph Workloads"}, {"paperId": "5f37f55023545885991c3e25624b7368fc8a0433", "title": "IBM Db2 Graph: Supporting Synergistic and Retrofittable Graph Queries Inside IBM Db2"}, {"paperId": "da0cd62148c6bb761880fe3f50c117a7ae0a74e6", "title": "Taming the Expressiveness and Programmability of Graph Analytical Queries"}, {"paperId": "7ac11af376a2c108e62f37a2d357638b627811f2", "title": "RisGraph: A Real-Time Streaming System for Evolving Graphs to Support Sub-millisecond Per-update Analysis at Millions Ops/s"}, {"paperId": "aaba9e93a836c03546708fa088762482dc40862e", "title": "RisGraph: A Real-Time Streaming System for Evolving Graphs"}, {"paperId": "0fab5869fe9f31cfc16a13e259e6cde2bd7af26d", "title": "Enhancing recursive graph querying on RDBMS with data clustering approaches"}, {"paperId": "8876a2cfaf39db68ecc9551ff9d4163cc6e37998", "title": "Graph Compression Storage Based on Spatial Cluster Entity Optimization"}, {"paperId": "49dbff977454a2074ba37a85c073ac072cc06b45", "title": "Computing Complex Graph Properties with SQL Queries"}, {"paperId": "b067177b1e17287185eb3b82ccc3d7c646b3ec40", "title": "Which Category Is Better: Benchmarking Relational and Graph Database Management Systems"}, {"paperId": "689c7a86d973895a14feb984b8faa3d5581038ef", "title": "Demystifying Graph Databases: Analysis and Taxonomy of Data Organization, System Designs, and Graph Queries"}, {"paperId": "3ff76d1729d07287dd705e0039f9720f7228a599", "title": "LiveGraph"}, {"paperId": "b370feab7c120a24a23a8aca1a964c0031feeb7a", "title": "Optimal Representation for Web and Social Network Graphs Based on ${K}^{2}$ -Tree"}, {"paperId": "96001314fe8f4774fd564b3fefa5e0cdc5a24ab3", "title": "Big Data Analytics: Exploring Graphs with Optimized SQL Queries"}, {"paperId": "9fb0ba13c14082ccb46764583c68dc6cf0a4f467", "title": "SQLoop: High Performance Iterative Processing in Data Management"}, {"paperId": "8c5248b29d1172232f6502555f3ac7bede0954d1", "title": "A new Nested Graph Model for Data Integration"}, {"paperId": "c5269518351196e2d6a653b60fa7b024d329b95d", "title": "Fast and Efficient Update Handling for Graph H2TAP"}, {"paperId": "11794cd5ca0fee8b26a9c6ab5430a53cc37cd9cc", "title": "Parallel Traversal of Graphs Stored in RDBMSs"}, {"paperId": "8343bbe8184000cfda6c8cd490f83f50b04da989", "title": "Big Data Analytics and Knowledge Discovery: 22nd International Conference, DaWaK 2020, Bratislava, Slovakia, September 14\u201317, 2020, Proceedings"}, {"paperId": "684efc8c943b5c61fa7c0389c38f11dfd590c0d4", "title": "A Scalable Randomized Algorithm for Triangle Enumeration on Graphs Based on SQL Queries"}, {"paperId": "959f4a6ff6c2306b6589354395600526d6462945", "title": "Storing and Querying Social Graph Data on a Variety of Distributed Systems"}, {"paperId": "e5c17deddc0a69c5bd3f9d1eeb515946277f76a1", "title": "Graph Processing in RDBMSs"}, {"paperId": "febbe50d95e27e99c46a0d431dffd371203e57a4", "title": "This paper is included in the Proceedings of the 2023 USENIX Annual Technical Conference."}]}
