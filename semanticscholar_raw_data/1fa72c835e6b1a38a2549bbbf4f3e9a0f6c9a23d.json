{"paperId": "1fa72c835e6b1a38a2549bbbf4f3e9a0f6c9a23d", "publicationVenue": {"id": "0f1e902e-a969-4a5d-b316-f66ac2bb560c", "name": "International Workshop on Data Management on New Hardware", "type": "conference", "alternate_names": ["Int Workshop Data Manag New Hardw", "Data Manag New Hardw", "DaMoN", "Data Management on New Hardware"], "url": "http://www.wikicfp.com/cfp/program?id=640"}, "title": "The collection Virtual Machine: an abstraction for multi-frontend multi-backend data analysis", "abstract": "Getting the best performance from the ever-increasing number of hardware platforms has been a recurring challenge for data processing systems. In recent years, the advent of data science with its increasingly numerous and complex types of analytics has made this challenge even more difficult. In practice, system designers are overwhelmed by the number of combinations and typically implement a single analytics type on one platform, leading to repeated implementation effort---and a plethora of semi-compatible tools for data scientists. In this paper, we propose the \"Collection Virtual Machine\" (or CVM)---an extensible compiler framework designed to keep the specialization process of data analytics systems tractable. It can capture at the same time the essence of a large span of low-level, hardware-specific implementation techniques as well as high-level operations of different types of analyses. At its core lies a language for defining nested, collection-oriented intermediate representations (IRs). Frontends produce programs in their IR flavors defined in that language, which get optimized through a series of rewritings (possibly changing the IR flavor multiple times) until the program is finally expressed in an IR of platform-specific operators. While reducing the overall implementation effort, this also improves the interoperability of both analyses and hardware platforms. We have used CVM successfully to build specialized backends for platforms as diverse as multi-core CPUs, RDMA clusters, and serverless computing infrastructure in the cloud and expect similar results for many more frontends and hardware platforms in the near future.", "venue": "International Workshop on Data Management on New Hardware", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2020-04-04", "journal": {"name": "Proceedings of the 16th International Workshop on Data Management on New Hardware"}, "authors": [{"authorId": "2068635149", "name": "Ingo M\u00fcller"}, {"authorId": "3454947", "name": "Renato Marroqu\u00edn"}, {"authorId": "41174671", "name": "D. Koutsoukos"}, {"authorId": "2945173", "name": "Mike Wawrzoniak"}, {"authorId": "144641551", "name": "G. Alonso"}, {"authorId": "3460082", "name": "Sabir Akhadov"}], "citations": [{"paperId": "2309d03f92ebb31ea96299cd425436da19c86cda", "title": "Sidekick compilation with xDSL"}, {"paperId": "0985e38dc2ac36eb26c5c0c195b5d5725a5583dc", "title": "Declarative Sub-Operators for Universal Data Processing"}, {"paperId": "41bc129af613d532053cd834bb394dcf4a2d8743", "title": "Excalibur: A Virtual Machine for Adaptive Fine-grained JIT-Compiled Query Execution based on VOILA"}, {"paperId": "0ea84b110dbe166ebc52a06a4c905b362a366958", "title": "Designing an Open Framework for Query Optimization and Compilation"}, {"paperId": "ce4cfbf8788697043df18506715a67cd4cf984f4", "title": "Low-latency query compilation"}, {"paperId": "c9e6c348af17abce7472c552107efc2ca24c5704", "title": "Database Technology for the Masses: Sub-Operators as First-Class Entities"}, {"paperId": "5c573e77829a606008bcb2bd0737b93cef3a5a5b", "title": "Modularis: Modular Data Analytics for Hardware, Software, and Platform Heterogeneity"}, {"paperId": "8c00fbb1fe4bafc6804ee2d4b365b322c65ab132", "title": "Lambada: Interactive Data Analytics on Cold Data Using Serverless Cloud Infrastructure"}, {"paperId": "3c3f8344e58ff7a8ea9c924e428bda5b8c775df6", "title": "DAPHNE: An Open and Extensible System Infrastructure for Integrated Data Analysis Pipelines"}]}
