{"paperId": "48d6af19e4decc315843e9fe62ff8655a31d6281", "publicationVenue": {"id": "4f9c2bb7-ec38-45aa-b0b3-8bd7680ccc1f", "name": "SIGMOD record", "type": "journal", "alternate_names": ["SIGMOD rec", "Sigmod Record", "Sigmod Rec"], "issn": "0163-5808", "url": "http://portal.acm.org/browse_dl.cfm?CFID=85291668&CFTOKEN=27828468&coll=ACM&dl=ACM&idx=J689&linked=1&part=newsletter", "alternate_urls": ["http://portal.acm.org/sigmod/newsletter"]}, "title": "Future Database Engine Development: You Will Only Need One Programming Language", "abstract": "Database systems must make good use of the hardware for high performance. This is usually done by implementing their core components (storage engine, optimizer and query execution engine) in a low-level programming language (PL) such as C/C++ that can directly \"talk to the hardware.\" But these PLs traditionally lacked high-level abstractions, lowering DBMS developer productivity. Some systems [18, 16, 10] then mix different PLs to balance productivity and performance. For example, Presto [16] and Spark [18] originally used Java but are now replacing their query engines with new ones [12, 1] built in C++ for higher performance. However, doing so brings such non-trivial challenges as interacting with different PL runtimes [1].", "venue": "SIGMOD record", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-01-19", "journal": {"name": "SIGMOD Rec.", "pages": "39-40", "volume": "52"}, "authors": [{"authorId": "48469973", "name": "Tianzheng Wang"}], "citations": []}
