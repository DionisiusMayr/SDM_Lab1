{"paperId": "f7edeb7751c598725b8efc40715d2ea2be4f9cda", "publicationVenue": null, "title": "Towards Predicting the Impact of Software Changes on Building Activities", "abstract": "The pervasive adoption of Continuous Integration practices \u2013 both in industry and open source projects \u2013 has led software building to become a daily activity for thousands of developers around the world. Companies such as Microsoft have invested in in-house infrastructures with the goal of optimizing the build process. CloudBuild, a distributed and caching build service developed internally by Microsoft, runs the build process in parallel in the cloud and relies on caching to accelerate builds. This allows for agile development and rapid delivery of software even several times a day. However, moving towards faster builds requires not only improvements on the infrastructure side, but also attention to developers' changes in the software. Surely, architectural decisions and software changes, such as addition of dependencies, can lead to significant build time increase. Yet, estimating the impact of such changes on build time can be challenging when dealing with complex, distributed, and cached build systems. In this paper, we envision a predictive model able to preemptively alert developers on the extent to which their software changes may impact future building activities. In particular, we describe an approach that analyzes the developer's change and predicts (i) whether it impacts (any of) the Longest Critical Path; (ii) may lead to build time increase and its delta; and (iii) the percentage of future builds that might be affected by such change.", "venue": "2019 IEEE/ACM 41st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2019-01-22", "journal": {"name": "2019 IEEE/ACM 41st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)", "pages": "49-52"}, "authors": [{"authorId": "40626221", "name": "Michele Tufano"}, {"authorId": "1906848", "name": "Hitesh Sajnani"}, {"authorId": "39496137", "name": "Kim Herzig"}], "citations": [{"paperId": "9e88a6e3f1068fd4c265966167919d5de70feb55", "title": "HybridCISave: A Combined Build and Test Selection Approach in Continuous Integration"}, {"paperId": "80b3c885415573cbdb33cd7ebd275db46ec3ea45", "title": "Accelerating Continuous Integration by Caching Environments and Inferring Dependencies"}, {"paperId": "1b26b74ff0ef0d93f3296aee522507aaf2996d19", "title": "An incremental software architecture recovery technique driven by code changes"}, {"paperId": "197d83b1a11088a00d3bace219b80df234bbd749", "title": "Which builds are really safe to skip? Maximizing failure observation for build selection in continuous integration"}, {"paperId": "1fd17127fa6488ccd2d4e39dca8e566a82dc93c7", "title": "Reducing cost in continuous integration with a collection of build selection approaches"}, {"paperId": "08be4f093a6d90d9e0281d9ffdb7c38be5644d79", "title": "Characterizing and Mitigating Self-Admitted Technical Debt in Build Systems"}, {"paperId": "e6c8e50fc573b7e2e09da29cc269d97239f1650f", "title": "What Helped, and what did not? An Evaluation of the Strategies to Improve Continuous Integration"}, {"paperId": "862a0bfe6593ec157e3ad7dfd0baee2b2a707b46", "title": "BUILDFAST: History-Aware Build Outcome Prediction for Fast Feedback and Reduced Cost in Continuous Integration"}, {"paperId": "7485ebfd250c34f30be63c03026fe6186db8f07e", "title": "A Cost-efficient Approach to Building in Continuous Integration"}, {"paperId": "11c156639a8282f045c94b591eb44a495b39ea3f", "title": "Improving the Robustness and Efficiency of Continuous Integration and Deployment"}, {"paperId": "71f4bc9ce6d821740864320947bb844b6cf7e37d", "title": "Characterizing and Mitigating Self-Admitted Build Debt"}, {"paperId": "9a435ebe4535d588ddb4ab492232f5cf835b7d15", "title": "Learning Code Transformations via Neural Machine Translation"}]}
