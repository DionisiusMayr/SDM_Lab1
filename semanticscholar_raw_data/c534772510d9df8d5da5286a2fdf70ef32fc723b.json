{"paperId": "c534772510d9df8d5da5286a2fdf70ef32fc723b", "publicationVenue": {"id": "d7907408-25bc-4816-a81d-4e0f2f6482c8", "name": "IEEE Working Conference on Mining Software Repositories", "type": "conference", "alternate_names": ["IEEE Work Conf Min Softw Repos", "Min Softw Repos", "Mining Software Repositories", "MSR"], "url": "https://dl.acm.org/conference/icse/proceedings"}, "title": "RTPTorrent: An Open-source Dataset for Evaluating Regression Test Prioritization", "abstract": "The software engineering practice of automated testing helps programmers find defects earlier during development. With growing software projects and longer-running test suites, frequency and immediacy of feedback decline, thereby making defects harder to repair. Regression test prioritization (RTP) is concerned with running relevant tests earlier to lower the costs of defect localization and to improve feedback. Finding representative data to evaluate RTP techniques is non-trivial, as most software is published without failing tests. In this work, we systematically survey a wide range of RTP literature regarding whether their dataset uses real or synthetic defects or tests, whether they are publicly available, and whether datasets are reused. We observed that some datasets are reused, however, many projects study only few projects and these rarely resemble real-world development activity. In light of these threats to ecological validity, we describe the construction and characteristics of a new dataset, named RTPTorrent, based on 20 open-source Java programs. Our dataset allows researchers to evaluate prioritization heuristics based on version control meta-data, source code, and test results from fine-grained, automated builds over 9 years of development history. We provide reproducible baselines for initial comparisons and make all data publicly available. We see this as a step towards better reproducibility, ecological validity, and long-term availability of studied software in the field of test prioritization.", "venue": "IEEE Working Conference on Mining Software Repositories", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference", "Review"], "publicationDate": "2020-05-01", "journal": {"name": "2020 IEEE/ACM 17th International Conference on Mining Software Repositories (MSR)", "pages": "385-396"}, "authors": [{"authorId": "3251359", "name": "Toni Mattis"}, {"authorId": "35178070", "name": "Patrick Rein"}, {"authorId": "1396198176", "name": "Falco D\u00fcrsch"}, {"authorId": "1741504", "name": "R. Hirschfeld"}], "citations": [{"paperId": "d35108ed020314b970009f08e0a41f043ec0f4c3", "title": "Regression test prioritization leveraging source code similarity with tree kernels"}, {"paperId": "31b54e79b4af4b681ab88b5bf01a91d9ed0fd83a", "title": "Test Case Prioritization using Transfer Learning in Continuous Integration Environments"}, {"paperId": "517a4c10716f5f329e33abed7407b40ca67a8917", "title": "PTMTorrent: A Dataset for Mining Open-source Pre-trained Model Packages"}, {"paperId": "fc3e64291d819f0b51f30a043d9385dc5f92bd59", "title": "ReCover: a Curated Dataset for Regression Testing Research"}, {"paperId": "095b84292ca2c4180386104b0efe870da9068b99", "title": "The Impact of Flaky Tests on Historical Test Prioritization on Chrome"}, {"paperId": "b29ef8ed3ff8c14ec5dec9a1d70a8de1eb5e170a", "title": "Probe-based Syscall Tracing for Efficient and Practical File-level Test Traces"}, {"paperId": "9e560e55c0d91a19581d038dfdb285f9d1047e05", "title": "Scalable and Accurate Test Case Prioritization in Continuous Integration Contexts"}, {"paperId": "91119319745c15d1d628b6dcb87251f981014c36", "title": "Continuous test suite failure prediction"}, {"paperId": "bdab29415be76e68d3c98defb72fc882d9daaf42", "title": "Empirically evaluating readily available information for regression test optimization in continuous integration"}, {"paperId": "68598f59698ededb65d997803db708b7ec7cb853", "title": "Empirically revisiting and enhancing IR-based test-case prioritization"}, {"paperId": "83dde56ccba53a669fec00f13cf11d378ab9cd32", "title": "Learning from Failure: A History-based, Lightweight Test Prioritization Technique Connecting Software Changes to Test Failures"}, {"paperId": "0c5a9c9949d60fb63102dcf43d16d30dcc4fbe2c", "title": "A Theoretical Analysis of Random Regression Test Prioritization"}]}
