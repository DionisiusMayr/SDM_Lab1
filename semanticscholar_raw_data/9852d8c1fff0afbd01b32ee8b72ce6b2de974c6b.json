{"paperId": "9852d8c1fff0afbd01b32ee8b72ce6b2de974c6b", "publicationVenue": {"id": "27b93d96-c4b9-4a23-a3a0-061ad54deebc", "name": "IEEE International Symposium on High-Performance Parallel Distributed Computing", "type": "conference", "alternate_names": ["HPDC", "IEEE Int Symp High-performance Parallel Distrib Comput"], "url": "http://www.hpdc.org/"}, "title": "XBFS: eXploring Runtime Optimizations for Breadth-First Search on GPUs", "abstract": "Attracted by the enormous potentials of Graphics Processing Units (GPUs), an array of efforts has surged to deploy Breadth-First Search (BFS) on GPUs, which, however, often exploits the static mechanisms to address the challenges that are dynamic in nature. Such a mismatch prevents us from achieving the optimal performance for offloading graph traversal on GPUs. To this end, we propose XBFS that leverages the runtime optimizations atop GPUs to cope with the nondeterministic characteristics of BFS with the following three techniques: First, XBFS adaptively exploits four either new or optimized frontier queue generation designs to accommodate various BFS levels that present dissimilar features. Second, inspired by the observation that the workload associated with each vertex is not proportional to its degree in bottom-up, we design three new strategies to better balance the workload. Third, XBFS introduces the first truly asynchronous bottom-up traversal which allows BFS to visit vertices for multiple levels at a single iteration with both theoretical soundness and practical benefits. Taken together, XBFS is, on average, 3.5\u00d7, 4.9\u00d7, 11.2\u00d7 and 6.1\u00d7 faster than the state-of-the-art Enterprise, Tigr, Gunrock on a Quadro P6000 GPU and Ligra on a 24-core Intel Xeon Platinum 8175M CPU. Note, the CPU used for Ligra is more expensive than the GPU for XBFS.", "venue": "IEEE International Symposium on High-Performance Parallel Distributed Computing", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2019-06-17", "journal": {"name": "Proceedings of the 28th International Symposium on High-Performance Parallel and Distributed Computing"}, "authors": [{"authorId": "66024826", "name": "Anil Gaihre"}, {"authorId": "2146269210", "name": "Zhenlin Wu"}, {"authorId": "145842945", "name": "Fan Yao"}, {"authorId": "2118959610", "name": "Hang Liu"}], "citations": [{"paperId": "299c35bcea33874c8fa166fb1b37d34e2f2db03b", "title": "Fused Breadth-First Probabilistic Traversals on Distributed GPU Systems"}, {"paperId": "c1928f42ad6293562df6078b83adef1e78bd224e", "title": "Tango: Rethinking Quantization for Graph Neural Network Training on GPUs"}, {"paperId": "1fc8c56721f18c9c0264c08c3d5a3a4c249a379b", "title": "A Decentralized Frontier Queue for Improving Scalability of Breadth-First-Search on GPUs"}, {"paperId": "0bb489605b4fa105ca2ae0c0774c85d353777dbc", "title": "WAVE: designing a heuristics-based three-way breadth-first search on GPUs"}, {"paperId": "1a2a685d6c4b22dc4063feeecb4504f72b019e01", "title": "Parallelizing Neural Network Models Effectively on GPU by Implementing Reductions Atomically"}, {"paperId": "3b9e59e91d99a49122124b25d58e8a1a887e448b", "title": "HyTGraph: GPU-Accelerated Graph Processing with Hybrid Transfer Management"}, {"paperId": "412b91005cb4bf89989385f13ce7a770c84b5faa", "title": "SURF: Direction-Optimizing Breadth-First Search Using Workload State on GPUs"}, {"paperId": "c8ae9b653bbb58b474735032128b113a24cf37f1", "title": "Bring orders into uncertainty: enabling efficient uncertain graph processing via novel path sampling on multi-accelerator systems"}, {"paperId": "63b809349666fa571782b08364b68acbb1df0c2d", "title": "GraphIt to CUDA Compiler in 2021 LOC: A Case for High-Performance DSL Implementation via Staging with BuilDSL"}, {"paperId": "54a7323ecf5395774727ff6c339294061deed1ca", "title": "Improved Breadth First Search For Public Transit Line Search Optimization"}, {"paperId": "3a932b5e5271221931338d7f4541c13c00be2fcb", "title": "Sistem Pakar Diagnosa Penyakit Kulit Kucing Menggunakan Metode Naive Bayes Berbasis Web"}, {"paperId": "4a94a1ee39d42dbf4e224a5c10abd7fd69472023", "title": "iPUG for Multiple Graphcore IPUs: Optimizing Performance and Scalability of Parallel Breadth-First Search"}, {"paperId": "9b2331fb2e48a930a1ce084e6141a8a270df642d", "title": "Strategies for Practical Hybrid Attack Graph Generation and Analysis"}, {"paperId": "d68beb54431476edf2fa90f621887baa31591826", "title": "Dr. Top-k: Delegate-Centric Top-k on GPUs"}, {"paperId": "89d8d55519d5680ec7ccbb4c515adfbff1d87fb7", "title": "TianheGraph: Customizing Graph Search for Graph500 on Tianhe Supercomputer"}, {"paperId": "5d647f9147dd0412cc45a36e40f8562e46988c24", "title": "Taming the Zoo: The Unified GraphIt Compiler Framework for Novel Architectures"}, {"paperId": "3308eeac303fd042f8d7659d9c43faa35173c39b", "title": "Seastar: vertex-centric programming for graph neural networks"}, {"paperId": "a92ac38658b3a7f75e1836b9d9b6c41b21c40d79", "title": "Compiling Graph Applications for GPU s with GraphIt"}, {"paperId": "76031ea3119e840798d4aef5cfe3c55814077698", "title": "Compliation Techniques for Graphs Algorithms on GPUs"}, {"paperId": "974a06b07fc2d51b14a37d1fca5cb16ee1fef306", "title": "Compilation Techniques for Graph Algorithms on GPUs"}, {"paperId": "5496654b0e517cc0a3c37786011d651c86425e45", "title": "C-SAW: A Framework for Graph Sampling and Random Walk on GPUs"}, {"paperId": "7de453008a7fdd426ee8e1f50424f7bf784d6811", "title": "gIM: GPU Accelerated RIS-Based Influence Maximization Algorithm"}, {"paperId": "a2976770da75e2144ae02e737e8211cc05255ec9", "title": "NextDoor: GPU-Based Graph Sampling for Graph Machine Learning"}, {"paperId": "83ec006818369311f047f657bce22befafd0aea6", "title": "Accelerating Overlapping Community Detection: Performance Tuning a Stochastic Gradient Markov Chain Monte Carlo Algorithm"}, {"paperId": "8cb35bbf013802218d1c3554051ac5425d91868a", "title": "Exploring FPGA Optimizations in OpenCL for Breadth-First Search on Sparse Graph Datasets"}, {"paperId": "b73288113f61193b4735a2d9d3b06c9635922039", "title": "ezLDA: Efficient and Scalable LDA on GPUs"}, {"paperId": "161bb83022abe092a58288215e20894ed86f6af4", "title": "gSoFa: Scalable Sparse Symbolic LU Factorization on GPUs"}, {"paperId": "a3cceee92bb9daaa94ccc4d762c476c315a72155", "title": "GSoFa: Scalable Sparse LU Symbolic Factorization on GPUs"}, {"paperId": "6510ef26ad1da6c9c8863a8dc0428d122bb17c81", "title": "Parallelizing pruned landmark labeling: dealing with dependencies in graph algorithms"}, {"paperId": "465a768ffbf42834d07168e40bf6f657ed7e3e0d", "title": "EMOGI: Efficient Memory-access for Out-of-memory Graph-traversal In GPUs"}, {"paperId": "8691eeb5bb957050c69bd698b96e050bbe78aaba", "title": "Subway: minimizing data transfer during out-of-GPU-memory graph processing"}, {"paperId": "81c103559f508ea2896a14f308a67be90b91706b", "title": "H-INDEX: Hash-Indexing for Parallel Triangle Counting on GPUs"}, {"paperId": "547fac007071c2a76428327e14643ee06692784e", "title": "Memory-Efficient Object-Oriented Programming on GPUs"}, {"paperId": "61946177ea5d44ad18ff09de7929556d7b34cd8b", "title": "SIMD-X: Programming and Processing of Graph Algorithms on GPUs"}]}
