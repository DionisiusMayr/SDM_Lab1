{"paperId": "862a0bfe6593ec157e3ad7dfd0baee2b2a707b46", "publicationVenue": {"id": "1c2ab05c-7d69-465e-929d-0920857aedce", "name": "International Conference on Automated Software Engineering", "type": "conference", "alternate_names": ["Autom Softw Eng", "ASE", "Automated Software Engineering", "Int Conf Autom Softw Eng"], "url": "http://ase.informatik.uni-essen.de/"}, "title": "BUILDFAST: History-Aware Build Outcome Prediction for Fast Feedback and Reduced Cost in Continuous Integration", "abstract": "Long build times in continuous integration (CI) can greatly increase the cost in human and computing resources, and thus become a common barrier faced by software organizations adopting CI. Build outcome prediction has been proposed as one of the remedies to reduce such cost. However, the state-of-the-art approaches have a poor prediction performance for failed builds, and are not designed for practical usage scenarios. To address the problems, we first conduct an empirical study on 2,590,917 builds to characterize build times in realworld projects, and a survey with 75 developers to understand their perceptions about build outcome prediction. Then, motivated by our study and survey results, we propose a new history-aware approach, named BUILDFAST, to predict CI build outcomes cost-efficiently and practically. We develop multiple failure-specific features from closely related historical builds via analyzing build logs and changed files, and propose an adaptive prediction model to switch between two models based on the build outcome of the previous build. We investigate a practical online usage scenario of BUILDFAST, where builds are predicted in chronological order, and measure the benefit from correct predictions and the cost from incorrect predictions. Our experiments on 20 projects have shown that BUILDFAST improved the state-of-the-art by 47.5% in F1-score for failed builds.", "venue": "International Conference on Automated Software Engineering", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference", "Review"], "publicationDate": "2020-09-01", "journal": {"name": "2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "42-53"}, "authors": [{"authorId": "144943089", "name": "Bihuan Chen"}, {"authorId": "2109073875", "name": "Linlin Chen"}, {"authorId": "2111575377", "name": "Chen Zhang"}, {"authorId": "143621878", "name": "Xin Peng"}], "citations": [{"paperId": "636cb1d19992772265309a2b2c853272eca317e9", "title": "Resource Usage and Optimization Opportunities in Workflows of GitHub Actions"}, {"paperId": "5b0cca06fef3c96b6aa5e733a1fcab36d5f3da61", "title": "The Why, When, What, and How About Predictive Continuous Integration: A Simulation-Based Investigation"}, {"paperId": "7962a37e73e2221e4b23a94e097b0c2e3bd35ba9", "title": "What Factors Affect the Build Failures Correction Time? A Multi-Project Study"}, {"paperId": "b79c577ea0b3f1b3477e3268a19b06a50e9782d1", "title": "Accelerating Continuous Integration with Parallel Batch Testing"}, {"paperId": "3f06dcb2a0a153658dd894adfa8f1a2c5b598012", "title": "Systematic Literature Review on Application of Machine Learning in Continuous Integration"}, {"paperId": "ddafe1cbbb91279c2c676b092cf7c5ef389467f7", "title": "Continuous Intrusion: Characterizing the Security of Continuous Integration Services"}, {"paperId": "9e88a6e3f1068fd4c265966167919d5de70feb55", "title": "HybridCISave: A Combined Build and Test Selection Approach in Continuous Integration"}, {"paperId": "7dc523e19d75b6b37230f7d53a9d0f1fce3ad293", "title": "Semi-supervised pre-processing for learning-based traceability framework on real-world software projects"}, {"paperId": "81a60c0f786279461265f3198e0d64aa7ea26124", "title": "Understanding and Predicting Docker Build Duration: An Empirical Study of Containerized Workflow of OSS Projects"}, {"paperId": "dea3cac9612d5681f0b30579b6df9532ee1548e6", "title": "BuildSonic: Detecting and Repairing Performance-Related Configuration Smells for Continuous Integration Builds"}, {"paperId": "1fd17127fa6488ccd2d4e39dca8e566a82dc93c7", "title": "Reducing cost in continuous integration with a collection of build selection approaches"}, {"paperId": "91119319745c15d1d628b6dcb87251f981014c36", "title": "Continuous test suite failure prediction"}, {"paperId": "37a4a52997e6860f8f0b56fd4b2568dc70af067b", "title": "DockerMock: Pre-Build Detection of Dockerfile Faults through Mocking Instruction Execution"}, {"paperId": "e6c8e50fc573b7e2e09da29cc269d97239f1650f", "title": "What Helped, and what did not? An Evaluation of the Strategies to Improve Continuous Integration"}, {"paperId": "649f094c2d638d0b4d8e3b100bb25a4e14c58ed4", "title": "Predictive Models in Software Engineering: Challenges and Opportunities"}, {"paperId": "af26d25072a9b4364d0769d83124c27c53c879e2", "title": "A Report on A Discrete-Event Simulation Model of Predictive Continuous Integration Process"}]}
