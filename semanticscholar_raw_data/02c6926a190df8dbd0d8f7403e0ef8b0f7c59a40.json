{"paperId": "02c6926a190df8dbd0d8f7403e0ef8b0f7c59a40", "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f", "name": "IEEE Transactions on Network and Service Management", "type": "journal", "alternate_names": ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url": "http://ejournals.ebsco.com/direct.asp?JournalID=714200", "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028", "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]}, "title": "Diktyo: Network-Aware Scheduling in Container-Based Clouds", "abstract": "Containers have revolutionized application deployment and life-cycle management in current cloud platforms. Applications have evolved from single monoliths to complex graphs of loosely-coupled microservices. However, the efficient allocation of microservice-based applications is challenging due to their complex inter-dependencies. Further, recent applications are becoming even more delay-sensitive, demanding lower latency between dependent microservices. Scheduling policies in popular container orchestration platforms mainly aim to increase the resource efficiency of the infrastructure, insufficient for latency-sensitive applications. Application domains such as the Internet of Things and multi-tier Web services would benefit from network-aware policies that consider network latency and bandwidth in the scheduling process. Previous works have studied network-aware scheduling via theoretical formulations or heuristic-based methods evaluated via simulations or small testbeds, making their full applicability in popular platforms difficult. This paper proposes a novel network-aware framework for the popular Kubernetes (K8s) platform named Diktyo that determines the placement of dependent microservices in long-running applications focused on reducing the application\u2019s end-to-end latency and guaranteeing bandwidth reservations. Simulations show that Diktyo can significantly reduce the network latency for various applications across different infrastructure topologies compared to default K8s scheduling plugins. Also, experiments in a K8s cluster with microservice benchmark applications show that Diktyo can increase database throughput by 22% and reduce application response time by 45%.", "venue": "IEEE Transactions on Network and Service Management", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-12-01", "journal": {"name": "IEEE Transactions on Network and Service Management", "pages": "4461-4477", "volume": "20"}, "authors": [{"authorId": "2115681922", "name": "Jos\u00e9 Santos"}, {"authorId": "2157434199", "name": "Chen Wang"}, {"authorId": "145115855", "name": "T. Wauters"}, {"authorId": "2065702132", "name": "F. de Turck"}], "citations": [{"paperId": "b92ced3b4ddaf747f5eb44c614840e100db8f819", "title": "INTaaS: Provisioning In-band Network Telemetry as a service via online learning"}, {"paperId": "36582b3d1f371cd61438e481da397d575f13c87e", "title": "Secure and Scalable Policy Management in Cloud Native Networking"}, {"paperId": "4e1d3ea4fec2db6da95519644f702f7cabaadb6c", "title": "Performance Impact of Queue Sorting in Container-Based Application Scheduling"}, {"paperId": "cef60fa8d2b8f853c9af71c6032b8afec9c769c4", "title": "Reinforcement learning-based multi-objective energy-efficient task scheduling in fog-cloud industrial IoT-based systems"}, {"paperId": "d881a45474c9c712c29696f8b3d6e779da5081e2", "title": "Efficient Management in Fog Computing"}]}
