{"paperId": "d711fe466c7c7f0fba39a858017f10a73af13641", "publicationVenue": {"id": "1620da87-4387-4b9a-9bf4-22fdf74d4dc3", "name": "Symmetry", "type": "journal", "issn": "2073-8994", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-172134", "alternate_urls": ["https://www.mdpi.com/journal/symmetry", "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-172134"]}, "title": "Cache-Based Matrix Technology for Efficient Write and Recovery in Erasure Coding Distributed File Systems", "abstract": "With the development of various information and communication technologies, the amount of big data has increased, and distributed file systems have emerged to store them stably. The replication technique divides the original data into blocks and writes them on multiple servers for redundancy and fault tolerance. However, there is a symmetrical space efficiency problem that arises from the need to store blocks larger than the original data. When storing data, the Erasure Coding (EC) technique generates parity blocks through encoding calculations and writes them separately on each server for fault tolerance and data recovery purposes. Even if a specific server fails, original data can still be recovered through decoding calculations using the parity blocks stored on the remaining servers. However, matrices generated during encoding and decoding are redundantly generated during data writing and recovery, which leads to unnecessary overhead in distributed file systems. This paper proposes a cache-based matrix technique that uploads the matrices generated during encoding and decoding to cache memory and reuses them, rather than generating new matrices each time encoding or decoding occurs. The design of the cache memory applies the Weighting Size and Cost Replacement Policy (WSCRP) algorithm to efficiently upload and reuse matrices to cache memory using parameters known as weights and costs. Furthermore, the cache memory table can be managed efficiently because the weight\u2013cost model sorts and updates matrices using specific parameters, which reduces replacement cost. The experiment utilized the Hadoop Distributed File System (HDFS) as the distributed file system, and the EC volume was composed of Reed\u2013Solomon code with parameters (6, 3). As a result of the experiment, it was possible to reduce the write, read, and recovery times associated with encoding and decoding. In particular, for up to three node failures, systems using WSCRP were able to reduce recovery time by about 30 s compared to regular HDFS systems.", "venue": "Symmetry", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-04-06", "journal": {"name": "Symmetry", "pages": "872", "volume": "15"}, "authors": [{"authorId": "49735832", "name": "Dong-Jin Shin"}, {"authorId": "2161012649", "name": "Jeong-Joon Kim"}], "citations": [{"paperId": "55ce1f5d1753bc2f70bda81c2b032419e93e6373", "title": "Newton-like Polynomial-Coded Distributed Computing for Numerical Stability"}]}
