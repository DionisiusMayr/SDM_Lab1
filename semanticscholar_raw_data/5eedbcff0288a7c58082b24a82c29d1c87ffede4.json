{"paperId": "5eedbcff0288a7c58082b24a82c29d1c87ffede4", "publicationVenue": {"id": "d2e111a6-dd60-474c-ae8a-2b5773cca07d", "name": "International Conference on Parallel and Distributed Systems", "type": "conference", "alternate_names": ["Int Conf Parallel Distrib Syst", "ICPADS"], "url": "http://www.wikicfp.com/cfp/program?id=1443"}, "title": "Optimal Use Of The TCP/IP Stack in User-space Storage Applications with ADQ feature in NIC", "abstract": "For storage applications based on TCP/IP, performance of the TCP/IP stack is often the dominant driver of the application's overall performance. In this paper, we introduce Tbooster, which is a library designed for TCP/IP based storage applications that optimally leverages the Linux kernel's TCP/IP stack and the socket interface to improve performance. This library allows for efficient grouping of connections onto threads and asynchronous, poll-mode operation, scaling to a massive number of TCP connections on each thread. Tbooster is designed to avoid making expensive system calls by batching and merging operations into a single operation per connection for each poll loop. Further, Tbooster leverages the Application Device Queues (ADQ) feature available in some Network Interface Cards to steer incoming data to the correct NIC receive queue. This avoids expensive coordination and message passing within the kernel when handling incoming data and especially improves outlier tail latencies of requests. Compared with a more standard usage of the Linux kernel TCP/IP stack, Tbooster improves storage I/O per second significantly (e.g., 9% to 22.7% IOPS improvement for an iSCSI target at 4KiB I/O size, 36.3% to 59.4% IOPS improvement for NVMe-oF TCP target on 8KiB I/O size). Moreover, when using the ADQ feature from Intel's 100GbE NIC, it demonstrates 30% average time reduction of 99.99% long tail latency under heavy workloads for NVMe-oF TCP.", "venue": "International Conference on Parallel and Distributed Systems", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-12-01", "journal": {"name": "2020 IEEE 26th International Conference on Parallel and Distributed Systems (ICPADS)", "pages": "363-371"}, "authors": [{"authorId": "2048012554", "name": "Ziye Yang"}, {"authorId": "2151450477", "name": "Benjamin Walker"}, {"authorId": "2116164367", "name": "James R. Harris"}, {"authorId": "2135356535", "name": "Yadong Li"}, {"authorId": "2065460733", "name": "Gang Cao"}], "citations": [{"paperId": "89cbf4e82e0ddea3799deec5f2e03d3027e337fa", "title": "ShRing: Networking with Shared Receive Rings"}, {"paperId": "e620443c3ade8b3fd95c7934c9e5c63b8492e0c8", "title": "This paper is included in the Proceedings of the 17th USENIX Symposium on Operating Systems Design and Implementation"}]}
