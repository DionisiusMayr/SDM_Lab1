{"paperId": "2ac50dd12f47b48a9f1109e8f82f55cc66548e5e", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "Lero: A Learning-to-Rank Query Optimizer", "abstract": "\n A recent line of works apply machine learning techniques to assist or rebuild cost-based query optimizers in DBMS. While exhibiting superiority in some benchmarks, their deficiencies, e.g., unstable performance, high training cost, and slow model updating, stem from the inherent hardness of predicting the cost or latency of execution plans using machine learning models. In this paper, we introduce a\n learning-to-rank\n query optimizer, called Lero, which builds on top of a native query optimizer and continuously learns to improve the optimization performance. The key observation is that the relative order or\n rank\n of plans, rather than the exact cost or latency, is sufficient for query optimization. Lero employs a\n pairwise\n approach to train a classifier to compare any two plans and tell which one is better. Such a binary classification task is much easier than the regression task to predict the cost or latency, in terms of model efficiency and accuracy. Rather than building a learned optimizer from scratch, Lero is designed to leverage decades of wisdom of databases and improve the native query optimizer. With its non-intrusive design, Lero can be implemented on top of any existing DBMS with minimal integration efforts. We implement Lero and demonstrate its outstanding performance using PostgreSQL. In our experiments, Lero achieves near optimal performance on several benchmarks. It reduces the plan execution time of the native optimizer in PostgreSQL by up to 70% and other learned query optimizers by up to 37%. Meanwhile, Lero continuously learns and automatically adapts to query workloads and changes in data.\n", "venue": "Proceedings of the VLDB Endowment", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-02-01", "journal": {"name": "ArXiv", "volume": "abs/2302.06873"}, "authors": [{"authorId": "2150059510", "name": "Rong Zhu"}, {"authorId": "2154941630", "name": "Wei Chen"}, {"authorId": "1696332", "name": "Bolin Ding"}, {"authorId": "2205843527", "name": "Xingguang Chen"}, {"authorId": "1769930", "name": "A. Pfadler"}, {"authorId": "2109685286", "name": "Ziniu Wu"}, {"authorId": "1709595", "name": "Jingren Zhou"}], "citations": [{"paperId": "3ac78990ece16ac5cfe1a4553af9a855a8019e43", "title": "Roq: Robust Query Optimization Based on a Risk-aware Learned Cost Model"}, {"paperId": "32ba448e90bca6c22c8b90082869d89b7417767b", "title": "Optimizing Dataflow Systems for Scalable Interactive Visualization"}, {"paperId": "1da97ff5cc28f668fc6e3e51a190d092162fd3df", "title": "Robust Listwise Learning-to-Rank Approach for Database Query Optimizer"}, {"paperId": "91fcc641d6a24c06d2c6657f9a8ec6e506d3ef86", "title": "FOSS: A Self-Learned Doctor for Query Optimizer"}, {"paperId": "35d6d369982e6e4fdc1bb65a8d15c9151586f9e2", "title": "Lemo: A Cache-Enhanced Learned Optimizer for Concurrent Queries"}, {"paperId": "8e0175e00163e80aea89daf12474cbe68643fb99", "title": "Rethinking Learned Cost Models: Why Start from Scratch?"}, {"paperId": "b76e903b9f1a9c7c51962a79eda10885efda1d35", "title": "Sample-Efficient Cardinality Estimation Using Geometric Deep Learning"}, {"paperId": "e967d2838588d8a97a0872f58a8473f77b5f38ea", "title": "Is Your Learned Query Optimizer Behaving As You Expect? A Machine Learning Perspective"}, {"paperId": "a58b0c49cf4ca76380ca7b0eb13ea569bf8c169d", "title": "Join Order Selection with Deep Reinforcement Learning: Fundamentals, Techniques, and Challenges"}, {"paperId": "10d32c2414398798f171d07d9e6ea954bef238e1", "title": "Re-rank Search Engine Results via Machine Learning"}, {"paperId": "f497094c7763eb86275ea4798859d9795f1398dc", "title": "Learned Query Superoptimization"}, {"paperId": "a397840de4303ca3346466632466892a6a69829a", "title": "PilotScope: Steering Databases with Machine Learning Drivers"}, {"paperId": "b062366d9bcf3284c2a38be0b95765b1aac683bf", "title": "Eraser: Eliminating Performance Regression on Learned Query Optimizer"}, {"paperId": "4d6c31599cefddf90133b1907aa7d42ed8de04ff", "title": "Learned Query Superoptimization (Extended Abstract)"}]}
