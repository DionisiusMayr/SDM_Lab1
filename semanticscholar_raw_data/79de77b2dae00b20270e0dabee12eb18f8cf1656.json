{"paperId": "79de77b2dae00b20270e0dabee12eb18f8cf1656", "publicationVenue": {"id": "1a5858d9-edfe-4a1b-ae39-60020748678f", "name": "ACM Transactions on Architecture and Code Optimization (TACO)", "type": "journal", "alternate_names": ["ACM Transactions on Architecture and Code Optimization", "ACM Trans Archit Code Optim", "ACM Trans Archit Code Optim (TACO"], "issn": "1544-3566", "url": "http://www.acm.org/taco", "alternate_urls": ["http://portal.acm.org/taco/", "https://taco.acm.org/"]}, "title": "A Conflict-free Scheduler for High-performance Graph Processing on Multi-pipeline FPGAs", "abstract": "FPGA-based graph processing accelerators are nowadays equipped with multiple pipelines for hardware acceleration of graph computations. However, their multi-pipeline efficiency can suffer greatly from the considerable overheads caused by the read/write conflicts in their on-chip BRAM from different pipelines, leading to significant performance degradation and poor scalability. In this article, we investigate the underlying causes behind such inter-pipeline read/write conflicts by focusing on multi-pipeline FPGAs for accelerating Sparse Matrix Vector Multiplication (SpMV) arising in graph processing. We exploit our key insight that the problem of eliminating inter-pipeline read/write conflicts for SpMV can be formulated as one of solving a row- and column-wise tiling problem for its associated adjacency matrix. However, how to partition a sparse adjacency matrix obtained from any graph with respect to a set of pipelines by both eliminating all the inter-pipeline read/write conflicts and keeping all the pipelines reasonably load-balanced is challenging. We present a conflict-free scheduler, WaveScheduler, that can dispatch different sub-matrix tiles to different pipelines without any read/write conflict. We also introduce two optimizations that are specifically tailored for graph processing, \u201cdegree-aware vertex index renaming\u201d for improving load balancing and \u201cdata re-organization\u201d for enabling sequential off-chip memory access, for all the pipelines. Our evaluation on Xilinx\u00aeAlveo\u2122 U250 accelerator card with 16 pipelines shows that WaveScheduler can achieve up to 3.57 GTEPS, running much faster than native scheduling and two state-of-the-art FPGA-based graph accelerators (by 6.48\u00d7 for \u201cnative,\u201d 2.54\u00d7 for HEGP, and 2.11\u00d7 for ForeGraph), on average. In particular, these performance gains also scale up significantly as the number of pipelines increases.", "venue": "ACM Transactions on Architecture and Code Optimization (TACO)", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2020-05-29", "journal": {"name": "ACM Transactions on Architecture and Code Optimization (TACO)", "pages": "1 - 26", "volume": "17"}, "authors": [{"authorId": "2109183880", "name": "Qinggang Wang"}, {"authorId": "9135861", "name": "Long Zheng"}, {"authorId": "2110117920", "name": "Jieshan Zhao"}, {"authorId": "144925807", "name": "Xiaofei Liao"}, {"authorId": "145914256", "name": "Hai Jin"}, {"authorId": "144198209", "name": "Jingling Xue"}], "citations": [{"paperId": "17f3d9b84c21cfc313d5c11f9efba37605cade94", "title": "Software Systems Implementation and Domain-Specific Architectures towards Graph Analytics"}, {"paperId": "9d0b6b233fe4cb1453263e89c3878681615b2a5f", "title": "A Data-Centric Accelerator for High-Performance Hypergraph Processing"}, {"paperId": "c8fc33e66ed4cb947fadf90bf3b7d6f7afef80c1", "title": "HLS-based High-throughput and Work-efficient Synthesizable Graph Processing Template Pipeline"}, {"paperId": "9d648b9e77a1c7e7a12b88c7c382c28b6ad650ce", "title": "FDGLib: A Communication Library for Efficient Large-Scale Graph Processing in FPGA-Accelerated Data Centers"}, {"paperId": "8c1931e9ae4e790504827db2274667444311ad58", "title": "GraSU: A Fast Graph Update Library for FPGA-based Dynamic Graph Processing"}, {"paperId": "d0ecffd78981d6bb85dec8b6ed27fc55a01179bf", "title": "Non-relational Databases on FPGAs: Survey, Design Decisions, Challenges"}]}
