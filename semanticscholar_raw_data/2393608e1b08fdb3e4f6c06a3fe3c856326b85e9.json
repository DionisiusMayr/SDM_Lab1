{"paperId": "2393608e1b08fdb3e4f6c06a3fe3c856326b85e9", "publicationVenue": {"id": "7bb54772-a70c-44df-9b9d-9f3b5354c0e2", "name": "IEEE International Parallel and Distributed Processing Symposium", "type": "conference", "alternate_names": ["IEEE Int Parallel Distrib Process Symp", "International Parallel and Distributed Processing Symposium", "IPDPS", "Int Parallel Distrib Process Symp"], "url": "http://www.ipdps.org/"}, "title": "Data Jockey: Automatic Data Management for HPC Multi-tiered Storage Systems", "abstract": "We present the design and implementation of Data Jockey, a data management system for HPC multi-tiered storage systems. As a centralized data management control plane, Data Jockey automates bulk data movement and placement for scientific workflows and integrates into existing HPC storage infrastructures. Data Jockey simplifies data management by eliminating human effort in programming complex data movements, laying datasets across multiple storage tiers when supporting complex workflows, which in turn increases the usability of multi-tiered storage systems emerging in modern HPC data centers. Specifically, Data Jockey presents a new data management scheme called \"goal driven data management\" that can automatically infer low-level bulk data movement plans from declarative high-level goal statements that come from the lifetime of iterative runs of scientific workflows. While doing so, Data Jockey aims to minimize data wait times by taking responsibility for datasets that are unused or to be used, and aggressively utilizing the capacity of the upper, higher performant storage tiers. We evaluated a prototype implementation of Data Jockey under a synthetic workload based on a year's worth of Oak Ridge Leadership Computing Facility's (OLCF) operational logs. Our evaluations suggest that Data Jockey leads to higher utilization of the upper storage tiers while minimizing the programming effort of data movement compared to human involved, per-domain ad-hoc data management scripts.", "venue": "IEEE International Parallel and Distributed Processing Symposium", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-05-01", "journal": {"name": "2019 IEEE International Parallel and Distributed Processing Symposium (IPDPS)", "pages": "511-522"}, "authors": [{"authorId": "2056460678", "name": "Woong Shin"}, {"authorId": "2364029", "name": "Christopher Brumgard"}, {"authorId": "2064541275", "name": "Bing Xie"}, {"authorId": "1730937", "name": "Sudharshan S. Vazhkudai"}, {"authorId": "40157196", "name": "D. Ghoshal"}, {"authorId": "1770398", "name": "S. Oral"}, {"authorId": "1792683", "name": "L. Ramakrishnan"}], "citations": [{"paperId": "1a5bf29e45002e71412b102898d4907063d1e049", "title": "SLRL: a simple least remaining lifetime file evicition policy for HPC multi-tier storage systems"}, {"paperId": "98e066f19f638cab5f6a062e9a7ce7b39b060b22", "title": "Programming Abstractions for Managing Workflows on Tiered Storage Systems"}, {"paperId": "0a8ded6585640d6c626d50dd93bdf7adc7786563", "title": "Interpreting Write Performance of Supercomputer I/O Systems with Regression Models"}, {"paperId": "81cecde0405beab0b9f242f5d0ed58e55c60a252", "title": "Predicting file lifetimes for data placement in multi-tiered storage systems for HPC"}, {"paperId": "156ee45a53b0bc8f10e1e997c81a3806dadebfd1", "title": "On the Use of Containers in High Performance Computing Environments"}, {"paperId": "bfdd77b17e2964fb6f14e2abca52a0ef6e348976", "title": "BBOS: Efficient HPC Storage Management via Burst Buffer Over-Subscription"}, {"paperId": "682dfe8e95cc4ca39c964d1578645f7fb9eb5b1e", "title": "Applying Machine Learning to Understand Write Performance of Large-scale Parallel Filesystems"}, {"paperId": "a71a3676b2f1c8899b5824bebf011e274aca3e86", "title": "Design and Implementation of Burst Buffer Over-Subscription Scheme for HPC Storage Systems"}, {"paperId": "07a28265c2f272839ca1cd011d1ae8ee08bd755b", "title": "Understanding the Impact of Data Staging for Coupled Scientific Workflows"}, {"paperId": "4187f62c2f19f82d626eb1d2baf12345fc3dca3a", "title": "Efficient Prefetching and Client-Side Caching Algorithms for Improving the Performance of Read Operations in Distributed File Systems"}]}
