{"paperId": "dc1b7128c9156206bab48c0effbda1036d04d32d", "publicationVenue": {"id": "3da56ce6-4a70-402c-a8b0-7dd39a3273d3", "name": "Software, Practice & Experience", "type": "journal", "alternate_names": ["Softw  Pract Exp", "Softw Pract  Exp", "Software - Practice and Experience"], "issn": "0038-0644", "url": "http://www3.interscience.wiley.com/cgi-bin/jhome/1752", "alternate_urls": ["http://www.interscience.wiley.com/jpages/0038-0644/", "https://onlinelibrary.wiley.com/journal/1097024X"]}, "title": "Root causing, detecting, and fixing flaky tests: State of the art and future roadmap", "abstract": "A flaky test is a test that may lead to different results in different runs on a single code under test without any change in the test code. Test flakiness is a noxious phenomenon that slows down software deployment, and increases the expenditures in a broad spectrum of platforms such as software\u2010defined networks and Internet of Things environments. Industrial institutes and labs have conducted a whole lot of research projects aiming at tackling this problem. Although this issue has been receiving more attention from academia in recent years, the academic research community is still behind the industry in this area. A systematic review and trend analysis on the existing approaches for detecting and root causing flaky tests can pave the way for future research on this topic. This can help academia keep pace with industrial advancements and even lead the research in this field. This article first presents a comprehensive review of recent achievements of the industry as well as academia regarding the detection and mitigation of flaky tests. In the next step, recent trends in this line of research are analyzed and a roadmap is established for future research.", "venue": "Software, Practice & Experience", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2020-11-03", "journal": {"name": "Software: Practice and Experience", "pages": "851 - 867", "volume": "51"}, "authors": [{"authorId": "48579534", "name": "B. Zolfaghari"}, {"authorId": "2808113", "name": "R. Parizi"}, {"authorId": "144369609", "name": "Gautam Srivastava"}, {"authorId": "2050351407", "name": "Yoseph Hailemariam"}], "citations": [{"paperId": "b255db1529fe6cedb8b3e5847e50641de2eec19c", "title": "Test Code Flakiness in Mobile Apps: The Developer's Perspective"}, {"paperId": "33758a8ebb94bb8819376d2cf604d3072b65fc67", "title": "Test flakiness' causes, detection, impact and responses: A multivocal review"}, {"paperId": "000f964393dafe113a8e66734d63b2a145844159", "title": "Large Language Models for Software Engineering: A Systematic Literature Review"}, {"paperId": "bf2526fc177d072687b6aea37ea4ab197b0d40db", "title": "Test Flakiness' Causes, Detection, Impact and Responses: A Multivocal Review"}, {"paperId": "05ae14563cd3bda8eb0691d35f02e54c0f56ccf3", "title": "Continuous Integration and Delivery Practices for Cyber-Physical Systems: An Interview-Based Study"}, {"paperId": "6171369f80353cd5f929433ae35d73ec183006c9", "title": "Research on Test Flakiness: from Unit to System Testing"}, {"paperId": "4eb5241ee1de5c326fc44a3d60083f6794d515f9", "title": "Mining Android API Usage to Generate Unit Test Cases for Pinpointing Compatibility Issues"}, {"paperId": "cfc3ab3380ddb89cceb5a84cce9cc33a7466937c", "title": "An Empirical Study of Flaky Tests in JavaScript"}, {"paperId": "2b7de1addd00a624aafd06e3a5eb29052acb5e8d", "title": "Software test results exploration and visualization with continuous integration and nightly testing"}, {"paperId": "13ac656742c50007453bdaada81203ba7f8324e9", "title": "A Survey of Flaky Tests"}, {"paperId": "7006c481e07cf0c71d93d82f8cfbafc5ffac8913", "title": "Flakify: A Black-Box, Language Model-Based Predictor for Flaky Tests"}, {"paperId": "965e34daaaa4e9d189d533020daa40312a537721", "title": "Understanding practitioners\u2019 strategies to handle test smells: a multi-method study"}, {"paperId": "62e44529a0e527f73fa3ba78ffa1a587df287164", "title": "Intelligent antiphishing framework to detect phishing scam: A hybrid classification approach"}, {"paperId": "655f2893bdb688c2cb24ae1fcefe1aaee5fc89db", "title": "On the use of test smells for prediction of flaky tests"}, {"paperId": "1f02cbccd34625edf60f4ec4b88d4ff4414d9946", "title": "What is the Vocabulary of Flaky Tests? An Extended Replication"}, {"paperId": "1cee7ca4676b5e7a6b2eacfeb48db56a2d902043", "title": "An empirical study of async wait flakiness in front-end testing"}]}
