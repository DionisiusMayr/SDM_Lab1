{"paperId": "0eda0754dc6c1ba9226defaad81d37f44c2c5fb3", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Symbolic Exact Inference for Discrete Probabilistic Programs", "abstract": "The computational burden of probabilistic inference remains a hurdle for applying probabilistic programming languages to practical problems of interest. In this work, we provide a semantic and algorithmic foundation for efficient exact inference on discrete-valued finite-domain imperative probabilistic programs. We leverage and generalize efficient inference procedures for Bayesian networks, which exploit the structure of the network to decompose the inference task, thereby avoiding full path enumeration. To do this, we first compile probabilistic programs to a symbolic representation. Then we adapt techniques from the probabilistic logic programming and artificial intelligence communities in order to perform inference on the symbolic representation. We formalize our approach, prove it sound, and experimentally validate it against existing exact and approximate inference techniques. We show that our inference approach is competitive with inference procedures specialized for Bayesian networks, thereby expanding the class of probabilistic programs that can be practically analyzed.", "venue": "arXiv.org", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-04-03", "journal": {"name": "ArXiv", "volume": "abs/1904.02079"}, "authors": [{"authorId": "5341399", "name": "Steven Holtzen"}, {"authorId": "3105241", "name": "T. Millstein"}, {"authorId": "1749506", "name": "Guy Van den Broeck"}], "citations": [{"paperId": "7aa2c7d7b6e28a16beda7aab355b072313302253", "title": "Formally Verified Samplers from Probabilistic Programs with Loops and Conditioning"}, {"paperId": "2e5c94db907d9090ff154ff5757d51329e7a7594", "title": "Sum-Product Loop Programming: From Probabilistic Circuits to Loop Programming"}, {"paperId": "5a8722d68f5527e669d5e744a774723a144f7e03", "title": "Reasoning about \u201creasoning about reasoning\u201d: semantics and contextual equivalence for probabilistic programs with nested queries and recursion"}, {"paperId": "8d1fa976365563fe194d3faf1262924b6b311a77", "title": "Bayesian Inference by Symbolic Model Checking"}, {"paperId": "512319fd585478c8273203d8870555c3d3e14530", "title": "On Hardware-Aware Probabilistic Frameworks for Resource Constrained Embedded Applications"}, {"paperId": "c432cdafe7c67207256a932c9d65e2c334f4e63a", "title": "Hybrid Probabilistic Inference with Logical Constraints: Tractability and Message Passing"}, {"paperId": "4dbc17140ab417e19d4696850147d22e6d9131e8", "title": "Transforming Probabilistic Programs into Algebraic Circuits for Inference and Learning"}, {"paperId": "fd71863fc5db9ce94b4967a2cd856e3a55a08606", "title": "Maximum Causal Entropy Specification Inference from Demonstrations"}, {"paperId": "2c59f41d82b35f8f6b84b621a7feb01c3a614df3", "title": "Towards Hardware-Aware Tractable Learning of Probabilistic Models"}, {"paperId": "0567ce56d409f84938ea9bb3a20c1c4226b3f0f6", "title": "Hardware-Aware Probabilistic Circuits"}, {"paperId": "fda69c6d2ae8fb01a094a84ce35d0468d5dd6d6f", "title": "Coinductive Trees for Exact Inference of Probabilistic Programs"}, {"paperId": "57c2e3ac9e505ab317f58a561d45000a5a18b579", "title": "Quantitative Evaluation of Systems: 17th International Conference, QEST 2020, Vienna, Austria, August 31 \u2013 September 3, 2020, Proceedings"}]}
