{"paperId": "73bf2ea6986511cc7282a2f01ec213063dd257be", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Heterogeneity-Aware Asynchronous Decentralized Training", "abstract": "Distributed deep learning training usually adopts All-Reduce as the synchronization mechanism for data parallel algorithms due to its high performance in homogeneous environment. However, its performance is bounded by the slowest worker among all workers, and is significantly slower in heterogeneous situations. AD-PSGD, a newly proposed synchronization method which provides numerically fast convergence and heterogeneity tolerance, suffers from deadlock issues and high synchronization overhead. Is it possible to get the best of both worlds - designing a distributed training method that has both high performance as All-Reduce in homogeneous environment and good heterogeneity tolerance as AD-PSGD? In this paper, we propose Ripples, a high-performance heterogeneity-aware asynchronous decentralized training approach. We achieve the above goal with intensive synchronization optimization, emphasizing the interplay between algorithm and system implementation. To reduce synchronization cost, we propose a novel communication primitive Partial All-Reduce that allows a large group of workers to synchronize quickly. To reduce synchronization conflict, we propose static group scheduling in homogeneous environment and simple techniques (Group Buffer and Group Division) to avoid conflicts with slightly reduced randomness. Our experiments show that in homogeneous environment, Ripples is 1.1 times faster than the state-of-the-art implementation of All-Reduce, 5.1 times faster than Parameter Server and 4.3 times faster than AD-PSGD. In a heterogeneous setting, Ripples shows 2 times speedup over All-Reduce, and still obtains 3 times speedup over the Parameter Server baseline.", "venue": "arXiv.org", "year": 2019, "fieldsOfStudy": ["Computer Science", "Engineering"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-09-17", "journal": {"name": "ArXiv", "volume": "abs/1909.08029"}, "authors": [{"authorId": "31343581", "name": "Qinyi Luo"}, {"authorId": "151050884", "name": "Jiaao He"}, {"authorId": "49501910", "name": "Youwei Zhuo"}, {"authorId": "2288203548", "name": "Xuehai Qian"}], "citations": [{"paperId": "52255fd2c0790a1fe7c41720d63149fb5864839a", "title": "Task allocation for decentralized training in heterogeneous environment"}, {"paperId": "0943d39af3832abd732c7cdc2a7910b104042e76", "title": "SSD-SGD: Communication Sparsification for Distributed Deep Learning Training"}, {"paperId": "c3455699f6c05400237b6e1bf1c96fa002969cae", "title": "Job scheduling for distributed machine learning in optical WAN"}, {"paperId": "bf4d106f67fd626d4ab47c3aef60709fe06362a7", "title": "Topology-Aware Differential Privacy for Decentralized Image Classification"}, {"paperId": "975113b67b2d01cef2e2ea52b1586975f6acc65e", "title": "Differentially Private Decentralized Learning"}, {"paperId": "36ea088ac120f7ab5a6f037b6e6a13132cd9075d", "title": "Communication Efficient Decentralized Training with Multiple Local Updates"}, {"paperId": "2a5ff56cc37299db46c6db80eb84c0757a2d17c4", "title": "Communication-Efficient Local Decentralized SGD Methods"}, {"paperId": "9514a0b9c2ebc46c9a992bf1a5d17ead861ab833", "title": "Matrix Sketching for Secure Collaborative Machine Learning"}]}
