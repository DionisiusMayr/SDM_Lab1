{"paperId": "baa9d914ef9612cb1d61e6ac6bc6ed7269db4759", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "A Learned Query Rewrite System using Monte Carlo Tree Search", "abstract": "\n Query rewrite transforms a SQL query into an equivalent one but with higher performance. However, SQL rewrite is an NP-hard problem, and existing approaches adopt heuristics to rewrite the queries. These heuristics have two main limitations. First, the order of applying different rewrite rules significantly affects the query performance. However, the search space of all possible rewrite orders grows exponentially with the number of query operators and rules and it is rather hard to find the optimal rewrite order. Existing methods apply a pre-defined order to rewrite queries and will fall in a local optimum. Second, different rewrite rules have different benefits for different queries. Existing methods work on single plans but cannot effectively estimate the benefits of rewriting a query. To address these challenges, we propose a\n policy tree\n based query rewrite framework, where the root is the input query and each node is a rewritten query from its parent. We aim to explore the tree nodes in the\n policy tree\n to find the optimal rewrite query. We propose to use\n Monte Carlo Tree Search\n to explore the policy tree, which navigates the policy tree to efficiently get the optimal node. Moreover, we propose a learning-based model to estimate the expected performance improvement of each rewritten query, which guides the tree search more accurately. We also propose a parallel algorithm that can explore the tree search in parallel in order to improve the performance. Experimental results showed that our method significantly outperformed existing approaches.\n", "venue": "Proceedings of the VLDB Endowment", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-09-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "46-58", "volume": "15"}, "authors": [{"authorId": "50177381", "name": "Xuanhe Zhou"}, {"authorId": "47949377", "name": "Guoliang Li"}, {"authorId": "1720852203", "name": "Chengliang Chai"}, {"authorId": "145556736", "name": "Jianhua Feng"}], "citations": [{"paperId": "6d892169ba8ad60cbc1d127d8b3c74cbe9ba7237", "title": "Query Rewriting via Large Language Models"}, {"paperId": "20aa90187af7dd6508fa32ab438ea243fee0f5fa", "title": "PACE: Poisoning Attacks on Learned Cardinality Estimation"}, {"paperId": "204d32f3a3b95afdd1bc3da314ea5c722ee6cb84", "title": "Wred: Workload Reduction for Scalable Index Tuning"}, {"paperId": "edc5b4b2b89718b42dc90192960084166b7987d8", "title": "Multi-Intent Attribute-Aware Text Matching in Searching"}, {"paperId": "09130eaf86fd1dff3857b27a8345475f5cb271ed", "title": "LLM-Enhanced Data Management"}, {"paperId": "eb185984944bc494f1ebd46fedc8aa5032cc44c6", "title": "LLM-SQL-Solver: Can LLMs Determine SQL Equivalence?"}, {"paperId": "477133fdd561d9f08550b5ffb74a5e2c275d177e", "title": "Proving Query Equivalence Using Linear Integer Arithmetic"}, {"paperId": "8e0175e00163e80aea89daf12474cbe68643fb99", "title": "Rethinking Learned Cost Models: Why Start from Scratch?"}, {"paperId": "c26bc1e91a0ea0f4edfdbfdc280e3b4eb869f6e0", "title": "RelJoin: Relative-cost-based Selection of Distributed Join Methods for Query Plan Optimization"}, {"paperId": "de81c16651c45b4d2d582ad3c8ab7b4f5a740892", "title": "Offline and Online Algorithms for Cache Allocation with Monte Carlo Tree Search and a Learned Model"}, {"paperId": "db06503f81be514a84cd70df826105dfd0f08963", "title": "HLRS: A Deep Reinforcement Learning-Based Hero Recommendation System for MOBA Games"}, {"paperId": "de020c6853b7a0d6345043b4bb8b8f1760615e1c", "title": "FEBench: A Benchmark for Real-Time Relational Data Feature Extraction"}, {"paperId": "91c7ebb46a31c6b062533715d7d49614ffcfe6e9", "title": "AutoSteer: Learned Query Optimization for Any SQL Database"}, {"paperId": "be87778d5791f129cc2165922922ba9024690689", "title": "Demo of QueryBooster: Supporting Middleware-based SQL Query Rewriting as a Service"}, {"paperId": "7b4c136e8abc59e91fc0af6fe5eaf48c6a6b31b4", "title": "A Learned Query Rewrite System"}, {"paperId": "56b04b587b38ec39bcd6f8a175d7b87f25512ce9", "title": "Real-time Workload Pattern Analysis for Large-scale Cloud Databases"}, {"paperId": "ce6b3814140679a10e7232f4ce989af213591841", "title": "SlabCity: Whole-Query Optimization using Program Synthesis"}, {"paperId": "8f9b7312d04c4287b201105ec50ce306dacd0c37", "title": "$\\mathtt {AutoView}$: An Autonomous Materialized View Management System With Encoder-Reducer"}, {"paperId": "ebe7b4b3931d9df634b0e9667ec7686e1eac9c94", "title": "Grep: A Graph Learning Based Database Partitioning System"}, {"paperId": "e0e6671d3af53ba7462f84b49140deb588cce77f", "title": "QueryBooster: Improving SQL Performance Using Middleware Services for Human-Centered Query Rewriting"}, {"paperId": "8f831f341e959955a495730d81996e62c57cc0bd", "title": "Can LLM Already Serve as A Database Interface? A BIg Bench for Large-Scale Database Grounded Text-to-SQLs"}, {"paperId": "c07802ed8a25998e9bd44ee1ddbcc63b7eb34060", "title": "Data Management for Machine Learning: A Survey"}, {"paperId": "87b142f0bb5c08a9a0cf3ff99c57d82cd8cd410e", "title": "Towards Designing and Learning Piecewise Space-Filling Curves"}, {"paperId": "47a23008ab677567a84f0add7e25306ac6f8f9c3", "title": "COOOL: A Learning-To-Rank Approach for SQL Hint Recommendations"}, {"paperId": "6c4939564ba3d47fd4e54ff6084128f21ddb8037", "title": "AutoCE: An Accurate and Efficient Model Advisor for Learned Cardinality Estimation"}, {"paperId": "fc4e95185b9a669dab434c42fdcc5aa13c59c0bb", "title": "A Unified and Efficient Coordinating Framework for Autonomous DBMS Tuning"}, {"paperId": "d5aa0efc065ac3073404aebbcc3a2ca3eb63db4b", "title": "Cost-based or Learning-based? A Hybrid Query Optimizer for Query Plan Selection"}, {"paperId": "df35c9b96dce7d18360bea444f3114e02853e406", "title": "WeTune: Automatic Discovery and Verification of Query Rewrite Rules"}, {"paperId": "d53ef63ada540f20ebbf28aa47072e36c8faf024", "title": "LearnedSQLGen: Constraint-aware SQL Generation using Reinforcement Learning"}, {"paperId": "324617847cc591e3fb11f15cdcdfbc9374021b51", "title": "RW-Tree: A Learned Workload-aware Framework for R-tree Construction"}, {"paperId": "49f04a0fadf6c6cf833555fe15fd3c32d6f46eae", "title": "AutoIndex: An Incremental Index Management System for Dynamic Workloads"}, {"paperId": "95a7e4b4d535a9c61a6f466a090a4004ef151b50", "title": "Machine Learning for Data Management: A System View"}, {"paperId": "d768710878f296ee8c3c9812d03dbe407a6f3759", "title": "Adaptive Code Learning for Spark Configuration Tuning"}, {"paperId": "1da2a0e8dac5db009cfadb96aa544ced9b1e4580", "title": "Selective Data Acquisition in the Wild for Model Charging"}, {"paperId": "505a3f848c17e8dd04abc3e77e164ce877f673de", "title": "Machine Learning for Databases"}, {"paperId": "fbd2ec1505de35ccceca9bf29c2746733cb09278", "title": "Database Gyms"}, {"paperId": "4d6c31599cefddf90133b1907aa7d42ed8de04ff", "title": "Learned Query Superoptimization (Extended Abstract)"}, {"paperId": "45976c13ecc25922acadcefa41c5da01459cd725", "title": "Dynamic Materialized View Management using Graph Neural Network"}]}
