{"paperId": "c270f8f8cef47c38061d6bf6a13d148e0a8fcfc3", "publicationVenue": null, "title": "This paper is included in the Proceedings of the 19th USENIX Symposium on Networked Systems Design and Implementation.", "abstract": "Data-plane programmability is now mainstream. As we \ufb01nd more use cases, deployments need to be able to run multiple packet-processing modules in a single device. These are likely to be developed by independent teams, either within the same organization or from multiple organizations. Therefore, we need isolation mechanisms to ensure that modules on the same device do not interfere with each other. This paper presents Menshen, an extension of the Recon\ufb01g-urable Match Tables (RMT) pipeline that enforces isolation between different packet-processing modules. Menshen is comprised of a set of lightweight hardware primitives and an extension to the open source P4-16 reference compiler that act in conjunction to meet this goal. We have prototyped Menshen on two FPGA platforms (NetFPGA and Corundum). We show that our design provides isolation, and allows new modules to be loaded without impacting the ones already running. Finally, we demonstrate the feasibility of implementing Menshen on ASICs by using the FreePDK45nm technology library and the Synopsys DC synthesis software, showing that our design meets timing at a 1 GHz clock frequency and needs approximately 6% additional chip area. We have open sourced the code for Menshen\u2019s hardware and software at https://isolation.quest/ .", "venue": "", "year": 2022, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2155456826", "name": "Tao Wang"}, {"authorId": "2286255026", "name": "Xiangrui Yang"}, {"authorId": "2272991187", "name": "Gianni Antichi"}, {"authorId": "2286229287", "name": "\u22c6\u22c6 Anirudh"}, {"authorId": "2286194472", "name": "\u2020. Sivaraman"}, {"authorId": "3169583", "name": "Aurojit Panda"}], "citations": [{"paperId": "14ca41d34ddf88520ad3580a84e8864075f41b4e", "title": "Application-Defined Receive Side Dispatching on the NIC"}, {"paperId": "0435db1dcda224a60a9a7eca8554ca22fee9a88d", "title": "Memory Management in ActiveRMT: Towards Runtime-programmable Switches"}, {"paperId": "489ab839ed0c08f38676130ddcdab949bdef53f8", "title": "Octopus: A Heterogeneous In-network Computing Accelerator Enabling Deep Learning for network"}, {"paperId": "b2a0e0afcc2bca3df80037fcea992378f09faf5f", "title": "Kugelblitz: Streamlining Reconfigurable Packet Processing Pipeline Design and Evaluation"}, {"paperId": "69545949b48caf4f806d49ff25aad8e09222b913", "title": "CaT: A Solver-Aided Compiler for Packet-Processing Pipelines"}, {"paperId": "c2440a2ebbe54b967892f8db769543c1dbee397c", "title": "Memory-efficient RMT Matching Optimization Based on MBitTree"}, {"paperId": "1cf54b8b744ca6cc72d2f5af5ed7678f6333bd3d", "title": "High-Level Synthesis for Packet-Processing Pipelines"}, {"paperId": "bff2afa467751fbc94e977b58149016eb516293c", "title": "A Programmable SRv6 Processor for SFC"}, {"paperId": "69f59fa2548df5abd88ef059352403f5a5ba42fe", "title": "FlexDriver: a network driver for your accelerator"}, {"paperId": "6e2aba4ba43479af6d6313906f29ac97d8858096", "title": "Synthesizing Runtime Programmable Switch Updates"}, {"paperId": "079efecc8d1b0d45156e87b8d069afd0f8362636", "title": "the network edge"}]}
