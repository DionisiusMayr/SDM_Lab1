{"paperId": "e57b662f537e900f1b8b1da85e604e7e1ff31a23", "publicationVenue": {"id": "e247eac1-f527-41a3-af6d-bc6a6fc69de9", "name": "IEEE Conference on High Performance Extreme Computing", "type": "conference", "alternate_names": ["HPEC", "IEEE High Perform Extreme Comput Conf", "IEEE Conf High Perform Extreme Comput", "IEEE High Performance Extreme Computing Conference"]}, "title": "Edge-Connected Jaccard Similarity for Graph Link Prediction on FPGA", "abstract": "Graph analysis is a critical task in many fields, such as social networking, epidemiology, bioinformatics, and fraud de-tection. In particular, understanding and inferring relationships between graph elements lies at the core of many graph-based workloads. Real-world graph workloads and their associated data structures create irregular computational patterns that compli-cate the realization of high-performance kernels. Given these complications, there does not exist a de facto \u201cbest\u201d architecture, language, or algorithmic approach that simultaneously balances performance, energy efficiency, portability, and productivity. In this paper, we realize different algorithms of edge-connected Jaccard similarity for graph link prediction and characterize their performance across a broad spectrum of graphs on an Intel Stratix 10 FPGA. By utilizing a high-level synthesis (HLS)-driven, high-productivity approach (via the C++-based SYCL language) we rapidly prototype two implementations - a from-scratch edge-centric version and a faithfully-ported commodity GPU implementation - which would have been intractable via a hardware description language. With these implementations, we further consider the benefit and necessity of four HLS-enabled optimizations, both in isolation and in concert - totaling seven distinct synthesized hardware pipelines. Leveraging real-world graphs of up to 516 million edges, we show empirically-measured speedups of up to 9.5 x over the initial HLS implementations when all optimizations work in concert.", "venue": "IEEE Conference on High Performance Extreme Computing", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-09-19", "journal": {"name": "2022 IEEE High Performance Extreme Computing Conference (HPEC)", "pages": "1-10"}, "authors": [{"authorId": "2889305", "name": "P. Sathre"}, {"authorId": "1996183921", "name": "Atharva Gondhalekar"}, {"authorId": "145476815", "name": "Wu-chun Feng"}], "citations": [{"paperId": "263cc098e1bcb3050d4ccb61641211b557a56c95", "title": "HeteroMILE: a Multi-Level Graph Representation Learning Framework for Heterogeneous Graphs"}, {"paperId": "0715fb2dd398a1ef859862be6ddb8ec40259cafe", "title": "Average Jaccard index of random graphs"}, {"paperId": "e5f0169fa2abf401dc908d49e400b48b3ebf3d45", "title": "Altis-SYCL: Migrating Altis Benchmarking Suite from CUDA to SYCL for GPUs and FPGAs"}, {"paperId": "0bacfd95eb45f747b3cea90bcdc3309c03d10abf", "title": "On the Three P's of Parallel Programming for Heterogeneous Computing: Performance, Productivity, and Portability"}, {"paperId": "123b7d5f3644cc19dedccd6a4ad8981f8c6da55f", "title": "Deployment of Real-Time Network Traffic Analysis Using GraphBLAS Hypersparse Matrices and D4M Associative Arrays"}, {"paperId": "41198a90c66e6fe9d36d92ebea26500f636c43e6", "title": "Initial Experiences in Porting a GPU Graph Analysis Workload to Chapel"}]}
