{"paperId": "48895c95be782024554b249e60a71ddec4a4d663", "publicationVenue": {"id": "1c2ab05c-7d69-465e-929d-0920857aedce", "name": "International Conference on Automated Software Engineering", "type": "conference", "alternate_names": ["Autom Softw Eng", "ASE", "Automated Software Engineering", "Int Conf Autom Softw Eng"], "url": "http://ase.informatik.uni-essen.de/"}, "title": "What developers want and need from program analysis: An empirical study", "abstract": "Program Analysis has been a rich and fruitful field of research for many decades, and countless high quality program analysis tools have been produced by academia. Though there are some well-known examples of tools that have found their way into routine use by practitioners, a common challenge faced by researchers is knowing how to achieve broad and lasting adoption of their tools. In an effort to understand what makes a program analyzer most attractive to developers, we mounted a multi-method investigation at Microsoft. Through interviews and surveys of developers as well as analysis of defect data, we provide insight and answers to four high level research questions that can help researchers design program analyzers meeting the needs of software developers. First, we explore what barriers hinder the adoption of program analyzers, like poorly expressed warning messages. Second, we shed light on what functionality developers want from analyzers, including the types of code issues that developers care about. Next, we answer what non-functional characteristics an analyzer should have to be widely used, how the analyzer should fit into the development process, and how its results should be reported. Finally, we investigate defects in one of Microsoft's flagship software services, to understand what types of code issues are most important to minimize, potentially through program analysis.", "venue": "International Conference on Automated Software Engineering", "year": 2016, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference", "Review"], "publicationDate": "2016-08-25", "journal": {"name": "2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "332-343"}, "authors": [{"authorId": "2606785", "name": "M. Christakis"}, {"authorId": "145193818", "name": "C. Bird"}], "citations": [{"paperId": "54c4024876d838c25bcea727884968477461ad3b", "title": "An Empirical Study of Automated Vulnerability Localization with Large Language Models"}, {"paperId": "0c3882124884d105cd7e820c09903bf15ed5bf1f", "title": "Supporting Error Chains in Static Analysis for Precise Evaluation Results and Enhanced Usability"}, {"paperId": "d0b433e0279ffc224b275259b9f77e30be58c4da", "title": "LEGION: Harnessing Pre-trained Language Models for GitHub Topic Recommendations with Distribution-Balance Loss"}, {"paperId": "34cfdf251939027613405de34983ecc399b9b549", "title": "Custom static analysis to enhance insight into the usage of in-house libraries"}, {"paperId": "39d62047c57106cd64054859986dde374ccdfa7a", "title": "Understanding and Detecting Annotation-Induced Faults of Static Analyzers"}, {"paperId": "5371830139b582eafb4631ecaea8c899a9c326e7", "title": "When Dataflow Analysis Meets Large Language Models"}, {"paperId": "438f775bad21cb9501c6bb29366cbcaf13efb6c2", "title": "FuzzSlice: Pruning False Positives in Static Analysis Warnings through Function-Level Fuzzing"}, {"paperId": "bdaa145308d326c8243adbaf2e279a0657c6fb39", "title": "A Comparative Study of Commit Representations for JIT Vulnerability Prediction"}, {"paperId": "c346a267f51b18c11530563ed02bfa9620ba7be2", "title": "Empirical Study of the Docker Smells Impact on the Image Size"}, {"paperId": "21056a222c87ea8b07326bcb9b0ad980a910816b", "title": "From Leaks to Fixes: Automated Repairs for Resource Leak Warnings"}, {"paperId": "655acf5ea5d9b3123d7f80611c7f928569046998", "title": "Statfier: Automated Testing of Static Analyzers via Semantic-Preserving Program Transformations"}, {"paperId": "37f7ddcabcb20f0a85bd1d5a2604a60776b975d4", "title": "Unhelpful Assumptions in Software Security Research"}, {"paperId": "08fc84afe6b5ca286f4fcf43b386b77fd9b67c58", "title": "SkipAnalyzer: A Tool for Static Code Analysis with Large Language Models"}, {"paperId": "352101b2759f220904f7859bed19b914ebc273f1", "title": "Formal Runtime Error Detection During Development in the Automotive Industry"}, {"paperId": "c12bce9fab45e0dbdf682ad785c7c02651faef64", "title": "Unleashing the Power of Clippy in Real-World Rust Projects"}, {"paperId": "aa5611d02a8f52bf3562414f2269885a2f2b0c0f", "title": "Finding an Optimal Set of Static Analyzers To Detect Software Vulnerabilities"}, {"paperId": "a9446900ecf726ed49f6a3932f2a58587f7a4956", "title": "ACWRecommender: A Tool for Validating Actionable Warnings with Weak Supervision"}, {"paperId": "54cae201f51d8d42fcdfa2b4e5cc98df160a8fbb", "title": "Can the configuration of static analyses make resolving security vulnerabilities more effective? - A user study"}, {"paperId": "3a28e09e712efdd8c1eb27697b0fc0cbfdac1015", "title": "Reduction of False Positives for Runtime Errors in C/C++ Software: A Comparative Study"}, {"paperId": "a60410d2cb280b116c4f016105e63e8ac870efbc", "title": "Incrementalizing Production CodeQL Analyses"}, {"paperId": "3c98da51e94a705a8756727cf701fe548ad834ec", "title": "Who is Smarter? An Empirical Study of AI-Based Smart Contract Creation"}, {"paperId": "4d2b5eb3a76d2e8c227e06bd9dab7de90fbf5ce3", "title": "\"False negative - that one is going to kill you\": Understanding Industry Perspectives of Static Analysis based Security Testing"}, {"paperId": "19d40727b55d0e276eff61fa4a022ad522770e12", "title": "Neural-Based Test Oracle Generation: A Large-Scale Evaluation and Lessons Learned"}, {"paperId": "80aa70e3ad48b91ebd1d196e387ea65cac183f10", "title": "Tai-e: A Developer-Friendly Static Analysis Framework for Java by Harnessing the Good Designs of Classics"}, {"paperId": "e10e3ee229f48f29a90289b5c642ea733ea6b027", "title": "A Survey of Tool Support for Working with Design Decisions in Code"}, {"paperId": "1f5992928cbc7d27f449f0c13e32fffe3b87e169", "title": "Finding Fixed Vulnerabilities with Off-the-Shelf Static Analysis"}, {"paperId": "b81bb773019607a1c2fb0e956fb8ce0f49c1aaa2", "title": "Do you still need a manual smart contract audit?"}, {"paperId": "e2f70ac27ba8e1c9b2713ca8fda6b2a63ac1c424", "title": "When Long Jumps Fall Short: Control-Flow Tracking and Misuse Detection for Non-local Jumps in C"}, {"paperId": "30c4271ac929af5c5c3b4f5afba8e0beb215138e", "title": "Trustworthy and Synergistic Artificial Intelligence for Software Engineering: Vision and Roadmaps"}, {"paperId": "ac22a5f2d06a37883d1d6b7b00eac470f772aa10", "title": "Synthesizing Conjunctive Queries for Code Search"}, {"paperId": "52576cc59a35a78b52902b39267458debffd8532", "title": "A Study of Static Warning Cascading Tools (Experience Paper)"}, {"paperId": "8c8b11e33709c42998e35418b016a1f86eaa35c6", "title": "Investigating the Password Policy Practices of Website Administrators"}, {"paperId": "2063d000670bf83c870e31c41f0f95241432c58b", "title": "Long-term Static Analysis Rule Quality Monitoring Using True Negatives"}, {"paperId": "a7369e084d461c01498ec3b3c12dc9c298ed1343", "title": "Learning to Boost Disjunctive Static Bug-Finders"}, {"paperId": "1ea228c8fb8fb0dfe4e7a82b0d719822428196e6", "title": "Resolving Security Issues via Quality-Oriented Refactoring: A User Study"}, {"paperId": "5690f38ffdbe5af1ee418fba381a3c8ec33e0a8e", "title": "A Usability Evaluation of AFL and libFuzzer with CS Students"}, {"paperId": "6089486d5e26ef4b0e769137abf9b87ef64fc0ec", "title": "Smart Contract and DeFi Security Tools: Do They Meet the Needs of Practitioners?"}, {"paperId": "3ea0e5e6bfffd94fe68b3aeef7bf814b44e7029a", "title": "Efficient Pattern-based Static Analysis Approach via Regular-Expression Rules"}, {"paperId": "cc16cf9c4bf62b94ce03e130efc24c0c1814fe47", "title": "On the use of static analysis to engage students with software quality improvement: An experience with PMD"}, {"paperId": "bad49c894e1607fa839d4a3ce07dc1fb7939f915", "title": "CodeLMSec Benchmark: Systematically Evaluating and Finding Security Vulnerabilities in Black-Box Code Language Models"}, {"paperId": "8b80fa58a31c1d4cdafdadf9249f04f026cc6367", "title": "On the Relationship Between Linter Warning Density and Software Maintainability: An Empirical Study of JavaScript Projects"}, {"paperId": "e41fabe15003a2dcf7e00b51b68a607414608ec8", "title": "MLinter: Learning Coding Practices from Examples\u2014Dream or Reality?"}, {"paperId": "35456a188d311f8c763b802108e51884e1342c0e", "title": "CHRONOS: Time-Aware Zero-Shot Identification of Libraries from Vulnerability Reports"}, {"paperId": "c2493ea959ec0a5e42cbeb76307a246860eeede9", "title": "Collaborative Application Security Testing for DevSecOps: An Empirical Analysis of Challenges, Best Practices and Tool Support"}, {"paperId": "58adc42edbc380ff526398c5772ec90835c91c98", "title": "Can static analysis tools find more defects?"}, {"paperId": "44a840bb0ac26a9d9fcf144c53a401d2a5465a16", "title": "Leveraging Practitioners\u2019 Feedback to Improve a Security Linter"}, {"paperId": "6a93fe61dc8b5704d4a2d49cc12c58dab0e1e4af", "title": "Classification and Ranking of Delta Static Analysis Alarms"}, {"paperId": "1606c9853cc303241ad74f50ec6920a815d05f90", "title": "An Empirical Assessment on Merging and Repositioning of Static Analysis Alarms"}, {"paperId": "c07e4a5d76f6fcd2aca7e3c0b97746472f7e5813", "title": "Interactive Abstract Interpretation: Reanalyzing Whole Programs for Cheap"}, {"paperId": "8b06e966bbd7ecb1e214bca9f8dcb972ffef7989", "title": "AutoPruner: transformer-based call graph pruning"}, {"paperId": "5e0fd75c6f2adbee18cd78272a2dca2db81ae13c", "title": "InfERL: scalable and extensible Erlang static analysis"}, {"paperId": "2e63315cd86469b7eff840bbe6faa702eef51aa6", "title": "Machine Learning for Source Code Vulnerability Detection: What Works and What Isn\u2019t There Yet"}, {"paperId": "22c42aee23df771b3488c6bc732050925ff7e6f2", "title": "\u201cI just looked for the solution!\u201dOn Integrating Security-Relevant Information in Non-Security API Documentation to Support Secure Coding Practices"}, {"paperId": "1791c46a656b8a81a702b8d794b23817a670dc35", "title": "Patching Locking Bugs Statically with Crayons"}, {"paperId": "1460f8cf5ec866a588e4c50413e6f4472e33e26b", "title": "How far are German companies in improving security through static program analysis tools?"}, {"paperId": "c545afad145927a4315c0b823acac98e5ca19cb6", "title": "Software security during modern code review: the developer\u2019s perspective"}, {"paperId": "b0460fa89c7dea50076edf9d259aa2fbecbe42d1", "title": "Tai-e: A Static Analysis Framework for Java by Harnessing the Best Designs of Classics"}, {"paperId": "57d3f069863ff604bd111a688d230875eb593a4c", "title": "A large-scale study of usability criteria addressed by static analysis tools"}, {"paperId": "3c5c716a201a1ce78d253d4bc3417b0ca18aa59d", "title": "An empirical study on the effectiveness of static C code analyzers for vulnerability detection"}, {"paperId": "79ac46c940fea36551a47f6844454aa9c3ca3cba", "title": "An Exploratory Study on Regression Vulnerabilities"}, {"paperId": "7842809c6c15f713aea8dc5ce3d1f39774a705f7", "title": "Analyzing Linter Usage and Warnings Through Mining Software Repositories: A Longitudinal Case Study of JavaScript Packages"}, {"paperId": "f44e90a6ba62d00f85b74c2a5719bf5b6c8a6a92", "title": "How to Find Actionable Static Analysis Warnings: A Case Study With FindBugs"}, {"paperId": "0964f98ac967478e99904cf9a2a80a576b489735", "title": "Striking a Balance: Pruning False-Positives from Static Call Graphs"}, {"paperId": "ffb8793c585b5d2188a6c20fb5e969cbc35c67c3", "title": "Fast and Precise Application Code Analysis using a Partial Library"}, {"paperId": "4746fda6a5064d03ba9614ba21a143cfa03d6608", "title": "Precise Divide-By-Zero Detection with Affirmative Evidence"}, {"paperId": "0b4f4cab119263e610cc65e2b16d842f0c0c6308", "title": "CamBench - Cryptographic API Misuse Detection Tool Benchmark Suite"}, {"paperId": "99ad23d653e76e925db6e30c15e3e370bc2eff1d", "title": "Fluently specifying taint-flow queries with fluentTQL"}, {"paperId": "77a238e83ed091feb6034643278d1981eb86cf94", "title": "Static Analysis Warnings and Automatic Fixing: A Replication for C# Projects"}, {"paperId": "b815563b2d18413d93d709472a358aa8487d69e7", "title": "FUM - A Framework for API Usage constraint and Misuse Classification"}, {"paperId": "8cf0437f4fedd64f06c774996c1b82457b00b676", "title": "Less is More: Supporting Developers in Vulnerability Detection during Code Review"}, {"paperId": "452ee36d07a178f972d2f1d9e9de76f2603e748f", "title": "Survey of Approaches for Postprocessing of Static Analysis Alarms"}, {"paperId": "0c341560ac548d4dfaa94455482adf50ed9cb154", "title": "Inferring Bug Signatures to Detect Real Bugs"}, {"paperId": "06ad426f08c20de2d584efd9ea548f5f3969db7e", "title": "Designing UIs for static-analysis tools"}, {"paperId": "b1c01d5772aff3e96ac68761cac0bd162eada5d2", "title": "Critical Understanding of Security Vulnerability Detection Plugin Evaluation Reports"}, {"paperId": "249d5fa76fe7d1b0aca8e3d0b0bc3643f0e95cb2", "title": "Are automated static analysis tools worth it? An investigation into relative warning density and external software quality on the example of Apache open source projects"}, {"paperId": "7362bf55c346ce033ae806e99b43a4cb646e367d", "title": "Counterfactual Explanations for Models of Code"}, {"paperId": "6886d8f7023f3426cf349cfcbe8fbd4f498ea4c5", "title": "A parallel worklist algorithm and its exploration heuristics for static modular analyses"}, {"paperId": "19ae640a861e7b8f55a25fbcd3f293c2536d9b06", "title": "On the Real-World Effectiveness of Static Bug Detectors at Finding Null Pointer Exceptions"}, {"paperId": "e84315eccc5a10c35e7a2d64631a24dbbf9543d1", "title": "Deep security analysis of program code"}, {"paperId": "9c3f8a0c1f57258f6c551a8455fe29e8ae18cb78", "title": "Making pointer analysis more precise by unleashing the power of selective context sensitivity"}, {"paperId": "a0a5423a9cd0908996b3db11693fa1bbe47a062d", "title": "SoK: Human, Organizational, and Technological Dimensions of Developers\u2019 Challenges in Engineering Secure Software"}, {"paperId": "9f48f57df4690ff13391305a66fcfc436333cfc7", "title": "Sporq: An Interactive Environment for Exploring Code using Query-by-Example"}, {"paperId": "8ecb371c49acdc0bd3a2a9433c18308137a4952d", "title": "Developers Are Neither Enemies Nor Users: They Are Collaborators"}, {"paperId": "28c7aa7191ecca5ca9955d8c266c697d5f44c88f", "title": "SCPL: A Markup Language for Source Code Patterns Localization"}, {"paperId": "9a04973ce76d300adb06a26c5fad6e5a003c1ce9", "title": "SecuCheck: Engineering configurable taint analysis for software developers"}, {"paperId": "0f00a3fc60ef4b76b350a65b2d600c73e482e7cf", "title": "Designing UIs for Static Analysis Tools"}, {"paperId": "c6257437c8c7b9c20ced26b62a8a5849a122fcfa", "title": "IDE support for cloud-based static analyses"}, {"paperId": "4a32300bcb56923943512d7d667c68f8be97ca5e", "title": "An Empirical Study of Rule-Based and Learning-Based Approaches for Static Application Security Testing"}, {"paperId": "5d0b53a7281a81ed3e0b9ea11b1cb594c6ee463b", "title": "Guided Exploration"}, {"paperId": "afc455aebe2b02a02dae472df19bdcbf0d45c136", "title": "Security Notifications in Static Analysis Tools: Developers\u2019 Attitudes, Comprehension, and Ability to Act on Them"}, {"paperId": "6e76ab15c36ca5b74b2b2b5c9d9de254689f644d", "title": "Trust in Collaborative Automation in High Stakes Software Engineering Work: A Case Study at NASA"}, {"paperId": "3a7bba774827cc1514a5e9892ca6aa3eed357fa1", "title": "ARBITRAR: User-Guided API Misuse Detection"}, {"paperId": "42d3ff617287a4371e77cfa7a53b3c827690dd8b", "title": "A Survey of Performance Optimization for Mobile Applications"}, {"paperId": "cf58a75ce31085c620898abc81f3e081c420a0bd", "title": "Secure Software Development in the Era of Fluid Multi-party Open Software and Services"}, {"paperId": "a255ca065cde7a2bf7bc83127b476e5d6e5cc39d", "title": "Smart Contract Security: A Practitioners' Perspective"}, {"paperId": "0b737ee562547c764e4d9353e062795ccf6c5ce8", "title": "Code\u2010level model checking in the software development workflow at Amazon Web Services"}, {"paperId": "7f32efd77c4c16ca3938ee89fd78045c68a2c6d3", "title": "Towards Practical Reuse of Custom Static Analysis Rules for Defect Localization"}, {"paperId": "2cf8043f76dc105275d10ff1de58e1e4b1ec62c1", "title": "An Empirical Study in Software Verification Tools"}, {"paperId": "dfbadb424b464902223cb9079ace4eb4e5afbd41", "title": "An empirical investigation on the challenges of creating custom static analysis rules for defect localization"}, {"paperId": "35f2bf7e6c284fa875a2e8a46edc749de3862ca2", "title": "SymJEx: symbolic execution on the GraalVM"}, {"paperId": "a5b9f3b026bc78098e528b623311d2f6b8725919", "title": "Automatically Tailoring Static Analysis to Custom Usage Scenarios"}, {"paperId": "2b47c90be1cd72d7bea33ca817de000a23ce6df0", "title": "Techniques for Efficient Automated Elimination of False Positives"}, {"paperId": "8380bc1126aea3d2fdd316dc3d10ecf4c92cf8af", "title": "A Parallel Worklist Algorithm for Modular Analyses"}, {"paperId": "5eba2afc862d642c9ebec3946875130fd43823ab", "title": "The Adoption of JavaScript Linters in Practice: A Case Study on ESLint"}, {"paperId": "01cacef559158ca975fb160fc8f9cca83fc8fd72", "title": "A Survey of Software Code Review Practices in Brazil"}, {"paperId": "10473bf2c3bc856fd9aa40b6a1c3ca350c1d0e9c", "title": "RulePad: interactive authoring of checkable design rules"}, {"paperId": "6b2d6c4f8a279891474696ba7d2fb752b00e85c8", "title": "Postprocessing of static analysis alarms"}, {"paperId": "1655923de9a40440287ec525bc076f2f21dc187f", "title": "Bitcoin\u2019s APIs in Open-Source Projects: Security Usability Evaluation"}, {"paperId": "b1f1ead6cc6166b1f50c1d744a21d0df7dab068c", "title": "Tailoring Programs for Static Analysis via Program Transformation"}, {"paperId": "13931f5f95d25170090e8de15dcd71fe7f37c716", "title": "Code-Level Model Checking in the Software Development Workflow"}, {"paperId": "4e972b987c0ae4ac98d6f078fa59e99804742a44", "title": "One Size Does Not Fit All: A Grounded Theory and Online Survey Study of Developer Preferences for Security Warning Types"}, {"paperId": "5c4a0ade7077fae773d9f71d48a161b1d9f08de1", "title": "Heaps'n Leaks: How Heap Snapshots Improve Android Taint Analysis"}, {"paperId": "dbf891c8314e5bdf271c93b8136bcd16b1e055e8", "title": "Why Do Software Developers Use Static Analysis Tools? A User-Centered Study of Developer Needs and Motivations"}, {"paperId": "f7598c9401140e07ab531e4b42c9e54dc96d24e6", "title": "MetaVal: Witness Validation via Verification"}, {"paperId": "1b9a671c0f9897f954ca7808320628a2342b0007", "title": "Explaining Static Analysis With Rule Graphs"}, {"paperId": "f3f85b718e930953d709a96c78ba313d67d5358c", "title": "Listen to Developers! A Participatory Design Study on Security Warnings for Cryptographic APIs"}, {"paperId": "bf1d9d596a0a13aa19f3ed7118186b7cfbc7f490", "title": "What Norwegian Developers Want and Need From Security-Directed Program Analysis Tools: A Survey"}, {"paperId": "ec0dc63bf55d7c638a0f06bf8b734ef1062c0a9d", "title": "Investigating Controller Evolution and Divergence through Mining and Mutation*"}, {"paperId": "ae219ae071fb77bdbd252437a4684816fbea2b36", "title": "One \u03bb at a Time: What Do We Know About Presenting Human-friendly Output from Program Analysis Tools?"}, {"paperId": "d053ab8424a9b8c6d088f5cdbd5417259e0c8060", "title": "Understanding Mobile-Specific Code Smells"}, {"paperId": "7ab6d93b47b25c700cc0f6fcd7f29ff7c8eb6c6f", "title": "A longitudinal study of static analysis warning evolution and the effects of PMD on software quality in Apache open source projects"}, {"paperId": "ead28bfb25c6412887967bba4f5af358d9b0fe33", "title": "Reducing Static Analysis Alarms Based on Non-impacting Control Dependencies"}, {"paperId": "11081a6af887f6084a0bebc18e90c33aeabcd41e", "title": "An empirical study of security warnings from static application security testing tools"}, {"paperId": "ff90624645dfbcf578d6807d62f79d372664a744", "title": "Security by Design in Software Engineering"}, {"paperId": "ac115de939f1aefa5868381c16b89be998faa8d7", "title": "Interventions for long\u2010term software security: Creating a lightweight program of assurance techniques for developers"}, {"paperId": "aab42c2e78e7fb59b5ed48181c29f646e56de462", "title": "Explaining Static Analysis - A Perspective"}, {"paperId": "3af02fdc025a7d30f0a7aba6614b53ee0fdca33f", "title": "A Qualitative Analysis of Android Taint-Analysis Results"}, {"paperId": "32b9708559bddb2e5b0672198a4d164d1672f29c", "title": "A Machine Learning Based Approach to Identify SQL Injection Vulnerabilities"}, {"paperId": "41e9db2a9c2d96fbeedccef95700048726efddb8", "title": "How Do Developers Act on Static Analysis Alerts? An Empirical Study of Coverity Usage"}, {"paperId": "fb238ab286d98b41076c21ccd6ed47463ce6bd24", "title": "How Developers Diagnose Potential Security Vulnerabilities with a Static Analysis Tool"}, {"paperId": "13793c29ebb74f7f42cdc498963fb501d24a3ad5", "title": "Root causing flaky tests in a large-scale industrial setting"}, {"paperId": "9e2bf9055027e6592afd4fdfec024009579baaa0", "title": "Androlic: an extensible flow, context, object, field, and path-sensitive static analysis framework for Android"}, {"paperId": "f1650df82e2d8f5b6fae4d42c39f7eeff84eb15d", "title": "Equid - A Static Analysis Framework for Industrial Applications"}, {"paperId": "0e6d783aa5e3848c25db5710550735eba53c0882", "title": "Scientific Developers v/s Static Analysis Tools: Vision and Position Paper"}, {"paperId": "6030ca3e012b9dac1232eaadc932fc9bc202f0b4", "title": "On the Survival of Android Code Smells in the Wild"}, {"paperId": "9cf4bdbf8efa5c16358e006be01dda759e5a8c94", "title": "Fostering good coding practices through individual feedback and gamification: an industrial case study"}, {"paperId": "45503d682864f7cf9f8ebd9dc13e0ec7b7b51e72", "title": "ConfigCrusher: towards white-box performance analysis for configurable systems"}, {"paperId": "a1520a1bbb24ae009804b3ac3114f65d80c861a4", "title": "ConfigCrusher: White-Box Performance Analysis for Configurable Systems"}, {"paperId": "a6eb1a84e2000b7f4184a5d9e1b6bee30b3befb6", "title": "Mining Rule Violations in JavaScript Code Snippets"}, {"paperId": "3cf2693dd6a2fd27c65e793e3d8404d5efb9d3fd", "title": "A Survey on Developer-Centred Security"}, {"paperId": "c4a9c1924bdd2144a1713ae9edb81ce7460b9984", "title": "Evaluation of Open-Source IDE Plugins for Detecting Security Vulnerabilities"}, {"paperId": "90caf9e61802b2b0d80fe59df3915254263deb3d", "title": "Perceived Relevance of Automatic Code Inspection in End-User Development: A Study on VBA"}, {"paperId": "37c7e0630ced71dfde8fb27a4bb2b6e52cdd2cd4", "title": "A variable-level automated defect identification model based on machine learning"}, {"paperId": "bad5015c6183d7f74d91ea54f3580aaadc10fa9e", "title": "Getafix: learning to fix bugs automatically"}, {"paperId": "6f6a28a3115e147e443a545fd8f75cf7a3babf1b", "title": "Identifying Barriers to Adoption for Rust through Online Discourse"}, {"paperId": "191c55d357328897a2a89259152b1a6b0103cd75", "title": "Differentially testing soundness and precision of program analyzers"}, {"paperId": "3063c996abad3aa7a23620536b3ecbd443e00a57", "title": "Model-based security analysis of feature-oriented software product lines"}, {"paperId": "b9abaa3f0f7484f7d146c24a9038290d655a2d0f", "title": "A Proposal towards the Design of an Architecture for Evolutionary Visual Software Analytics"}, {"paperId": "561197e0eefceaace66e7b74553e1ac8582cddc1", "title": "Missing Clean Code Acceptance and Support in Practice - An Empirical Study"}, {"paperId": "fc5a12cc8b73f8ddbb505e5096fdb2afb1a7869e", "title": "Gamifying static analysis"}, {"paperId": "0dfef27d777569d92965c2dfa2b3c6f1b355ca2e", "title": "How should compilers explain problems to developers?"}, {"paperId": "87354a5f0f7eff8c5d03fe391c290162e1306df8", "title": "Supporting Effective Strategies for Resolving Vulnerabilities Reported by Static Analysis Tools"}, {"paperId": "86a3d28f1bc8c7d0b59b15eb31ca76e55bee9710", "title": "On Adopting Linters to Deal with Performance Concerns in Android Apps"}, {"paperId": "e08d960f786395be203ba58faede55a82288a2c2", "title": "Lightweight Multilingual Software Analysis"}, {"paperId": "e48bba8d1c73f44a55a543d2d3aeedf36c18c583", "title": "Automatically assessing vulnerabilities discovered by compositional analysis"}, {"paperId": "6f38f6d52f83e599058a9d6b862e68446f5092c6", "title": "Incremental overload resolution in object-oriented programming languages"}, {"paperId": "8b42116bef56703636b8377dfc99c4b3882daa16", "title": "Repositioning of static analysis alarms"}, {"paperId": "48e3e4152b24478b3e54bda4728079a109acf50e", "title": "Tests from Witnesses - Execution-Based Validation of Verification Results"}, {"paperId": "87c1cb1764d257d2060ed316cb86e5641ed6afea", "title": "Static Automated Program Repair for Heap Properties"}, {"paperId": "5a349662a9a8d6fba445a90e8801b182e09e3312", "title": "JIT Feedback - What Experienced Developers Like about Static Analysis"}, {"paperId": "6a2da9934bf05ba165d7ab9e9fb1d9b2a645c603", "title": "CFar: A Tool to Increase Communication, Productivity, and Review Quality in Collaborative Code Reviews"}, {"paperId": "0a23085191fa8bbdf9917152971d6132beddc4e0", "title": "Function call interception techniques"}, {"paperId": "cd675b585b34406fd4c550a7048fc0e59a8e5b63", "title": "Debugging Static Analysis"}, {"paperId": "1dcdbf7bf52c600d93e1b5119ff92897c8674af9", "title": "Counterexample-Guided Bit-Precision Selection"}, {"paperId": "f8003ece85d865bdf1b6fb5b9d7cc0efd90a4a13", "title": "Delta-Bench: Differential Benchmark for Static Analysis Security Testing Tools"}, {"paperId": "1d308c678bf3b66ca0e16f2880e63c2329ee882a", "title": "Why and how JavaScript developers use linters"}, {"paperId": "6fa9aff46e9ea1b9fdcde66fd24528839a57c2d3", "title": "OASIS: prioritizing static analysis warnings for Android apps based on app user reviews"}, {"paperId": "db34ab7bc9d5bb427794ba26bd08c3b99189fffa", "title": "On Novices' Interaction with Compiler Error Messages: A Human Factors Approach"}, {"paperId": "3b013205b07c88cde2dc78853727b84bca479f5e", "title": "More accurate recommendations for method-level changes"}, {"paperId": "df78c3bccff6b4456cefd86a8da2c4a1ce48b005", "title": "DAReing to reduce the annotation overheads of verified programs"}, {"paperId": "45fd73a3ea81bf1d5c614e2f68e8fb3d56fda5e0", "title": "Do Developers Read Compiler Error Messages?"}, {"paperId": "39de9e8f51a926fa7e8390e6efb685b1616a405a", "title": "Cheetah: Just-in-Time Taint Analysis for Android Apps"}, {"paperId": "9cb7969e3f739bb2da292be64ee1a6ef51858366", "title": "Just-in-time static analysis"}, {"paperId": "4edbf94314bbc4fee6822810c73efe23db07ad79", "title": "SkipAnalyzer: An Embodied Agent for Code Analysis with Large Language Models"}, {"paperId": "14f152c78e7656c8a73dfe832ba4dc689b5d9d28", "title": "Supporting Developers in Vulnerability Detection during Code Review: Mental Attitude and Security Checklists"}, {"paperId": "9a07224bd074371b5defc937f12e5cfa9309919f", "title": "Arbiter: Bridging the Static and Dynamic Divide in Vulnerability Discovery on Binary Programs"}, {"paperId": "b9ace0f79b5389b3dd03e296f21536e970d7b4d8", "title": "Making Bounded Model Checking Interprocedural in (Static Analysis) Style"}, {"paperId": "07e3e81975b87a8a9f41534e06199b727f23d5fe", "title": "Automatically Tailoring Abstract Interpretation to Custom Usage Scenarios"}, {"paperId": "19305473ef559afa6cdc25283ff7d9273e5f820a", "title": "Benefits and Drawbacks of Adopting a Secure Programming Language: Rust as a Case Study"}, {"paperId": "1f7e98c6cbb1fd4613d19ae5ad2ad3888542b281", "title": "Linear Promises: Towards Safer Concurrent Programming (Artifact)"}, {"paperId": "7bec1f47de6b324b80174387cdee0a6055e574bd", "title": "Automatic Annotation of Confidential Data in Java Code"}, {"paperId": "b312799b9bbffbdef41be3c8a4d8da9f2a02aaf8", "title": "A Qualitative Usability Evaluation of the Clang Static Analyzer and libFuzzer with CS Students and CTF Players"}, {"paperId": "72be401d3c45606cc4ff8222436621d13149d808", "title": "Evaluating and comparing memory error vulnerability detectors"}, {"paperId": "806d821411fde3c4ece0d9497c246adc028db1c2", "title": "Why Can't Johnny Fix Vulnerabilities: A Usability Evaluation of Static Analysis Tools for Security"}, {"paperId": "d7db8cbca60ce327b77f1e78d25fb9e6c2ed88b4", "title": "SecurityGuard: An Automated Secure Coding Framework"}, {"paperId": "81d65177559ca4e02774ee5fb8b1255c9c88f373", "title": "User-centered tool design for data-flow analysis"}, {"paperId": "792aac82fcac48df9a7c14e6a394c34b785e9699", "title": "Automated Program Transformation for Improving Software Quality"}, {"paperId": "aa9a146c6c3f97b775c33c5faebed31b0cbf93d6", "title": "Implementation Analysis of Open-Source Static Analysis Tools for Detecting Security Vulnerabilities"}, {"paperId": "92c39296554e9d0380e2cbc40fbd0acc1dd51220", "title": "MagpieBridge: A General Approach to Integrating Static Analyses into IDEs and Editors (Tool Insights Paper)"}, {"paperId": "18eeb8a8396bbc49bc9e004b479dfee3a0c2ad75", "title": "Digital Commons @ ACU"}, {"paperId": "807e474e62be6a76fbf7771a9f7b5be6d86c580d", "title": "9th Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU 2018)"}, {"paperId": "a8c46db9affcc35332d575a9898090409c8f5ead", "title": "Comparative study on static code analysis tools for C/C++"}, {"paperId": "719ec44f6d842cce3a470152d6f5a85117dc94e4", "title": "CodeStats : Big Stats for Big Code"}, {"paperId": "118c18faf2fadb15cf6585cc44e8525feec2353c", "title": "Lembit Valgma Usable and Sound Static Analysis through its Integration into Automated and Interactive Workflows"}, {"paperId": "782c8ee99608e73fa0e3ed2b6fceff563afee33a", "title": "Controller Evolution and Divergence: A Software Perspective"}, {"paperId": "5dd25b1150515fcf255c5e3d2453314ee833a891", "title": "Abstract Detection of Rename Local Variable Refactoring Instances in Commit History"}, {"paperId": "1371f5a40a9a08e842389a6aacd17f143d0b3833", "title": "Delft University of Technology Why and How JavaScript Developers Use Linters"}, {"paperId": "25dc8f7cdf33c3a07bd38dac3cc453b093256aa5", "title": "User-Centric Static Analysis"}, {"paperId": "508f809d63d57e8d7b6477ec2b210dd752bb9025", "title": "CAREER: Quality Automation: Push-Button Automatic Program Repair"}, {"paperId": "950c3454f98f9aaa599ae0e5aff714da90d15c05", "title": "CodeCity: 3-dimensional visualization of software security facets"}, {"paperId": "fd4da16813fe2bad5da669050e9fa53a8eb2cc07", "title": "\u201cThese results must be false\u201d: A usability evaluation of constant-time analysis tools"}]}
