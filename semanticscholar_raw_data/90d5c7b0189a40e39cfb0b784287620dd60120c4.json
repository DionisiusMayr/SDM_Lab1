{"paperId": "90d5c7b0189a40e39cfb0b784287620dd60120c4", "publicationVenue": {"id": "cb87b91e-7788-4e4f-bed1-6ca64f4102de", "name": "ACM Transactions on Reconfigurable Technology and Systems", "type": "journal", "alternate_names": ["ACM Trans Reconfigurable Technol Syst"], "issn": "1936-7406", "url": "https://trets.cse.sc.edu/index.html", "alternate_urls": ["http://portal.acm.org/browse_dl.cfm?coll=portal&dl=ACM&idx=J1151&linked=1&part=transaction", "http://portal.acm.org/trets/"]}, "title": "GraVF-M", "abstract": "Due to the irregular nature of connections in most graph datasets, partitioning graph analysis algorithms across multiple computational nodes that do not share a common memory inevitably leads to large amounts of interconnect traffic. Previous research has shown that FPGAs can outcompete software-based graph processing in shared memory contexts, but it remains an open question if this advantage can be maintained in distributed systems. In this work, we present GraVF-M, a framework designed to ease the implementation of FPGA-based graph processing accelerators for multi-FPGA platforms with distributed memory. Based on a lightweight description of the algorithm kernel, the framework automatically generates optimized RTL code for the whole multi-FPGA design. We exploit an aspect of the programming model to present a familiar message-passing paradigm to the user, while under the hood implementing a more efficient architecture that can reduce the necessary inter-FPGA network traffic by a factor equal to the average degree of the input graph. A performance model based on a theoretical analysis of the factors influencing performance serves to evaluate the efficiency of our implementation. With a throughput of up to 5.8GTEPS (billions of traversed edges per second) on a 4-FPGA system, the designs generated by GraVF-M compare favorably to state-of-the-art frameworks from the literature and reach 94% of the projected performance limit of the system.", "venue": "ACM Transactions on Reconfigurable Technology and Systems", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-10-14", "journal": {"name": "ACM Transactions on Reconfigurable Technology and Systems (TRETS)", "pages": "1 - 28", "volume": "12"}, "authors": [{"authorId": "145008609", "name": "Nina Engelhardt"}, {"authorId": "1710259", "name": "Hayden Kwok-Hay So"}], "citations": [{"paperId": "d5941acfaa0e49260aad12ad81f5aecbec3a7883", "title": "Distributed large-scale graph processing on FPGAs"}, {"paperId": "67113bdbe3ad178511a4dd576866b6e088bcf842", "title": "Rethinking Design Paradigm of Graph Processing System with a CXL-like Memory Semantic Fabric"}, {"paperId": "2ad2b1ccb438fb6e3eeabab3d283e517b8f4f01e", "title": "GraFF: A Multi-FPGA System with Memory Semantic Fabric for Scalable Graph Processing"}, {"paperId": "75aa3317a7be7d66ab2562924565c9aeab27509d", "title": "Graph_CC: Accelerator of Connected Component Search in Graph Computing"}, {"paperId": "f572b8eba5c598c5c0edf13326ed590c42b671be", "title": "ThunderGP: Resource-Efficient Graph Processing Framework on FPGAs with HLS"}, {"paperId": "9d648b9e77a1c7e7a12b88c7c382c28b6ad650ce", "title": "FDGLib: A Communication Library for Efficient Large-Scale Graph Processing in FPGA-Accelerated Data Centers"}]}
