{"paperId": "1a725e6ebbcc4548c3f1ce16dc45157bb5034daa", "publicationVenue": {"id": "911e7332-8ea8-4e9d-bc20-5572a2523f92", "name": "International Middleware Conference", "type": "conference", "alternate_names": ["Middleware", "ACM/IFIP/USENIX int conf Middlew", "ACM/IFIP/USENIX international conference on Middleware", "Int Middlew Conf"], "url": "https://dl.acm.org/conference/middleware/proceedings"}, "title": "OS-Augmented Oversubscription of Opportunistic Memory with a User-Assisted OOM Killer", "abstract": "Exploiting opportunistic memory by oversubscription is an appealing approach to improving cluster utilization and throughput. In this paper, we find the efficacy of memory oversubscription depends on whether or not the oversubscribed tasks can be killed by an OutOf Memory (OOM) killer in a timely manner to avoid significant memory thrashing upon memory pressure. However, current approaches in modern cluster schedulers are actually unable to unleash the power of opportunistic memory because their user space OOM killers are unable to timely deliver a task killing signal to terminate the oversubscribed tasks. Our experiments observe that a user space OOM killer fails to do that because of lacking the memory pressure knowledge from OS while the kernel space Linux OOM killer is too conservative to relieve memory pressure. In this paper, we design a user-assisted OOM killer (namely UA killer) in kernel space, an OS augmentation for accurate thrashing detection and agile task killing. To identify a thrashing task, UA killer features a novel mechanism, constraint thrashing. Upon UA killer, we develop Charon, a cluster scheduler for oversubscription of opportunistic memory in an on-demand manner. We implement Charon upon Mercury, a state-of-the-art opportunistic cluster scheduler. Extensive experiments with a Google trace in a 26-node cluster show that Charon can: (1) achieve agile task killing, (2) improve the best-effort job throughput by 3.5X over Mercury while prioritizing the production jobs, and (3) improve the 90th job completion time of production jobs over Kubernetes opportunistic scheduler by 62%.", "venue": "International Middleware Conference", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2019-12-09", "journal": {"name": "Proceedings of the 20th International Middleware Conference"}, "authors": [{"authorId": "2283009", "name": "Wei Chen"}, {"authorId": "40377061", "name": "Aidi Pi"}, {"authorId": "1891284", "name": "Shaoqi Wang"}, {"authorId": "46224002", "name": "Xiaobo Zhou"}], "citations": [{"paperId": "372eb39ccf060f3073ce1c0834ea6776b1450c74", "title": "OOM-Guard: Towards Improving the Ergonomics of Rust OOM Handling via a Reservation-Based Approach"}, {"paperId": "ad72d157a1e95a8d453cc1e57e62d481338c2653", "title": "Let It Go: Relieving Garbage Collection Pain for Latency Critical Applications in Golang"}, {"paperId": "3604702a4ecc09c6c019aad4ffe7ac065d50656e", "title": "Improving Concurrent GC for Latency Critical Services in Multi-tenant Systems"}, {"paperId": "ad7c00029954aca73e4d243c616b99100a12994b", "title": "Workload consolidation in alibaba clusters: the good, the bad, and the ugly"}, {"paperId": "3e46e3f8ff04807067835d633e8007beee23dabf", "title": "Holmes: SMT Interference Diagnosis and CPU Scheduling for Job Co-location"}, {"paperId": "d29e8643affd5d3ee99a8cdd1292bed7ffd38804", "title": "Memory at your service: fast memory allocation for latency-critical services"}, {"paperId": "f3fb6b8e317a5d98169bd001e5803d0bb52460d6", "title": "Preemptive and Low Latency Datacenter Scheduling via Lightweight Containers"}]}
