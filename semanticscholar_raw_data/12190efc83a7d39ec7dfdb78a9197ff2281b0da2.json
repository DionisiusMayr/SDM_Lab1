{"paperId": "12190efc83a7d39ec7dfdb78a9197ff2281b0da2", "publicationVenue": null, "title": "TERMINATOR: better automated UI test case prioritization", "abstract": "Automated UI testing is an important component of the continuous integration process of software development. A modern web-based UI is an amalgam of reports from dozens of microservices written by multiple teams. Queries on a page that opens up another will fail if any of that page's microservices fails. As a result, the overall cost for automated UI testing is high since the UI elements cannot be tested in isolation. For example, the entire automated UI testing suite at LexisNexis takes around 30 hours (3-5 hours on the cloud) to execute, which slows down the continuous integration process. To mitigate this problem and give developers faster feedback on their code, test case prioritization techniques are used to reorder the automated UI test cases so that more failures can be detected earlier. Given that much of the automated UI testing is \"black box\" in nature, very little information (only the test case descriptions and testing results) can be utilized to prioritize these automated UI test cases. Hence, this paper evaluates 17 \"black box\" test case prioritization approaches that do not rely on source code information. Among these, we propose a novel TCP approach, that dynamically re-prioritizes the test cases when new failures are detected, by applying and adapting a state of the art framework from the total recall problem. Experimental results on LexisNexis automated UI testing data show that our new approach (which we call TERMINATOR), outperformed prior state of the art approaches in terms of failure detection rates with negligible CPU overhead.", "venue": "ESEC/SIGSOFT FSE", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2019-05-16", "journal": {"name": "Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering"}, "authors": [{"authorId": "1491247841", "name": "Zhe Yu"}, {"authorId": "119098900", "name": "F. M. Fahid"}, {"authorId": "1703872", "name": "T. Menzies"}, {"authorId": "1722304", "name": "G. Rothermel"}, {"authorId": "2064970735", "name": "Kyle Patrick"}, {"authorId": "120705653", "name": "Snehit Cherian"}], "citations": [{"paperId": "a513758445cca803ed7edd8dc169f1cd041483e2", "title": "An exploratory study of history-based test case prioritization techniques on different datasets"}, {"paperId": "6b4aba6e6d4f86d6397198c61c70a5bc2f4f29c5", "title": "Dynamic Test Case Prioritization in Industrial Test Result Datasets"}, {"paperId": "479516248ad9df64fa480d38242f0db665805367", "title": "Black-Box Test Case Prioritization Using Log Analysis and Test Case Diversity"}, {"paperId": "73a349f072923cfc6ca96af0f2dd703bc26b51ee", "title": "Do Automatic Test Generation Tools Generate Flaky Tests?"}, {"paperId": "a2eb419def74db3ed16971928fe508eb3e0263bf", "title": "LEAP: Efficient and Automated Test Method for NLP Software"}, {"paperId": "180253d4872bb951dcd23dd6c662ba0dd6d840bf", "title": "On the Benefits of Semi-Supervised Test Case Generation for Simulation Models"}, {"paperId": "2763e1e28d2b8f57bc916d8f2858c4f13ff9cde8", "title": "Severity-Aware Prioritization of System-Level Regression Tests in Automotive Software"}, {"paperId": "cc5fc59a9a5ec99d6d767908d5535af6b0654437", "title": "Less, but Stronger: On the Value of Strong Heuristics in Semi-supervised Learning for Software Analytics"}, {"paperId": "47789ae4698b57aa0d7c7a9406d56fc198cbcf4b", "title": "State of Practical Applicability of Regression Testing Research: A Live Systematic Literature Review"}, {"paperId": "44db4e58454804d4991f4b7e1787b8053142a53b", "title": "Value-based cost-cognizant test case prioritization for regression testing"}, {"paperId": "528a9b11ab2ebf859150dd235dd9bb1d62825a42", "title": "Machine Learning Regression Techniques for Test Case Prioritization in Continuous Integration Environment"}, {"paperId": "acba0439b0e65cbfd7f33b32ecd90e5bffd4d60b", "title": "Systematic Literature Review on Test Case Selection and Prioritization: A Tertiary Study"}, {"paperId": "18537166bc2c67b564cf4ecda53dd126bf5c9c19", "title": "Fair-SSL: Building fair ML Software with less data"}, {"paperId": "9e20b55daecc41b6fc170de9bdc19847ca6d0b0e", "title": "Access Control Tree for Testing and Learning"}, {"paperId": "1968dfd3586a9ab763bc19c891d30743c49f4110", "title": "UI Test case prioritization on an industrial setting: A search for the best criteria"}, {"paperId": "1b00a175d8f0c5cc39332d18615860fa20850854", "title": "Hansie: Hybrid and consensus regression test prioritization"}, {"paperId": "e50207e5ddb04a0f152d72a7be03766a5eee6788", "title": "Faster SAT Solving for Software with Repeated Structures (with Case Studies on Software Test Suite Minimization)"}, {"paperId": "06cdf069c79b5325cc07c6899559d9a7b75e7009", "title": "How Different is Test Case Prioritization for Open and Closed Source Projects?"}, {"paperId": "9437a77b0ea18961ade324f50d3e65738b2eab0c", "title": "The AI Effect: Working at the Intersection of AI and SE"}, {"paperId": "c5ba064a0f1cc44e68148797ec4252bed1abea93", "title": "Test Case Prioritization in Continuous Integration environments: A systematic mapping study"}, {"paperId": "7f48ce95a9e60c3dbecddbc74aaf25880a6f1529", "title": "Human-like UI Automation through Automatic Exploration"}, {"paperId": "462dfde80c8bcef7e971d4db06a236c761f47dc3", "title": "Understanding static code warnings: An incremental AI approach"}, {"paperId": "7326a55ac05bf37861078de7e7e6444e78164e1e", "title": "An Expert System for Learning Software Engineering Knowledge (with Case Studies in Understanding Static Code Warning)"}, {"paperId": "e3ebeb2f1dc068a162ad7856488a185e3d2f40d6", "title": "Assessing expert system-assisted literature reviews with a case study"}, {"paperId": "245b501c6594915141485eba55ae00c3cf010c5b", "title": "Searching for Better Test Case Prioritization Schemes: a Case Study of AI-assisted Systematic Literature Review"}, {"paperId": "706d014fb7504e473b4dc21b2262d050e5e6c880", "title": "Searching for Test Case Prioritization Schemes: An Expert System-Assisted Literature Review."}, {"paperId": "459d879d74bbcd9704b9e98340cb3b44f717ffb5", "title": "Building Very Small Test Suites (with Snap)."}, {"paperId": "c0bb44e3292a0fb1a1ebdffb38a2828808e7c65c", "title": "Better Data Labelling With EMBLEM (and how that Impacts Defect Prediction)"}, {"paperId": "bde5ea6435e6c100b4aa3682d641c24f31b3902d", "title": "On the Benefits of Semi-Supervised Test Case Generation for Cyber-Physical Systems"}, {"paperId": "eea24a35352d7a80305f189064593dbe76708a40", "title": "Trade-Off Exploration for Acceleration of Continuous Integration"}, {"paperId": "8a435e465720be9f59ee45d4ef72222497403926", "title": "A Systematic Literature Review on Regression Test Case Prioritization"}, {"paperId": "60a33987ae9b83e7524ec1a0a61fbe76016c2505", "title": "Can We Achieve Fairness Using Semi-Supervised Learning?"}, {"paperId": "974513322dabecff0f91b7a824c23044f6d1159c", "title": "On the Value of Backdoors for So \ufffd ware Engineering: a Case Study with Test Suite Generation"}, {"paperId": "39d0503fc52ead955c9f7ca7ce94ed9288ddd59c", "title": "AUTOMATION OF TEST CASE PRIORITIZATION: A SYSTEMATIC LITERATURE REVIEW AND CURRENT TRENDS"}]}
