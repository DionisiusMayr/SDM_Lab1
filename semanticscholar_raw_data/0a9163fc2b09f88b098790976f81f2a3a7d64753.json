{"paperId": "0a9163fc2b09f88b098790976f81f2a3a7d64753", "publicationVenue": null, "title": "Distributed SPARQL Query Processing: a Case Study with Apache Spark", "abstract": "This chapter focuses on to the problem of evaluating SPARQL queries over large resource description framework (RDF) datasets. RDF data graphs can be produced without a predefined schema and SPARQL allows querying both schema and instance information simultaneously. The chapter presents the challenges and solutions for efficiently processing SPARQL queries and in particular basic graph pattern (BGP) expressions. The main challenge in processing complex graph pattern queries is to optimize the join operations which dominate the cost of all other operators. The chapter introduces the specific solution using the MapReduce framework for processing SPARQL graph patterns. It describes the use of Apache Spark and explains the importance of the physical data layers for the query performance. Spark SQL translates a SQL query into an algebraic expression composed of DF operators such as selection, projection and join.", "venue": "NoSQL Data Models", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": null, "publicationDate": "2018-08-06", "journal": {"name": "NoSQL Data Models"}, "authors": [{"authorId": "1747227", "name": "B. Amann"}, {"authorId": "2141773", "name": "Olivier Cur\u00e9"}, {"authorId": "3045686", "name": "Hubert Naacke"}], "citations": [{"paperId": "debf0875ba3aef420e3c25e644a5436ebc077453", "title": "Adaptive Low-level Storage of Very Large Knowledge Graphs"}]}
