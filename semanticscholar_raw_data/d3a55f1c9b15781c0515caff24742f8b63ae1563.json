{"paperId": "d3a55f1c9b15781c0515caff24742f8b63ae1563", "publicationVenue": {"id": "57f970eb-366a-4bfa-aa06-2ff70d834806", "name": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing", "type": "conference", "alternate_names": ["Clust Comput Grid", "CCGRID", "IEEE/ACM Int Symp Clust Cloud Grid Comput", "IEEE/ACM International Symposium Cluster, Cloud and Grid Computing", "Cluster Computing and the Grid", "IEEE/ACM Int Symp Clust Cloud Internet Comput"], "url": "http://www.buyya.com/ccgrid/"}, "title": "Accelerating Spatial Autocorrelation Computation with Parallelization, Vectorization and Memory Access Optimization: With a focus on rapid recalculation of COVID related spatial statistics for faster geospatial analysis and response", "abstract": "Geographic information systems deal with spatial data and its analysis. Spatial data contains many attributes with location information. Spatial autocorrelation is a fundamental concept in spatial analysis. It suggests that similar objects tend to cluster in geographic space. Hotspots, an example of autocorrelation, are statistically significant clusters of spatial data. Other autocorrelation measures like Moran's I are used to quantify spatial dependence. Large scale spatial autocorrelation methods are compute-intensive. Fast methods for hotspots detection and analysis are crucial in recent times of COVID-19 pandemic. Therefore, we have developed parallelization methods on heterogeneous CPU and GPU environments. To the best of our knowledge, this is the first GPU and SIMD-based design and implementation of autocorrelation kernels. Earlier methods in literature intro-duced cluster-based and Map Reduce-based parallelization. We have used Intrinsics to exploit SIMD parallelism on x86 CPU architecture. We have used MPI Graph Topology to minimize inter- process communication. Our benchmarks for CPU/GPU optimizations gain upto 750X relative speedup with a 8 GPU setup when compared to baseline sequential implementation. Compared to the best implementation using OpenMP + R-tree data structure on a single compute node, our accelerated hotspots benchmark gains a 25X speedup. For real world US counties and COVID data evolution calculated over 500 days, we gain upto 110X speedup reducing time from 33 minutes to 0.3 minutes.", "venue": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-05-01", "journal": {"name": "2022 22nd IEEE International Symposium on Cluster, Cloud and Internet Computing (CCGrid)", "pages": "544-554"}, "authors": [{"authorId": "51170623", "name": "Anmol Paudel"}, {"authorId": "2871863", "name": "S. Puri"}], "citations": [{"paperId": "2d1018d09152cb23c4e9917218ef7b05997fed8d", "title": "Fine-grained dynamic load balancing in spatial join by work stealing on distributed memory"}]}
