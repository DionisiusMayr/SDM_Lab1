{"paperId": "319bbe81a92bd0d7fffd1435e891378c2e9609b0", "publicationVenue": null, "title": "NeuDep: neural binary memory dependence analysis", "abstract": "Determining whether multiple instructions can access the same memory location is a critical task in binary analysis. It is challenging as statically computing precise alias information is undecidable in theory. The problem aggravates at the binary level due to the presence of compiler optimizations and the absence of symbols and types. Existing approaches either produce significant spurious dependencies due to conservative analysis or scale poorly to complex binaries. We present a new machine-learning-based approach to predict memory dependencies by exploiting the model's learned knowledge about how binary programs execute. Our approach features (i) a self-supervised procedure that pretrains a neural net to reason over binary code and its dynamic value flows through memory addresses, followed by (ii) supervised finetuning to infer the memory dependencies statically. To facilitate efficient learning, we develop dedicated neural architectures to encode the heterogeneous inputs (i.e., code, data values, and memory addresses from traces) with specific modules and fuse them with a composition learning strategy. We implement our approach in NeuDep and evaluate it on 41 popular software projects compiled by 2 compilers, 4 optimizations, and 4 obfuscation passes. We demonstrate that NeuDep is more precise (1.5x) and faster (3.5x) than the current state-of-the-art. Extensive probing studies on security-critical reverse engineering tasks suggest that NeuDep understands memory access patterns, learns function signatures, and is able to match indirect calls. All these tasks either assist or benefit from inferring memory dependencies. Notably, NeuDep also outperforms the current state-of-the-art on these tasks.", "venue": "ESEC/SIGSOFT FSE", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2022-10-04", "journal": {"name": "Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering"}, "authors": [{"authorId": "40428350", "name": "Kexin Pei"}, {"authorId": "38468935", "name": "Dongdong She"}, {"authorId": "2108609522", "name": "Michael Wang"}, {"authorId": "2187059392", "name": "Scott Geng"}, {"authorId": "2055832419", "name": "Zhou Xuan"}, {"authorId": "1974088", "name": "Yaniv David"}, {"authorId": "152211006", "name": "Junfeng Yang"}, {"authorId": "39400201", "name": "S. Jana"}, {"authorId": "31631000", "name": "Baishakhi Ray"}], "citations": [{"paperId": "22b261bf190b630c53e57f300a379fb834c69b22", "title": "Binary Code Summarization: Benchmarking ChatGPT/GPT-4 and Other Large Language Models"}, {"paperId": "ea168dda6c8f7450b3d0f7feeed5c0619ce8813e", "title": "TRACED: Execution-aware Pre-training for Source Code"}]}
