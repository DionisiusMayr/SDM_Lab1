{"paperId": "681523b07c860a8c0f294a364ae885a89042fe72", "publicationVenue": {"id": "2ca819c7-b5af-4cc5-af81-267836fbccaa", "name": "IEEE Working Conference on Source Code Analysis and Manipulation", "type": "conference", "alternate_names": ["IEEE Work Conf Source Code Anal Manip", "Source Code Analysis and Manipulation", "SCAM", "Source Code Anal Manip"]}, "title": "Does code review really remove coding convention violations?", "abstract": "Many software developers perceive technical debt as the biggest problems in their projects. They also perceive code reviews as the most important process to increase code quality. As inconsistent coding style is one source of technical debt, it is no surprise that coding convention violations can lead to patch rejection during code review. However, as most research has focused on developer\u2019s perception, it is not clear whether code reviews actually prevent the introduction of coding convention violations and the corresponding technical debt.Therefore, we investigated how coding convention violations are introduced, addressed, and removed during code review by developers. To do this, we analysed 16,442 code review requests from four projects of the Eclipse community for the introduction of convention violations. Our result shows that convention violations accumulate as code size increases despite changes being reviewed. We also manually investigated 1,268 code review requests in which convention violations disappear and observed that only a minority of them have been removed because a convention violation has been flagged in a review comment. The investigation results also highlight that one can speed up the code review process by adopting tools for code convention violation detection.", "venue": "IEEE Working Conference on Source Code Analysis and Manipulation", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference", "Review"], "publicationDate": "2020-09-01", "journal": {"name": "2020 IEEE 20th International Working Conference on Source Code Analysis and Manipulation (SCAM)", "pages": "43-53"}, "authors": [{"authorId": "7883212", "name": "Donggyun Han"}, {"authorId": "3460787", "name": "Chaiyong Ragkhitwetsagul"}, {"authorId": "1824150", "name": "J. Krinke"}, {"authorId": "11009809", "name": "M. Paix\u00e3o"}, {"authorId": "2057002354", "name": "Giovanni Rosa"}], "citations": [{"paperId": "9c388a6f3499975edc4dd8938c02a5b4a65a1bf4", "title": "Deriving modernity signatures of codebases with static analysis"}, {"paperId": "96e614f3dd764ede22f32d8c7e41a3ff0d41b2ab", "title": "CodeAgent: Collaborative Agents for Software Engineering"}, {"paperId": "b13d4d943bf997d33fcc340f7a943e16ff563d1f", "title": "EvaCRC: Evaluating Code Review Comments"}, {"paperId": "e293b6588b6f154cf7f766ce7c4ff7ba6e93ad08", "title": "Quality Assurance Awareness in Open Source Software Projects on GitHub"}, {"paperId": "d393cdd97c46cda0808704640590417f1a28105b", "title": "Demystifying Code Snippets in Code Reviews: A Study of the OpenStack and Qt Communities and A Practitioner Survey"}, {"paperId": "7490c181091f88a368ba711e38a2e54bcba78c5b", "title": "Modern Code Reviews\u2014Survey of Literature and Practice"}, {"paperId": "4345101bc43bb51ba3f2372b89442a58a0787f8b", "title": "An Industrial Experience Report on Retro-Inspection"}, {"paperId": "8a7ab081a35f9f7336c60d6cf1c6a9627e8c71e1", "title": "Ethics in the mining of software repositories"}, {"paperId": "b6ba37cdf07eebde4aae7b520944b19c3f3d3ad4", "title": "There is more than one way to zen your Python"}, {"paperId": "cece237da3f94589e83a755c421e44796412e71f", "title": "Recommending Code Understandability Improvements Based on Code Reviews"}, {"paperId": "57d4526c096640528faf7a55a2ad553448ee90a3", "title": "Does Code Review Promote Conformance? A Study of OpenStack Patches"}, {"paperId": null, "title": "2020 IEEE 20th International Working Conference on Source Code Analysis and Manipulation (SCAM)"}, {"paperId": "7f100b731c58ca4c8abc68d67306a6eb6029892a", "title": "An Inconvenient Truth in Software Engineering? The Environmental Impact of Testing Open Source Java Projects"}]}
