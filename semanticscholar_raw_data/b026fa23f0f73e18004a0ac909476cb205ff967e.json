{"paperId": "b026fa23f0f73e18004a0ac909476cb205ff967e", "publicationVenue": {"id": "c6840156-ee10-4d78-8832-7f8909811576", "name": "IEEE Transactions on Knowledge and Data Engineering", "type": "journal", "alternate_names": ["IEEE Trans Knowl Data Eng"], "issn": "1041-4347", "url": "https://www.computer.org/web/tkde", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=69"]}, "title": "EGraph: Efficient Concurrent GPU-Based Dynamic Graph Processing", "abstract": "In many applications of the analysis of dynamic graph, many Timing iterative Graph Processing (TGP) jobs usually need to be generated for the processing of the corresponding snapshots of the dynamic graph to obtain the results at different points of time. For high throughput of such applications, it is expected to run the TGP jobs on the GPU concurrently. Although many GPU-based systems have been recently developed, for out-of-GPU-memory dynamic graph processing, this concurrent way suffers from significant data access overhead due to a large volume of data transfer between CPU and GPU and the interference between these concurrently running jobs, which eventually incurs low GPU utilization ratio. In this work, we observed that the TGP jobs have strong temporal and spatial similarity when they access different snapshots for their own processing as most parts of the snapshots are the same and only a few parts are changing with time. It creates ideal opportunities for efficient concurrent execution of the TGP jobs by dramatically reducing CPU-GPU graph data transfer cost. Based on this observation, we develop the first GPU-based dynamic graph processing system EGraph, which can be integrated into the existing out-of-GPU-memory static graph processing systems to enable them to efficiently support concurrent execution of TGP jobs on dynamic graphs with the help of GPU accelerators. Different from the existing approaches, we propose in EGraph an effective Loading-Processing-Switching (LPS) execution model. It is able to effectively reduce the overhead of CPU-GPU data transfer and ensures a higher GPU utilization ratio for efficient execution of the TGP jobs by fully utilizing the data access similarity between the TGP jobs. Experimental results show that the existing GPU-accelerated systems achieve performance improvements of 2.3-3.5 times after being integrated with EGraph.", "venue": "IEEE Transactions on Knowledge and Data Engineering", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-06-01", "journal": {"name": "IEEE Transactions on Knowledge and Data Engineering", "pages": "5823-5836", "volume": "35"}, "authors": [{"authorId": "72095113", "name": "Yu Zhang"}, {"authorId": "72322304", "name": "Y. Liang"}, {"authorId": "2109972322", "name": "Jin Zhao"}, {"authorId": "1727713", "name": "Fubing Mao"}, {"authorId": "144204231", "name": "Lin Gu"}, {"authorId": "144925807", "name": "Xiaofei Liao"}, {"authorId": "145914251", "name": "Hai Jin"}, {"authorId": "2109500825", "name": "Haikun Liu"}, {"authorId": "2115742082", "name": "Song Guo"}, {"authorId": "2164507903", "name": "Yangqing Zeng"}, {"authorId": "2158135421", "name": "Hang Hu"}, {"authorId": null, "name": "Chen Li"}, {"authorId": "2144177253", "name": "Ji Zhang"}, {"authorId": "2112555729", "name": "Biao Wang"}], "citations": [{"paperId": "aa67d415fe134c46369281bafe7178fb74f67221", "title": "Optimization of re-configurable multi-core processors and security based on field programmable gate arrays"}, {"paperId": "a818c337a115d9b19da6a582d6cfc55310a8805e", "title": "SaGraph: A Similarity-aware Hardware Accelerator for Temporal Graph Processing"}, {"paperId": "0bc9e829a5ea33138297ee84acad05277063ad76", "title": "Meerkat: A framework for Dynamic Graph Algorithms on GPUs"}, {"paperId": "17f3d9b84c21cfc313d5c11f9efba37605cade94", "title": "Software Systems Implementation and Domain-Specific Architectures towards Graph Analytics"}]}
