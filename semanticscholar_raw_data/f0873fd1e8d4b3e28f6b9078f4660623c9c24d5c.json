{"paperId": "f0873fd1e8d4b3e28f6b9078f4660623c9c24d5c", "publicationVenue": {"id": "764e3630-ddac-4c21-af4b-9d32ffef082e", "name": "IEEE International Conference on Data Engineering", "type": "conference", "alternate_names": ["ICDE", "Int Conf Data Eng", "IEEE Int Conf Data Eng", "International Conference on Data Engineering"], "url": "http://www.wikicfp.com/cfp/program?id=1331"}, "title": "TARDIS: Distributed Indexing Framework for Big Time Series Data", "abstract": "The massive amounts of time series data continuously generated and collected by applications warrant the need for large scale distributed time series processing systems. Indexing plays a critical role in speeding up time series similarity queries on which various analytics and applications rely. However, the state-of-the-art indexing techniques, which are iSAX-based structures, do not scale well due to the small adopted fan-out (binary) that leads to a highly deep index tree, and the expensive search cost through many internal nodes. More seriously, the iSAX character-level cardinality adopted by these indices suffers from a poor maintenance of the proximity relationships among the time series objects, which leads to severe accuracy degradation for approximate similarity queries. In this paper, we propose the TARDIS distributed indexing framework to overcome the aforementioned limitations. TARDIS introduces a novel iSAX index tree that is based on a new word-level variable cardinality. The proposed index ensures compact structure, efficient search and comparison, and good preservation of the similarity relationships. TARDIS is suitable for indexing and querying billion-scale time series datasets. TARDIS is composed of one centralized global index and local distributed indices-one per each data partition across the cluster. TARDIS uses both the global and local indices to efficiently support exact match and kNN approximate queries. The system is implemented using Apache Spark, and extensive experiments are conducted on benchmark and real-world datasets. Evaluation results demonstrate that for over one billion time series dataset (TB scale), the construction of a clustered index is about 83% faster than the existing techniques. Moreover, the average response time of exact match queries is decreased by 50%, and the accuracy of the kNN approximate queries has increased more than 10 fold (from 3% to 40%) compared to the existing techniques.", "venue": "IEEE International Conference on Data Engineering", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2019-04-01", "journal": {"name": "2019 IEEE 35th International Conference on Data Engineering (ICDE)", "pages": "1202-1213"}, "authors": [{"authorId": "2146645299", "name": "Liang Zhang"}, {"authorId": "108628436", "name": "Noura A. Alghamdi"}, {"authorId": "1695161", "name": "M. Eltabakh"}, {"authorId": "1715020", "name": "Elke A. Rundensteiner"}], "citations": [{"paperId": "87432f6ad260cd940cf8de11ce40edf4c0f36dc0", "title": "Dumpy: A Compact and Adaptive Index for Large Data Series Collections"}, {"paperId": "3e3bc986f6f1feabb6da027d80b8fd8e6137b547", "title": "Towards Efficient and Privacy-Preserving Interval Skyline Queries Over Time Series Data"}, {"paperId": "163c06d8d21331edc5aaf68dd9b25f37a58ca980", "title": "Odyssey: A Journey in the Land of Distributed Data Series Similarity Search"}, {"paperId": "319ca69f986b1e6ce766a7492c007d8487ee1090", "title": "PARROT: pattern-based correlation exploitation in big partitioned data series"}, {"paperId": "4a80f2fc25148c67a977c6ad5d1a67927012aac8", "title": "Scalable Time Series Compound Infrastructure"}, {"paperId": "1add007a5e7938524605f15fef60c073e259dea4", "title": "Scalable Analytics on Large Sequence Collections"}, {"paperId": "4389b25c1a26fe22d76ce3cf5c8c8e24b5a714a9", "title": "Hercules Against Data Series Similarity Search"}, {"paperId": "584e2caf41c84adc83c90b22888c87a1d73e1177", "title": "Matrix Profile Index Approximation for Streaming Time Series"}, {"paperId": "55cdeb96e0e06159e68b829516dec666037fd5a7", "title": "Season- and Trend-aware Symbolic Approximation for Accurate and Efficient Time Series Matching"}, {"paperId": "12938ed592b0e26263a64bdf52868b3cf16c71a6", "title": "Accurate and Efficient Time Series Matching by Season- and Trend-aware Symbolic Approximation - Extended Version Including Additional Evaluation and Proofs"}, {"paperId": "349349fee21cd4630bac61e89e1998d71e7756cb", "title": "High-Dimensional Similarity Search for Scalable Data Science"}, {"paperId": "cc6f6f87fe580cc0e26af30b1ae2b91e2f66ff08", "title": "Scalable Machine Learning on High-Dimensional Vectors: From Data Series to Deep Network Embeddings"}, {"paperId": "b03b18048e209a9b7b4a22c11c684c3d79990ea9", "title": "Big Data Series Analytics Using TARDIS and its Exploitation in Geospatial Applications"}, {"paperId": "65f837520574d2cb6c5267b97554a8f6f92bc192", "title": "ChainLink: Indexing Big Time Series Data For Long Subsequence Matching"}, {"paperId": "0673c8782cd5c6a484db6c1e1febdfc14b2d0f06", "title": "Return of the Lernaean Hydra: Experimental Evaluation of Data Series Approximate Similarity Search"}, {"paperId": "5d72bd4f2bb102111fcbca4b9877e90416fd5278", "title": "Big Sequence Management: Scaling up and Out"}, {"paperId": "25e01b9269afb9a8210da0149c0cb24ad36057d6", "title": "Matrix Pro\ufb01le Index Prediction for Streaming Time Series"}, {"paperId": "5f5151ff7a618f9c0ed236a96c760808ed259fe3", "title": "Graph-and Tree-based Indexes for High-dimensional Vector Similarity Search: Analyses, Comparisons, and Future Directions"}]}
