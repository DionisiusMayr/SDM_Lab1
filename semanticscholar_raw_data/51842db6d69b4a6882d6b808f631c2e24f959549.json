{"paperId": "51842db6d69b4a6882d6b808f631c2e24f959549", "publicationVenue": {"id": "1db2368e-5986-4b06-9137-e63c1aa4f5e1", "name": "Symposium on Computer Architecture and High Performance Computing", "type": "conference", "alternate_names": ["SBAC-PAD", "Symp Comput Archit High Perform Comput"]}, "title": "AIR: A Light-Weight Yet High-Performance Dataflow Engine based on Asynchronous Iterative Routing", "abstract": "Distributed Stream Processing Engines (DSPEs) are currently among the most emerging topics in data management, with applications ranging from real-time event monitoring to processing complex dataflow programs and big data analytics. In this paper, we describe the architecture of our AIR engine, which is designed from scratch in C++ using the Message Passing Interface (MPI), pthreads for multithreading, and is directly deployed on top of a common HPC workload manager such as SLURM. AIR implements a light-weight, dynamic sharding protocol (referred to as \"Asynchronous Iterative Routing\"), which facilitates a direct and asynchronous communication among all worker nodes and thereby completely avoids any additional communication overhead with a dedicated master node. With its unique design, AIR fills the gap between the prevalent scale-out (but Java-based) architectures like Apache Spark and Flink, on one hand, and recent scale-up (and C++ based) prototypes such as StreamBox and PiCo, on the other hand. Our experiments over various benchmark settings confirm that AIR performs as good as the best scale-up SPEs on a single-node setup, while it outperforms existing scale-out DSPEs in terms of processing latency and sustainable throughput by a factor of up to 15 in a distributed setting.", "venue": "Symposium on Computer Architecture and High Performance Computing", "year": 2020, "fieldsOfStudy": ["Computer Science", "Engineering"], "publicationTypes": ["JournalArticle"], "publicationDate": "2020-01-01", "journal": {"name": "2020 IEEE 32nd International Symposium on Computer Architecture and High Performance Computing (SBAC-PAD)", "pages": "51-58"}, "authors": [{"authorId": "148325532", "name": "V. Venugopal"}, {"authorId": "144530424", "name": "M. Theobald"}, {"authorId": "1473061629", "name": "Samira Chaychi"}, {"authorId": "2262222020", "name": "Amal Tawakuli"}], "citations": [{"paperId": "5184093602e9f774938063454a1abb081e71ab75", "title": "Analyzing C++ Stream Parallelism in Shared-Memory when Porting to Flink and Storm"}, {"paperId": "721747f4479f1fca3c080669f8d9989f3b09bb4f", "title": "A systematic mapping of performance in distributed stream processing systems"}, {"paperId": "a5fa95a83c101e28d98e80817054668f66823852", "title": "Soft real-time data processing solutions in measurement systems on example of small-scale GEM based x-ray spectrometer"}, {"paperId": "31cc133bc4e98e5ea5a487fb5bf5c677cacdbb40", "title": "TensAIR: Online Learning from Data Streams via Asynchronous Iterative Routing"}, {"paperId": "e6fbbaa6820be0424f38e6e1a322b6f49acb33eb", "title": "Targeting a light-weight and multi-channel approach for distributed stream processing"}, {"paperId": "b755ac1587d4ddbac86bf1ba6276e7db41187b4b", "title": "Convergence time analysis of Asynchronous Distributed Artificial Neural Networks"}, {"paperId": "820fab5c4ec790d6e029e6f0f94fd72336a93d7c", "title": "Effective Stream Data Processing using Asynchronous Iterative Routing Protocol"}, {"paperId": "94ca6d3a60ca2f4cdbb2bdc1f8aeeb099c9124f4", "title": "Asynchronous Stream Data Processing using a Light-Weight and High-Performance Data\ufb02ow Engine"}]}
