{"paperId": "cf99d917c97c682bf6413caf20bf0542de8e3601", "publicationVenue": {"id": "7fca7065-fa6f-490b-923e-3ffc07857f1c", "name": "IEEE Transactions on Cloud Computing", "type": "journal", "alternate_names": ["IEEE Trans Cloud Comput"], "issn": "2168-7161", "url": "https://www.computer.org/web/tcc", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6245519"]}, "title": "PISCES: Optimizing Multi-Job Application Execution in MapReduce", "abstract": "Nowadays, many MapReduce applications consist of groups of jobs with dependencies among each other, such as iterative machine learning applications and large database queries. Unfortunately, the MapReduce framework is not optimized for these multi-job applications. It does not explore the execution overlapping opportunities among jobs and can only schedule jobs independently. These issues significantly inflate the application execution time. This paper presents Pipeline Improvement Support with Critical chain Estimation Scheduling (PISCES), a critical chain optimization (a critical chain refers to a series of jobs which will make the application run longer if any one of them is delayed), to provide better support for multi-job applications. PISCES extends the existing MapReduce framework to allow scheduling for multiple jobs with dependencies by dynamically building up a job dependency DAG for current running jobs according to their input and output directories. Then using the dependency DAG, it provides an innovative mechanism to facilitate the data pipelining between the output phase (map phase in the Map-Only job or reduce phase in the Map-Reduce job) of an upstream job and the map phase of a downstream job. This offers a new execution overlapping between dependent jobs in MapReduce which effectively reduces the application runtime. Moreover, PISCES proposes a novel critical chain job scheduling model based on the accurate critical chain estimation. Experiments show that PISCES can increase the degree of system parallelism by up to 68 percent and improve the execution speed of applications by up to 52 percent.", "venue": "IEEE Transactions on Cloud Computing", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-01-01", "journal": {"name": "IEEE Transactions on Cloud Computing", "pages": "273-286", "volume": "7"}, "authors": [{"authorId": "31890417", "name": "Qi Chen"}, {"authorId": "2110071061", "name": "Jinyu Yao"}, {"authorId": "2112238358", "name": "Benchao Li"}, {"authorId": "145586928", "name": "Zhen Xiao"}], "citations": [{"paperId": "395e3624fd5165bb24add3dfcf0d7ff7e2966ccb", "title": "Comparative Study of Map Reduce Task Scheduling Optimization Techniques"}, {"paperId": "daa2171619a5a00d478798f400dcece231b1706e", "title": "A comprehensive study and review of tuning the performance on database scalability in big data analytics"}, {"paperId": "af276a87768f52e4f3ac2a1a1ad416238e7deb66", "title": "HaSGP: an effective graph partition method for heterogeneous-aware"}, {"paperId": "ae56b1044872e2b1d2c204617db26cbea5c650a3", "title": "Market-Oriented Online Bi-Objective Service Scheduling for Pleasingly Parallel Jobs with Variable Resources in Cloud Environments"}, {"paperId": "4760183ebb92fb2b3ed7532618a1a130151003b7", "title": "A high-performance framework for a network programmable packet processor using P4 and FPGA"}, {"paperId": "a8e66547351816b556ba45a15c467c91537ae413", "title": "2019 Index IEEE Transactions on Cloud Computing Vol. 7"}, {"paperId": "f5455d3b621ff4a3c5a1ddef5b838b11f43eeeb5", "title": "Collaborative cache allocation and task scheduling for data-intensive applications in edge computing environment"}, {"paperId": "68a536e410196104ca8279ebae0bcc3e304610b0", "title": "Dynamic resource allocation strategy for latency-critical and computation-intensive applications in cloud-edge environment"}]}
