{"paperId": "efa62f1614551c2d0d85f6c46d443a07487251c8", "publicationVenue": {"id": "1a5858d9-edfe-4a1b-ae39-60020748678f", "name": "ACM Transactions on Architecture and Code Optimization (TACO)", "type": "journal", "alternate_names": ["ACM Transactions on Architecture and Code Optimization", "ACM Trans Archit Code Optim", "ACM Trans Archit Code Optim (TACO"], "issn": "1544-3566", "url": "http://www.acm.org/taco", "alternate_urls": ["http://portal.acm.org/taco/", "https://taco.acm.org/"]}, "title": "Quantifying Resource Contention of Co-located Workloads with the System-level Entropy", "abstract": "The workload co-location, such as deploying offline analysis workloads with online service workloads on the same node, has become common for modern data centers. Workload co-location deployment improves data center resource utilization significantly. Still, it also introduces resource contention, resulting in the online service\u2019s quality of service fluctuation, which we call performance interference. As the online service is a tail-latency-sensitive workload, the tail-latency metric can reflect the performance interference degree of the co-location workloads at the application level. However, to guide system design and evaluation, quantitatively evaluating the resource contention of the co-located workloads at the system level is also essential. This article proposes a novel metric called System-Level Entropy (SLE). As a system-level metric, SLE can measure quantitatively resource contention of the co-location systems and perform the apples-to-apples comparison between systems. The experimental results show that SLE can accurately reflect the performance interference of workloads and then evaluate the system resource contention. We also demonstrate two case studies of the SLE. We quantify the affinity of different co-location combinations, including three online services and five offline workloads. Furthermore, we evaluate the effects of state-of-the-art isolated mechanisms (the container and the CPU\u2013affinity binding) with these co-location combinations.", "venue": "ACM Transactions on Architecture and Code Optimization (TACO)", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-09-22", "journal": {"name": "ACM Transactions on Architecture and Code Optimization", "pages": "1 - 25", "volume": "20"}, "authors": [{"authorId": "2119123251", "name": "Yi Liang"}, {"authorId": "1742219368", "name": "Shaokang Zeng"}, {"authorId": "2152511673", "name": "Lei Wang"}], "citations": []}
