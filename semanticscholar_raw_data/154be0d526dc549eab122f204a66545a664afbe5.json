{"paperId": "154be0d526dc549eab122f204a66545a664afbe5", "publicationVenue": {"id": "9448f839-459b-45f3-8573-5eff3f032334", "name": "USENIX Annual Technical Conference", "type": "conference", "alternate_names": ["USENIX Annu Tech Conf", "USENIX", "USENIX ATC"], "url": "https://www.usenix.org/conferences/byname/131"}, "title": "Zero Overhead Monitoring for Cloud-native Infrastructure using RDMA", "abstract": "Cloud services have recently undergone a major shift from monolithic designs to microservices running on the cloud-native infrastructure, where monitoring systems are widely deployed to ensure the service level agreement (SLA). Nev-ertheless, the traditional monitoring system no longer ful\ufb01lls the demands of cloud-native monitoring, which is observed from the practical experience in Alibaba cloud. Speci\ufb01cally, the monitor occupies resources ( e.g. , CPU) of the monitored infrastructure, disturbing services running on it. For example, enabling monitor causes jitters/declines of online services in Alibaba\u2019s \u201cdouble eleven\u201d shopping festival with high loads. On the other hand, the quality of service (QoS) of monitoring itself, which is vital to track and ensure SLA, is not guaranteed with the high loaded system. In this paper, we design and implement a novel monitoring system, named Z ERO , for cloud-native monitoring. First, Z ERO achieves zero overhead to collect raw metrics from the monitored hosts using one-sided remote direct memory access (RDMA) operations, thus avoiding any interferences to cloud services. Second, Z ERO adopts receiver-driven model to collect monitoring metrics with high QoS, where credit-based \ufb02ow control and hybrid I/O model are proposed to mitigate network congestion/interference and CPU bottlenecks. Z ERO has been deployed and evaluated in Alibaba cloud. Deployment results show that Z ERO achieves no CPU occupation at the monitored host and supports 1 \u223c 10 k hosts with 0 . 1 \u223c 1 s sampling interval using single thread for network I/O.", "venue": "USENIX Annual Technical Conference", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"pages": "639-654"}, "authors": [{"authorId": "2155544979", "name": "Zhe Wang"}, {"authorId": "1901958", "name": "Tengyu Ma"}, {"authorId": "3254296", "name": "L. Kong"}, {"authorId": "104246663", "name": "Zhenzao Wen"}, {"authorId": "2108990374", "name": "Jing-xiong Li"}, {"authorId": "1820760402", "name": "Zhuo Song"}, {"authorId": "2187485832", "name": "Yang Lu"}, {"authorId": "2116379978", "name": "Guihai Chen"}, {"authorId": "2075437509", "name": "Wei Cao"}], "citations": [{"paperId": "8b745c7a8e44ac4d108d0290ea0da083321573b7", "title": "MicroView: Cloud-Native Observability with Temporal Precision"}, {"paperId": "a7bf374a8d4724b99ed72d316091f787268f1486", "title": "Efficient Scheduler Live Update for Linux Kernel with Modularization"}, {"paperId": "019a8f5b78dc62c8c29188ac5e077a035e058a1c", "title": "Less is not more: We need rich datasets to explore"}, {"paperId": "028d4c5f2c18938af4d45d0ca121680a9c9ccbcc", "title": "This paper is included in the Proceedings of the 21st USENIX Conference on File and Storage Technologies."}]}
