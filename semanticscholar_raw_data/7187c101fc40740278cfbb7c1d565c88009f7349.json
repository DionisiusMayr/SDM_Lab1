{"paperId": "7187c101fc40740278cfbb7c1d565c88009f7349", "publicationVenue": {"id": "38e1b942-a62d-4d74-8e5d-677db6ed425f", "name": "Symposium on Networked Systems Design and Implementation", "type": "conference", "alternate_names": ["NSDI", "Symp Networked Syst Des Implement", "Networked Systems Design and Implementation", "Networked Syst Des Implement"]}, "title": "MilliSort and MilliQuery: Large-Scale Data-Intensive Computing in Milliseconds", "abstract": "Today\u2019s datacenter applications couple scale and time: applications that harness large numbers of servers also execute for long periods of time (seconds or more). This paper explores the possibility of flash bursts: applications that use a large number of servers but for very short time intervals (as little as one millisecond). In order to learn more about the feasibility of flash bursts, we developed two new benchmarks, MilliSort and MilliQuery. MilliSort is a sorting application and MilliQuery implements three SQL queries. The goal for both applications was to process as many records as possible in one millisecond, given unlimited resources in a datacenter. The short time scale required a new distributed sorting algorithm for MilliSort that uses a hierarchical form of partitioning. Both applications depended on fast group communication primitives such as shuffle and all-gather. Our implementation of MilliSort can sort 0.84 million items in one millisecond using 120 servers on an HPC cluster; MilliQuery can process .03\u201348 million items in one millisecond using 60-280 servers, depending on the query. The number of items that each application can process grows quadratically with the time budget. The primary obstacle to scalability is per-message costs, which appear in the form of inefficient shuffles and coordination overhead.", "venue": "Symposium on Networked Systems Design and Implementation", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"pages": "593-611"}, "authors": [{"authorId": "2140049647", "name": "Yilong Li"}, {"authorId": "46570278", "name": "S. Park"}, {"authorId": "144906845", "name": "J. Ousterhout"}], "citations": [{"paperId": "c22dba9d07d7b501150fb6ef4aef2b034cc7f0fa", "title": "Scalable and Robust East-West Forwarding Framework for Hyperscale Clouds"}, {"paperId": "99fbad8d8c46be75fa2d0c326e8f7ae491dfe582", "title": "Towards Accelerating Data Intensive Application's Shuffle Process Using SmartNICs"}, {"paperId": "1fa9922de2791bac8e9494141820db19b15b9272", "title": "Load balancers need in-band feedback control"}, {"paperId": "7f04427142ca05f2c0a0d13b1a5ad1b57b42086d", "title": "It's Time to Replace TCP in the Datacenter"}, {"paperId": "d2d02f753dafd8c98b9e3570ce845a6791ee6de7", "title": "Nezha: Deployable and High-Performance Consensus Using Synchronized Clocks"}, {"paperId": "1108dbec5759c99bc62e95c7dbfaf7cc51ac924e", "title": "From Sand to Flour: The Next Leap in Granular Computing with NanoSort"}, {"paperId": "028d4c5f2c18938af4d45d0ca121680a9c9ccbcc", "title": "This paper is included in the Proceedings of the 21st USENIX Conference on File and Storage Technologies."}, {"paperId": "a20b5dc886c09871bc95551d2383bf67e7bb6ea0", "title": "We Need a Replacement for TCP in the Datacenter"}, {"paperId": "452b22d2d3febb5c89c6ce4135a058ea689fe51f", "title": "Zeta: A Scalable and Robust East-West Communication Framework in Large-Scale Clouds"}, {"paperId": "29d7c170ef4e7ceb279d283299649fa8652f57dd", "title": "The nanoPU: A Nanosecond Network Stack for Datacenters"}, {"paperId": "9a5a6dd4e97d1bed2d00936561ebb511409b587a", "title": "This paper is included in the Proceedings of the 20th USENIX Symposium on Networked Systems Design and Implementation."}]}
