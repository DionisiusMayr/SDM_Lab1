{"paperId": "b6587441cf4a1f0fb36c91e27a01ce1527f630d7", "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b", "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names": ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"}, "title": "ByteSeries: an in-memory time series database for large-scale monitoring systems", "abstract": "Monitoring large-scale and complex systems often generates high-dimensional and highly dynamic time series data. In such a scenario, massive metadata has to be maintained to support efficient querying, whose large footprint poses great challenges to in-memory databases. In this paper, we present ByteSeries, an in-memory time series database that is designed specifically for large-scale monitoring systems to manage high-dimensional time series. We start with an analysis of the production data and workload at ByteDance's metric monitoring system, which contains over 10 billion time series dimensions. The observation of high overhead of metadata management in high-dimensional time series data calls for a rethink of time series database systems. Byte-Series's memory structure employs the novel Compressed Inverted Index to effectively compress metadata while maintaining high efficiency for multi-dimensional queries. In addition, an algorithm is proposed to effectively convert data into compressed form without sacrificing the data ingestion throughput. We experimentally evaluate ByteSeries by comparing it with ByteDance's original production system, tsdc, as well as two open-source systems, namely Gorilla and Prometheus. We show that ByteSeries significantly improves over ByteDance's original production system by 1) reducing the memory footprint of metadata by 60% and the whole memory consumption by 50%, and 2) speeding up multi-dimensional queries by 1.8x-10.7x.", "venue": "ACM Symposium on Cloud Computing", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2020-10-12", "journal": {"name": "Proceedings of the 11th ACM Symposium on Cloud Computing"}, "authors": [{"authorId": "1678835", "name": "Xuanhua Shi"}, {"authorId": "1994567540", "name": "Zezhao"}, {"authorId": "1757091", "name": "Yongluan Zhou"}, {"authorId": "1994370762", "name": "Yan He Hai  Jiang"}, {"authorId": "91395061", "name": "Bing-sheng"}, {"authorId": "71750550", "name": "Zhijun Ling"}, {"authorId": "2099733648", "name": "Xin"}], "citations": [{"paperId": "68fdc992cf1b9e1b33110380a3f93e32027abd47", "title": "Khronos: A Real-Time Indexing Framework for Time Series Databases on Large-Scale Performance Monitoring Systems"}, {"paperId": "c4c193b3fca96a8b16f3dbe3247ad36389073537", "title": "Krypton: Real-time Serving and Analytical SQL Engine at ByteDance"}, {"paperId": "5643e86caf0449f7f06c3e024711592f8a20a1fc", "title": "Lindorm TSDB: A Cloud-native Time-series Database for Large-scale Monitoring Systems"}, {"paperId": "0c8bb7e5943ddb3fe80e4a0391243c1915837bf8", "title": "ForestTI: A Scalable Inverted-Index-Oriented Timeseries Management System with Flexible Memory Efficiency"}, {"paperId": "8cc4dd210bb4650ada879d23146d2f5222e27b99", "title": "BSCache: A Brisk Semantic Caching Scheme for Cloud-based Performance Monitoring Timeseries Systems"}, {"paperId": "72f5f099ebb65a776d12bcd257b787016053a7fb", "title": "TimeUnion: An Efficient Architecture with Unified Data Model for Timeseries Management Systems on Hybrid Cloud Storage"}, {"paperId": "3b5a3fcfca9f87c8ac7d886a27f9e464078d4b65", "title": "Mach: A Pluggable Metrics Storage Engine for the Age of Observability"}, {"paperId": "0ef22742e925f93c70f797762652591b4bfb8c4e", "title": "An Efficient NoSQL-Based Storage Schema for Large-Scale Time Series Data"}]}
