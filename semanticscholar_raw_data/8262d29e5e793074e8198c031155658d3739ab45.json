{"paperId": "8262d29e5e793074e8198c031155658d3739ab45", "publicationVenue": {"id": "a36dc29e-4ea1-4567-b0fe-1c06daf8bee8", "name": "International Conference on Software Engineering", "type": "conference", "alternate_names": ["Int Conf Softw Eng", "ICSE"], "url": "http://www.icse-conferences.org/"}, "title": "A Study on the Lifecycle of Flaky Tests", "abstract": "During regression testing, developers rely on the pass or fail outcomes of tests to check whether changes broke existing functionality. Thus, flaky tests, which nondeterministically pass or fail on the same code, are problematic because they provide misleading signals during regression testing. Although flaky tests are the focus of several existing studies, none of them study (1) the reoccurrence, runtimes, and time-before-fix of flaky tests, and (2) flaky tests in-depth on proprietary projects. This paper fills this knowledge gap about flaky tests and investigates whether prior categorization work on flaky tests also apply to proprietary projects. Specifically, we study the lifecycle of flaky tests in six large-scale proprietary projects at Microsoft. We find, as in prior work, that asynchronous calls are the leading cause of flaky tests in these Microsoft projects. Therefore, we propose the first automated solution, called Flakiness and Time Balancer (FaTB), to reduce the frequency of flaky-test failures caused by asynchronous calls. Our evaluation of five such flaky tests shows that FaTB can reduce the running times of these tests by up to 78% without empirically affecting the frequency of their flaky-test failures. Lastly, our study finds several cases where developers claim they \u201cfixed\u201d a flaky test but our empirical experiments show that their changes do not fix or reduce these tests' frequency of flaky-test failures. Future studies should be more cautious when basing their results on changes that developers claim to be \u201cfixes\u201d.", "venue": "International Conference on Software Engineering", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2020-06-27", "journal": {"name": "2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)", "pages": "1471-1482"}, "authors": [{"authorId": "2055478258", "name": "Wing Lam"}, {"authorId": "1979660", "name": "Kivan\u00e7 Muslu"}, {"authorId": "1906848", "name": "Hitesh Sajnani"}, {"authorId": "2730602", "name": "Suresh Thummalapenta"}], "citations": [{"paperId": "9a5635e2f82441810a3af64b25297dcf000e4084", "title": "FlaKat: A Machine Learning-Based Categorization Framework for Flaky Tests"}, {"paperId": "9d205a80503a005fe6b3ea37d6e1f83f770f97d0", "title": "WEFix: Intelligent Automatic Generation of Explicit Waits for Efficient Web End-to-End Flaky Tests"}, {"paperId": "e87b427daf06f6636323d7e132c44d37bf715179", "title": "Taming Timeout Flakiness: An Empirical Study of SAP HANA"}, {"paperId": "91268487574aa76bac86a45db8bbbaa923039073", "title": "230, 439 Test Failures Later: An Empirical Evaluation of Flaky Failure Classifiers"}, {"paperId": "83cbbd1835060528fbdca271dc67cced88115495", "title": "A survey of Detecting Flakiness in Automated Test Regression Suite"}, {"paperId": "b255db1529fe6cedb8b3e5847e50641de2eec19c", "title": "Test Code Flakiness in Mobile Apps: The Developer's Perspective"}, {"paperId": "550d96df9a61a43146b32602492c19ca7be15d48", "title": "Vocabulary of Flaky Tests in Javascript"}, {"paperId": "a889b9321d61e9fb94aaac87de9d42f0cb3fa001", "title": "The Vocabulary of Flaky Tests in the Context of SAP HANA"}, {"paperId": "8d8f56f15a26d5736b23ce7f28041810e5e1f006", "title": "The Effects of Computational Resources on Flaky Tests"}, {"paperId": "505fedd4466e7e15ded5412625675da5be19e5a6", "title": "Just-in-Time Flaky Test Detection via Abstracted Failure Symptom Matching"}, {"paperId": "73a349f072923cfc6ca96af0f2dd703bc26b51ee", "title": "Do Automatic Test Generation Tools Generate Flaky Tests?"}, {"paperId": "bbf01ce7fea52987ae096b75328410019e5115a3", "title": "Semantic\u2010aware two\u2010phase test case prioritization for continuous integration"}, {"paperId": "af9cac157cebfd963e455bc4b128860c19ff68e5", "title": "Flaky Tests in UI: Understanding Causes and Applying Correction Strategies"}, {"paperId": "08c5b6e0002fcf079a78161d4d45b5de874e65bf", "title": "Characterizing Flaky Tests in Node.js Applications"}, {"paperId": "33758a8ebb94bb8819376d2cf604d3072b65fc67", "title": "Test flakiness' causes, detection, impact and responses: A multivocal review"}, {"paperId": "425beecf02120510f139ae927ac7d9a950497f5a", "title": "Repeated Builds During Code Review: An Empirical Study of the OpenStack Community"}, {"paperId": "797fd761b01c007286977a3eddd8f4307514e85d", "title": "Transforming Test Suites into Croissants"}, {"paperId": "3e5700be0abe9a35c24214dc0e189762d4aeddae", "title": "Systematically Producing Test Orders to Detect Order-Dependent Flaky Tests"}, {"paperId": "440b164c056544cdd6d98fcfbc39d5828b3b3f30", "title": "Improved Flaky Test Detection with Black-Box Approach and Test Smells"}, {"paperId": "447033ce5d003f9232ede75e2e7d372580fa71b9", "title": "A testing framework for JADE agent-based software"}, {"paperId": "991d1d78ff01ee2a3fd3fdd6b72342dd6e7ee900", "title": "Time-based Repair for Asynchronous Wait Flaky Tests in Web Testing"}, {"paperId": "72b07e6004eee667eb3ce7ce1607664b92b2a2e0", "title": "FlakyCat: Predicting Flaky Tests Categories using Few-Shot Learning"}, {"paperId": "576644ddbe438a3afe736b52da9d8850cd6effbb", "title": "Empirically evaluating flaky test detection techniques combining test case rerunning and machine learning models"}, {"paperId": "9df40f29e60d5e95332e48dc685422f82047992a", "title": "T-Evos: A Large-Scale Longitudinal Study on CI Test Execution and Failure"}, {"paperId": "ab7366f88da620a8b8677130ffdad06b9b656d58", "title": "BinaryRTS: Cross-language Regression Test Selection for C++ Binaries in CI"}, {"paperId": "5bf4d3823db36459868e39bcf0400ab434d24fca", "title": "QEX: Automated Testing Observability and QA Developer Experience Framework"}, {"paperId": "24517cc9310d31af9f664848fe67093017d527a0", "title": "Challenges of End-to-End Testing with Selenium WebDriver and How to Face Them: A Survey"}, {"paperId": "b41cec98e8e122f755287a12fd4bac28442ee0e8", "title": "Practical Flaky Test Prediction using Common Code Evolution and Test History Data"}, {"paperId": "9e88a6e3f1068fd4c265966167919d5de70feb55", "title": "HybridCISave: A Combined Build and Test Selection Approach in Continuous Integration"}, {"paperId": "bf2526fc177d072687b6aea37ea4ab197b0d40db", "title": "Test Flakiness' Causes, Detection, Impact and Responses: A Multivocal Review"}, {"paperId": "c545ef4edee26cf8486a05de5f2db0a7cc71dc9d", "title": "FlakeRepro: automated and efficient reproduction of concurrency-related flaky tests"}, {"paperId": "061c48fb55b5aa74132ee5c8a7119b9b28ff0c06", "title": "Peeler: Learning to Effectively Predict Flakiness without Running Tests"}, {"paperId": "94298763cd373891902e7e5e0b004a490b37eeb5", "title": "Inline Tests"}, {"paperId": "98d653bd0e943b9a978e5322d00bd9138fc724d2", "title": "Predicting Flaky Tests Categories using Few-Shot Learning"}, {"paperId": "e49e0c1c3bb920c28428598035da08d55e36366f", "title": "SleepReplacer: a novel tool-based approach for replacing thread sleeps in selenium WebDriver test code"}, {"paperId": "610baa54a4013f0bb31ad796981a831b9d2505bd", "title": "Flaky Test Sanitisation via On-the-Fly Assumption Inference for Tests with Network Dependencies"}, {"paperId": "5256f2da6ccb01c73576f8aa3e95c8a11b715274", "title": "What Made This Test Flake? Pinpointing Classes Responsible for Test Flakiness"}, {"paperId": "cafc6833629f205a8883555165f44d3497911217", "title": "Automatic generation of smoke test suites for kubernetes"}, {"paperId": "cfc3ab3380ddb89cceb5a84cce9cc33a7466937c", "title": "An Empirical Study of Flaky Tests in JavaScript"}, {"paperId": "3c0e7f545ece4938931623b25e8dc30b6cbefe09", "title": "Surveying the Developer Experience of Flaky Tests"}, {"paperId": "3e0d0f69f7ab1cfbd0191edd6e924722e29b11d1", "title": "iPFlakies: A Framework for Detecting and Fixing Python Order-Dependent Flaky Tests"}, {"paperId": "cf6230ed8b600c38d9ca4eaadde6e1ad6fac3e16", "title": "Preempting Flaky Tests via Non-Idempotent-Outcome Tests"}, {"paperId": "28e418b8854c51638f518135adb8bc5eeacf6226", "title": "FlakiMe: Laboratory-Controlled Test Flakiness Impact Assessment"}, {"paperId": "12d5bfca17fb35220242009cca2f30c0ff2be230", "title": "Update with care: Testing candidate bug fixes and integrating selective updates through binary rewriting"}, {"paperId": "882416e979d9fd19d28e14f557dd13d68b56019d", "title": "To Seed or Not to Seed? An Empirical Analysis of Usage of Seeds for Testing in Machine Learning Projects"}, {"paperId": "cb947186ec73e398ad5a89459c73353dade83412", "title": "Evaluating Features for Machine Learning Detection of Order- and Non-Order-Dependent Flaky Tests"}, {"paperId": "b111f02b79a335dfd18beef323b56a190144aa44", "title": "Identifying Randomness related Flaky Tests through Divergence and Execution Tracing"}, {"paperId": "319879701cb4400e51046757947d57d0bc0bf237", "title": "A Survey on How Test Flakiness Affects Developers and What Support They Need To Address It"}, {"paperId": "f05a5c3520f6aad5e430de978a35b84fa3ce911d", "title": "A Qualitative Study on the Sources, Impacts, and Mitigation Strategies of Flaky Tests"}, {"paperId": "7f16884e5c6584c66d6f04bd6f9ab6c5e3e1dd4d", "title": "Tackling Flaky Tests: Understanding the Problem and Providing Practical Solutions"}, {"paperId": "655f2893bdb688c2cb24ae1fcefe1aaee5fc89db", "title": "On the use of test smells for prediction of flaky tests"}, {"paperId": "b8116c791004cd6d7a6bab38486a757307e6ce4c", "title": "Quantifying no-fault-found test failures to prioritize inspection of flaky tests at Ericsson"}, {"paperId": "2fab18ebd8f4c9d33eb703d1abcb81b4adc7430d", "title": "Flaky test detection in Android via event order exploration"}, {"paperId": "ee8311ec08beb4cbc4ebd3386c5513aebf5bc666", "title": "How can manual testing processes be optimized? developer survey, optimization guidelines, and case studies"}, {"paperId": "24df08a6b29a9179e125cdd1b07c6d96a4d47d2d", "title": "How disabled tests manifest in test maintainability challenges?"}, {"paperId": "837a92aed90aaa28d4b021aaa38812969cc37b72", "title": "FLEX: fixing flaky tests in machine learning projects by updating assertion bounds"}, {"paperId": "554431aa62ac8e0a1967bad37d80fdd04d8bb187", "title": "TERA: optimizing stochastic regression tests in machine learning projects"}, {"paperId": "7eac2936ab09b9077cb016c8392e958f54ad36fb", "title": "Domain-Specific Fixes for Flaky Tests with Wrong Assumptions on Underdetermined Specifications"}, {"paperId": "58e5a0f0ddfe8316f19c376e244d8733ba6cedbe", "title": "Automatically Assessing and Extending Code Coverage for NPM Packages"}, {"paperId": "074bba8963a9438fc3479ac92c30c67c9adc8e1c", "title": "A Replication Study on the Usability of Code Vocabulary in Predicting Flaky Tests"}, {"paperId": "1f02cbccd34625edf60f4ec4b88d4ff4414d9946", "title": "What is the Vocabulary of Flaky Tests? An Extended Replication"}, {"paperId": "28c5e309b604fcbd2f109d0669da045a9dd6bebb", "title": "An Empirical Study of OSS-Fuzz Bugs"}, {"paperId": "33abac14249893c400d7c9eb4175b6be6c86f655", "title": "An Empirical Analysis of UI-Based Flaky Tests"}, {"paperId": "9bb50c489e016a06352d4ad7e0cc43377a5b3d6a", "title": "On the Impact of Flaky Tests in Automated Program Repair"}, {"paperId": "1cb69de1871c4ec1a3fc863a8bb07da93183ca44", "title": "Probabilistic and Systematic Coverage of Consecutive Test-Method Pairs for Detecting Order-Dependent Flaky Tests"}, {"paperId": "71236ade6a567c2b6f65189a0c90fe9aef407bdd", "title": "A large-scale longitudinal study of flaky tests"}, {"paperId": "b992fec7cd0882573cdddb6854005b03bbb1d88d", "title": "Understanding Reproducibility and Characteristics of Flaky Tests Through Test Reruns in Java Projects"}, {"paperId": "60a5f71d317da558528da095db1cf0dda0c6a0ad", "title": "Ad hoc Test Generation Through Binary Rewriting"}, {"paperId": "3123a7718438a64bf8157a28a46494bac57c635e", "title": "Dependent-test-aware regression testing techniques"}, {"paperId": "86bb705da1a8f4716c8829156c4669970ac6de3c", "title": "Detecting flaky tests in probabilistic and machine learning applications"}, {"paperId": "b7c190a05f8ecc7b8f8864401bbe8d20d329422a", "title": "Push-Button Reliability Testing for Cloud-Backed Applications with Rainmaker"}, {"paperId": "e61cd4598b9dbd6874ed995ff699c02b2c432291", "title": "Reducing Effort for Flaky Test Detection through Dynamic Program Analysis"}, {"paperId": "facda56e8922c51787ec5ae1002cc923f856f1ba", "title": "A Survey of Challenges in Spectrum Based Software Fault Localization"}, {"paperId": "1cee7ca4676b5e7a6b2eacfeb48db56a2d902043", "title": "An empirical study of async wait flakiness in front-end testing"}, {"paperId": "c540a6900b8d1348fb8e488edd2072b8543de929", "title": "Know You Neighbor: Fast Static Prediction of Test Flakiness"}, {"paperId": "9467d5f33418ebcc7a5a30d919ed2df424d69b1e", "title": "Initial Results on Counting Test Orders for Order-Dependent Flaky Tests Using Alloy"}, {"paperId": "15c73cff6a30c818e66b16f9a0dd3ad9c96aaaf0", "title": "Cost of Flaky Tests in Continuous Integration: An Industrial Case Study"}, {"paperId": "d71c21699ab9fd1f03252d36463b5595cdc9e606", "title": "On the Impact of Hitting System Resource Limits on Test Flakiness"}]}
