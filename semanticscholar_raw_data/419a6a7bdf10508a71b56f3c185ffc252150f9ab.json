{"paperId": "419a6a7bdf10508a71b56f3c185ffc252150f9ab", "publicationVenue": null, "title": "This paper is included in the Proceedings of the 19th USENIX Symposium on Networked Systems Design and Implementation", "abstract": "We present data-parallel actors (DPA) , a programming model for building distributed query serving systems. Query serving systems are an important class of applications characterized by low-latency data-parallel queries and frequent bulk data updates; they include data analytics systems like Apache Druid, full-text search engines like ElasticSearch, and time series databases like In\ufb02uxDB. They are challenging to build because they run at scale and need complex distributed functionality like data replication, fault tolerance, and update consistency. DPA makes building these systems easier by allowing developers to construct them from purely single-node components while automatically providing these critical properties. In DPA, we view a query serving system as a collection of stateful actors, each encapsulating a partition of data. DPA provides parallel operators that enable consistent, atomic, and fault-tolerant parallel updates and queries over data stored in actors. We have used DPA to build a new query serving system, a simpli\ufb01ed data warehouse based on the single-node database MonetDB, and enhance existing ones, such as Druid, Solr, and MongoDB, adding missing user-requested features such as load balancing and elasticity. We show that DPA can distribute a system in <1K lines of code (>10 \u00d7 less than typical implementations in current systems) while achieving state-of-the-art performance and adding rich functionality.", "venue": "", "year": null, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2258740767", "name": "Systems Design"}, {"authorId": "2288606857", "name": "Peter Kraft"}, {"authorId": "3419172", "name": "Fiodar Kazhamiaka"}, {"authorId": "2740804", "name": "Peter D. Bailis"}, {"authorId": "2253469020", "name": "Matei Zaharia"}, {"authorId": "2286339926", "name": "Stanford University"}], "citations": [{"paperId": "7f6f527c5d2ab27869c306a93014a3c63bc257d2", "title": "When Concurrency Matters: Behaviour-Oriented Concurrency"}, {"paperId": "c44b23f6b060f3004b5b243c4afbf7c1cb778f52", "title": "Dirigo: Self-scaling Stateful Actors For Serverless Real-time Data Processing"}, {"paperId": "1079b2a414cd6349fb26b60fab9ae96e84c65280", "title": "Skadi: Building a Distributed Runtime for Data Systems in Disaggregated Data Centers"}, {"paperId": "0bc9caa41ea357310eaaeeb8870f7c4bd65055fb", "title": "A Proposal for a Continuum-aware Programming Model: From Workflows to Services Autonomously Interacting in the Compute Continuum"}, {"paperId": "b3f128a7f345856ded50c32f24f1b4c8442bd013", "title": "Parallelism-Optimizing Data Placement for Faster Data-Parallel Computations"}, {"paperId": "f135b6ecffb81b5981d464b4992a0353d711c6d8", "title": "Portals: An Extension of Dataflow Streaming for Stateful Serverless"}]}
