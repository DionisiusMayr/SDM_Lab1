{"paperId": "f0c29d08360328b21f1a50ec71b3d51452d2e38e", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Erasing-based lossless compression method for streaming floating-point time series", "abstract": "There are a prohibitively large number of floating-point time series data generated at an unprecedentedly high rate. An efficient, compact and lossless compression for time series data is of great importance for a wide range of scenarios. Most existing lossless floating-point compression methods are based on the XOR operation, but they do not fully exploit the trailing zeros, which usually results in an unsatisfactory compression ratio. This paper proposes an Erasing-based Lossless Floating-point compression algorithm, i.e., Elf. The main idea of Elf is to erase the last few bits (i.e., set them to zero) of floating-point values, so the XORed values are supposed to contain many trailing zeros. The challenges of the erasing-based method are three-fold. First, how to quickly determine the erased bits? Second, how to losslessly recover the original data from the erased ones? Third, how to compactly encode the erased data? Through rigorous mathematical analysis, Elf can directly determine the erased bits and restore the original values without losing any precision. To further improve the compression ratio, we propose a novel encoding strategy for the XORed values with many trailing zeros. Furthermore, observing the values in a time series usually have similar significand counts, we propose an upgraded version of Elf named Elf+ by optimizing the significand count encoding strategy, which improves the compression ratio and reduces the running time further. Both Elf and Elf+ work in a streaming fashion. They take only O(N) (where N is the length of a time series) in time and O(1) in space, and achieve a notable compression ratio with a theoretical guarantee. Extensive experiments using 22 datasets show the powerful performance of Elf and Elf+ compared with 9 advanced competitors for both double-precision and single-precision floating-point values.", "venue": "arXiv.org", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-06-28", "journal": {"name": "ArXiv", "volume": "abs/2306.16053"}, "authors": [{"authorId": "1720842162", "name": "Ruiyuan Li"}, {"authorId": "2146247967", "name": "Zheng Li"}, {"authorId": "2214672596", "name": "Yi Wu"}, {"authorId": "2145765196", "name": "Chao Chen"}, {"authorId": "2118591275", "name": "Songtao Guo"}, {"authorId": "2145177286", "name": "Ming Zhang"}, {"authorId": "47833418", "name": "Yu Zheng"}], "citations": [{"paperId": "4cc4a9c36f5be75ad6b72c73f19e84ee3a76c8a7", "title": "Adaptive Encoding Strategies for Erasing-Based Lossless Floating-Point Compression"}]}
