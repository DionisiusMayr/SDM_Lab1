{"paperId": "f6ab4267421f480e21c4d9709b62637bcbae45c5", "publicationVenue": null, "title": "Regression test selection across JVM boundaries", "abstract": "Modern software development processes recommend that changes be integrated into the main development line of a project multiple times a day. Before a new revision may be integrated, developers practice regression testing to ensure that the latest changes do not break any previously established functionality. The cost of regression testing is high, due to an increase in the number of revisions that are introduced per day, as well as the number of tests developers write per revision. Regression test selection (RTS) optimizes regression testing by skipping tests that are not affected by recent project changes. Existing dynamic RTS techniques support only projects written in a single programming language, which is unfortunate knowing that an open-source project is on average written in several programming languages. We present the first dynamic RTS technique that does not stop at predefined language boundaries. Our technique dynamically detects, at the operating system level, all file artifacts a test depends on. Our technique is, hence, oblivious to the specific means the test uses to actually access the files: be it through spawning a new process, invoking a system call, invoking a library written in a different language, invoking a library that spawns a process which makes a system call, etc. We also provide a set of extension points which allow for a smooth integration with testing frameworks and build systems. We implemented our technique in a tool called RTSLinux as a loadable Linux kernel module and evaluated it on 21 Java projects that escape JVM by spawning new processes or invoking native code, totaling 2,050,791 lines of code. Our results show that RTSLinux, on average, skips 74.17% of tests and saves 52.83% of test execution time compared to executing all tests.", "venue": "ESEC/SIGSOFT FSE", "year": 2017, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2017-08-21", "journal": {"name": "Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering"}, "authors": [{"authorId": "145118978", "name": "Ahmet \u00c7elik"}, {"authorId": "48114493", "name": "Marko Vasic"}, {"authorId": "2174769", "name": "Aleksandar Milicevic"}, {"authorId": "2020926", "name": "Milo\u0161 Gligori\u0107"}], "citations": [{"paperId": "bb47c2de97e105e68e23c2fda06d36b54fbcb412", "title": "Fine-Grained Assertion-Based Test Selection"}, {"paperId": "e78a2494304248a5b333a1d04659aca32f0bf7b9", "title": "Automated Code-based Test Case Reuse for Software Product Line Testing"}, {"paperId": "9653e1af0491dbfec6ecab5133fb182156298dad", "title": "Test Selection for Unified Regression Testing"}, {"paperId": "ab7366f88da620a8b8677130ffdad06b9b656d58", "title": "BinaryRTS: Cross-language Regression Test Selection for C++ Binaries in CI"}, {"paperId": "3e44eb98a709aba18743e3ddbbf60eb1a3bada9b", "title": "DIRTS: Dependency Injection Aware Regression Test Selection"}, {"paperId": "2763e1e28d2b8f57bc916d8f2858c4f13ff9cde8", "title": "Severity-Aware Prioritization of System-Level Regression Tests in Automotive Software"}, {"paperId": "47789ae4698b57aa0d7c7a9406d56fc198cbcf4b", "title": "State of Practical Applicability of Regression Testing Research: A Live Systematic Literature Review"}, {"paperId": "e4009f3be4e9acdaf90687746e460db90e52e1bd", "title": "An approach for Test Impact Analysis on the Integration Level in Java programs"}, {"paperId": "2512b64566b7382f27ced9131790142005370d70", "title": "Language-agnostic dynamic analysis of multilingual code: promises, pitfalls, and prospects"}, {"paperId": "b971205103f9ae837813bdec890f6b57f590d5a0", "title": "Build System Aware Multi-language Regression Test Selection in Continuous Integration"}, {"paperId": "b29ef8ed3ff8c14ec5dec9a1d70a8de1eb5e170a", "title": "Probe-based Syscall Tracing for Efficient and Practical File-level Test Traces"}, {"paperId": "b2f8399dc3423e4bac9300174b01a55ab1c81f85", "title": "Comparing and Combining Analysis-Based and Learning-Based Regression Test Selection"}, {"paperId": "3247fc910b3f51cb3811278a57105dd247679f95", "title": "A Systematic Analysis of Regression Test Case Selection: A Multi-Criteria-Based Approach"}, {"paperId": "7b5e06aea115be84f43a439d007e85ad24290cbf", "title": "Soundy Automated Parallelization of Test Execution"}, {"paperId": "bc95c88191bef5bc909bdfb7051d49b7208eaf5c", "title": "Data-driven test selection at scale"}, {"paperId": "bdab29415be76e68d3c98defb72fc882d9daaf42", "title": "Empirically evaluating readily available information for regression test optimization in continuous integration"}, {"paperId": "38c94550ea66865b1fdec91182dbba7afe63c40b", "title": "An extensive study of class-level and method-level test case selection for continuous integration"}, {"paperId": "589a45d2e11720a32974702fba924b1e76acb81e", "title": "Debugging the performance of Maven\u2019s test isolation: experience report"}, {"paperId": "4d1a9883d36976032542a4940e602c58133ee43a", "title": "A model for detecting faults in build specifications"}, {"paperId": "ddfaee63686d997938eb16938be2448cbd17e539", "title": "Mahtab: Phase-wise acceleration of regression testing for C"}, {"paperId": "68eb91188d4b34073224b5aadf214396fd2cfba5", "title": "Reflection-aware static regression test selection"}, {"paperId": "5bc8c1fb660e2f4c4cc97333a60267de46ae2d04", "title": "Method-Level Test Selection for Continuous Integration with Static Dependencies and Dynamic Execution Rules"}, {"paperId": "151ff515a83439b6155abe5c74b51243be35bdf0", "title": "A Framework for Checking Regression Test Selection Tools"}, {"paperId": "c2fd7b55831f1958cbacf3b52756eb487ed8170e", "title": "TestSage: Regression Test Selection for Large-Scale Web Service Testing"}, {"paperId": "08f0e7dd21f9c31314a78f447013bf6576ab3e22", "title": "Resurgence of Regression Test Selection for C++"}, {"paperId": "80e1fd7da36fcf46a83731fc5877d37f9d5945e9", "title": "Keeping Master Green at Scale"}, {"paperId": "02a01c0a3b2ac52710b473584065e7815236c265", "title": "Test-splitter : creating unit tests from system tests with different input combinations"}, {"paperId": "f9771048121572277d66a0c253803319da662d4b", "title": "A learning algorithm for optimizing continuous integration development and testing practice"}, {"paperId": "451c04e9aaf283b3a3383df888784b1cd2d2c3e8", "title": "Predictive Test Selection"}, {"paperId": "7bea404de137686a67e5d4254dfbf16465ee67ba", "title": "Hybrid Regression Test Selection"}, {"paperId": "6bb809210999927643e75adddf0a516bae062b03", "title": "Eksen : regression test selection for VHDL"}, {"paperId": "6263e3ab615270464d552e873de9713bc6642df0", "title": "Test suite parallelization in open-source projects: A study on its usage and impact"}, {"paperId": "3befd8e48abae5dd6ba6ff053823c1db82e7e6a0", "title": "File-level vs. module-level regression test selection for .NET"}, {"paperId": "0bbf9e2021b552ba12f44e531de0633136208449", "title": "Regression Test Case Prioritization: A Systematic Literature Review"}]}
