{"paperId": "3d9bbeeba0e34494f15a92746323be3ec133cded", "publicationVenue": {"id": "29df4b17-9a16-4a4c-94a6-002f52e628b4", "name": "International Conference on Parallel Processing", "type": "conference", "alternate_names": ["ICPP", "Int Conf Parallel Process", "IEEE Int Conf Pulsed Power", "IEEE International Conference on Pulsed Power"], "url": "http://www.wikicfp.com/cfp/program?id=1447"}, "title": "Balancing Graph Processing Workloads Using Work Stealing on Heterogeneous CPU-FPGA Systems", "abstract": "We propose, implement and evaluate a work stealing based scheduler, called HWS, for graph processing on heterogeneous CPU-FPGA systems that tightly couple the CPU and the FPGA to share system memory. HWS addresses unique concerns that arise with work stealing in the context of our target system. Our evaluation is conducted on the Intel Heterogeneous Architecture Research Platform (HARPv2), using three key processing kernels and seven real-world graphs. We show that HWS effectively balances workloads. Further, the use of HWS results in better graph processing performance compared to static scheduling and a representative of existing adaptive partitioning techniques, called HAP. Improvements vary by graph processing application, input graph and number of threads, and can be up to 100% over static scheduling, and up to 17% over HAP. We also compare to an oracle chunk self-scheduler, in which the best chunk size is known a priori for each number of threads and each input graph. HWS performs no worse than 1-3% in most cases. Finally, our graph processing throughput scales well with increasing threads. These results collectively demonstrate the effectiveness of work stealing for graph processing on our heterogeneous target platform.", "venue": "International Conference on Parallel Processing", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2020-08-08", "journal": {"name": "Proceedings of the 49th International Conference on Parallel Processing"}, "authors": [{"authorId": "1875058741", "name": "Matthew Agostini"}, {"authorId": "2060791486", "name": "Francis O'Brien"}, {"authorId": "1693454", "name": "T. Abdelrahman"}], "citations": [{"paperId": "eed65a4f88a51070241068cf9059a4026cc8615e", "title": "A disk I/O optimized system for concurrent graph processing jobs"}, {"paperId": "fdfb4e597e419fc310674ce16ef744b4e66af2c9", "title": "Efficient Data Streaming for a Tightly-Coupled Coarse-Grained Reconfigurable Array"}, {"paperId": "84cd2b6a0450f37fdf194ca3d01c6e4effab02bb", "title": "A machine learning-based resource-efficient task scheduler for heterogeneous computer systems"}, {"paperId": "5b57f64b507a0a680c0969668a9febf2162e26d6", "title": "HybriDC: A Resource-Efficient CPU-FPGA Heterogeneous Acceleration System for Lossless Data Compression"}, {"paperId": "105352aa26973006ccd5417e0cf65f07256b46ec", "title": "Analysis of Graph Processing in Reconfigurable Devices for Edge Computing Applications"}, {"paperId": "a36a7eac4d9faceb97322ec54d3e5680f26941f1", "title": "Lightweight asynchronous scheduling in heterogeneous reconfigurable systems"}, {"paperId": "4e3036000912f1c521119122c9b41e958857d145", "title": "A Streaming Accelerator for Heterogeneous CPU-FPGA Processing of Graph Applications"}, {"paperId": "a8ebcc4e2514e0e014281d73e7164291d062eb72", "title": "Trash Talk: Accelerating Garbage Collection on Integrated GPUs is Worthless"}, {"paperId": "b0b690fbb0d691ff14f15cd3ab98627726de432d", "title": "Load Balancing a Multi-Block Grids-based Application on Heterogeneous Platform"}, {"paperId": "d0ecffd78981d6bb85dec8b6ed27fc55a01179bf", "title": "Non-relational Databases on FPGAs: Survey, Design Decisions, Challenges"}, {"paperId": "cb082d0ef13b7d1e6db355c81eb1bcc52ba71525", "title": "HCE: A Runtime System for Efficiently Supporting Heterogeneous Cooperative Execution"}]}
