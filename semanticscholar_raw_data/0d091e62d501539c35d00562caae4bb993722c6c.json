{"paperId": "0d091e62d501539c35d00562caae4bb993722c6c", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "Scaling-Up In-Memory Datalog Processing: Observations and Techniques", "abstract": "Recursive query processing has experienced a recent resurgence, as a result of its use in many modern application domains, including data integration, graph analytics, security, program analysis, networking and decision making. Due to the large volumes of data being processed, several research efforts across multiple communities have explored how to scale up recursive queries, typically expressed in Datalog. Our experience with these tools indicate that their performance does not translate across domains---e.g., a tool designed for large-scale graph analytics does not exhibit the same performance on program-analysis tasks, and vice versa.\n Starting from the above observation, we make the following two contributions. First, we perform a detailed experimental evaluation comparing a number of state-of-the-art Datalog systems on a wide spectrum of graph analytics and program-analysis tasks, and summarize the pros and cons of existing techniques. Second, we design and implement our own general-purpose Datalog engine, called RecStep, on top of a parallel single-node relational system. We outline the techniques we applied on RecStep, as well as the contribution of each technique to the overall performance. Using RecStep as a baseline, we demonstrate that it generally out-performs state-of-the-art parallel Datalog engines on complex and large-scale Datalog evaluation, by a 4-6X margin. An additional insight from our work is that it is possible to build a high-performance Datalog system on top of a relational engine, an idea that has been dismissed in past work.", "venue": "Proceedings of the VLDB Endowment", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2018-12-10", "journal": {"name": "ArXiv", "volume": "abs/1812.03975"}, "authors": [{"authorId": "2113846144", "name": "Zhiwei Fan"}, {"authorId": "2354896", "name": "Jianqiao Zhu"}, {"authorId": "38996371", "name": "Zuyu Zhang"}, {"authorId": "1893193", "name": "Aws Albarghouthi"}, {"authorId": "1713920", "name": "Paraschos Koutris"}, {"authorId": "49111633", "name": "J. Patel"}], "citations": [{"paperId": "9d3eabb3761d377eba935b4889fc497c3603d180", "title": "Optimizing Nested Recursive Queries"}, {"paperId": "95637d34079d3c4ca5bd35c57e0dc1c46ce8c493", "title": "Flan: An Expressive and Efficient Datalog Compiler for Program Analysis"}, {"paperId": "e373dd9751e98fd2edbd6242730da883494d767d", "title": "Adaptive Recursive Query Optimization"}, {"paperId": "23f9c77f9a839b82efdcce5080b9d490a6fcab3c", "title": "Efficient Enumeration of Recursive Plans in Transformation-based Query Optimizers"}, {"paperId": "ab7eac8eacf50dcb03a5b4a0776f1a248811826e", "title": "Communication-Avoiding Recursive Aggregation"}, {"paperId": "9788e40e3d599926866a1d81c2ceaa455c2d9751", "title": "Datalog in Wonderland"}, {"paperId": "5b01f1caeef7c93cf01f9d4ebc0af5efd8acc96e", "title": "Optimizing Parallel Recursive Datalog Evaluation on Multicore Machines"}, {"paperId": "8ca890e039a096b5cb7a8af9cb68a0bb114a9766", "title": "Optimizing Recursive Queries with Progam Synthesis"}, {"paperId": "7c2a78d9457f7187e58ef1adf5e2ec6e3a27e635", "title": "Fast datalog evaluation for batch and stream graph processing"}, {"paperId": "740c9893c743527db7a25b121e47e4d44157c0a6", "title": "Parallel Logic Programming: A Sequel"}, {"paperId": "1e0566158b0ecda97c76a7dadab16f1164b138eb", "title": "Defeasible Reasoning via Datalog\u00ac"}, {"paperId": "bfd548d9b5b8d75453784f1334749de1d82153c3", "title": "Evaluation of the Context-Free Path Querying Algorithm Based on Matrix Multiplication"}, {"paperId": "699da1789451e16f06a2d02b0a71e7687ad770d3", "title": "Shared Arrangements: practical inter-query sharing for streaming dataflows"}, {"paperId": "143f0411796a6d8f811f21ec0f8a9bca2cf3febe", "title": "Towards Better Understanding of the Performance and Design of Datalog Systems"}, {"paperId": "10afd0544e6f2452ee85ce8ad9ca102491364d15", "title": "Distributed Graph Analytics with Datalog Queries in Flink"}]}
