{"paperId": "c562c003bc0cf6928141e1f83156a48e3ee1a53d", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "DuckPGQ: Bringing SQL/PGQ to DuckDB", "abstract": "We demonstrate the most important new feature of SQL:2023, namely SQL/PGQ, which eases querying graphs using SQL by introducing new syntax for pattern matching and (shortest) path-finding. We show how support for SQL/PGQ can be integrated into an RDBMS, specifically in the DuckDB system, using an extension module called DuckPGQ. As such, we also demonstrate the use of the DuckDB extensibility mechanism, which allows us to add new functions, data types, operators, optimizer rules, storage systems, and even parsers to DuckDB. We also describe the new data structures and algorithms that the DuckPGQ module is based on, and how they are injected into SQL plans.\n While the demonstrated DuckPGQ extension module is lean and efficient, we sketch a roadmap to (i) improve its performance through new algorithms (factorized and WCOJ) and better parallelism and (ii) extend its functionality to scenarios beyond SQL, e.g., building and analyzing Graph Neural Networks.", "venue": "Proceedings of the VLDB Endowment", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-08-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "4034-4037", "volume": "16"}, "authors": [{"authorId": "2219955175", "name": "Daniel ten Wolde"}, {"authorId": "3254764", "name": "G\u00e1bor Sz\u00e1rnyas"}, {"authorId": "2238690024", "name": "P. Boncz"}], "citations": [{"paperId": "5c0a9d7f5ed0897d2a190a20050a2fd5a2dd13f0", "title": "Joining Entities Across Relation and Graph with a Unified Model"}, {"paperId": "e8b725c49e18a28bbdad9f1623f176b32b9e52d0", "title": "Integrating Velox into TinkerPop for Graph Queries on Vectorized Engine"}]}
