{"paperId": "055817147f970df74d51fba45be640deafcb55ef", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "DwarvesGraph: A High-Performance Graph Mining System with Pattern Decomposition", "abstract": "Graph mining tasks, which focus on extracting structural information from subgraphs, are gaining increasing attention recently. While the performance of recent systems---Arabesque, RStream, AutoMine, GraphZero, Pangolin and Peregrine---have been improved significantly over time, e.g., Peregrine can be up to 1317x and 2016x faster than Arabesque and RStream, all current systems treat each pattern to be mined as a whole. Since the computation cost could increase rapidly as the pattern size grows, the key obstacle is the size of patterns a system can handle, e.g., Automine fails to mine all 6-motif patterns within one week on a small graph with 7k vertices. To overcome the challenge, this paper takes a drastically different approach focusing on reducing pattern size. \nWe present DwarvesGraph, the first graph mining system based on pattern decomposition, which first decomposes the target pattern into several sub-patterns, and then computes the count of each. The results of the target pattern can be calculated using the sub-pattern counts with very low additional cost. Although decomposition-based algorithms have been studied for years, this paper addresses several key system challenges. Specifically, we propose: 1) an efficient search method to jointly determine the decomposition of all concrete patterns of an application, considering the computation cost and cross-pattern computation reuse; 2) the partial symmetry breaking technique to eliminate redundant enumeration for each sub-pattern while preserving equivalence of computation semantics; and 3) a decomposition-centric programming model with efficient supports for pattern existence query and advanced graph mining applications such as FSM. Our extensive experiments show that DwarvesGraph is orders of magnitude faster than all existing state-of-the-art systems and capable of mining large patterns that none of them can handle.", "venue": "arXiv.org", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2020-08-21", "journal": {"name": "ArXiv", "volume": "abs/2008.09682"}, "authors": [{"authorId": "2108536872", "name": "Jingji Chen"}, {"authorId": "2288203548", "name": "Xuehai Qian"}], "citations": [{"paperId": "1bb74e41ea8b7c0dbedc0099557f544bc6fbbbe4", "title": "DeSCo: Towards Generalizable and Scalable Deep Subgraph Counting"}, {"paperId": "db923242e44ff3b4ef26e348fbddf5727df6bf1a", "title": "MaNIACS: Approximate Mining of Frequent Subgraph Patterns through Sampling"}, {"paperId": "17f3d9b84c21cfc313d5c11f9efba37605cade94", "title": "Software Systems Implementation and Domain-Specific Architectures towards Graph Analytics"}, {"paperId": "d7aa27cd300df619cc86b1fcbd1fad282ef71b39", "title": "SampleMine: A Framework for Applying Random Sampling to Subgraph Pattern Mining through Loop Perforation"}, {"paperId": "84f8d0441396576a6e916dc9f395bd12c073c24b", "title": "FINGERS: exploiting fine-grained parallelism in graph mining accelerators"}, {"paperId": "1dc9626062182372d4a97e245a64fcabadbe49ca", "title": "Efficient and Scalable Graph Pattern Mining on GPUs"}, {"paperId": "6df2d6c28df6aec7eb770633ddb3f1d20e9559da", "title": "MaNIACS: Approximate Mining of Frequent Subgraph Patterns through Sampling"}, {"paperId": "a0c0b4f6143df5241a2c55cd15bc53c56e7e86ab", "title": "Efficient Mining of Frequent Subgraphs with Two-Vertex Exploration"}, {"paperId": "6550a0af3586ba50f61c4b5f930924cc9318918b", "title": "Arya: Arbitrary Graph Pattern Mining with Decomposition-based Sampling"}]}
