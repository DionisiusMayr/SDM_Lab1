{"paperId": "72764a7c961c3291a90be79939497241423316f1", "publicationVenue": null, "title": "Detecting and Fixing Flaky Tests", "abstract": "My research interests are in Software Engineering, with a focus on Software Testing. Software has become a crucial part of our daily lives, and software testing is widely used to check the quality of software. Developers frequently make changes to improve software and then perform regression testing by rerunning their tests to check that changes do not break existing functionality. Despite its widespread use, regression testing still has two key challenges: (1) test suites have flaky tests that nondeterministically pass and fail independently of the developers\u2019 changes, misleading developers that their changes broke existing functionality, and (2) regression testing takes a long time to run, wasting developer time and compute resources. These challenges are faced by both openand closed-source communities, including companies such as Facebook, Google, and Microsoft. My research so far has focused on tackling the two key challenges of regression testing: flaky tests and long regression testing time. More specifically, I developed techniques and tools for (1) making regression testing more reliable by detecting flaky tests and mitigating their effects [5, 6, 12, 19, 21, 24], (2) optimizing test suites for faster run times through better test placement and through removing redundant tests [1, 20, 22, 25, 26], and (3) speeding up regression testing by rerunning only the tests that can be affected by code changes [13,14,23,27,31]. I also evaluated test-suite quality through mutation testing [3, 4, 7, 8, 9, 10]. As long as people write software, there will be bugs, and software testing will remain highly relevant. In the future, I plan to develop testing techniques for emerging software domains where testing is still not mature enough, such as machine learning, probabilistic programming, or Internet of Things. These domains are inherently nondeterministic, leading to challenges in testing that I look forward to overcoming. I also plan to improve testing of code for computational science [2, 11, 18, 28], where reproducibility is currently a big challenge that can be alleviated by software testing techniques.", "venue": "", "year": 2019, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "40128780", "name": "A. Shi"}], "citations": []}
