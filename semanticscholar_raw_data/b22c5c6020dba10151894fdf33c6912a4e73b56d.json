{"paperId": "b22c5c6020dba10151894fdf33c6912a4e73b56d", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Sort-based grouping and aggregation", "abstract": "Database query processing requires algorithms for duplicate removal, grouping, and aggregation. Three algorithms exist: in-stream aggregation is most efficient by far but requires sorted input; sort-based aggregation relies on external merge sort; and hash aggregation relies on an in-memory hash table plus hash partitioning to temporary storage. Cost-based query optimization chooses which algorithm to use based on several factors including input and output sizes, the sort order of the input, and the need for sorted output. For example, hash-based aggregation is ideal for small output (e.g., TPC-H Query 1), whereas sorting the entire input and aggregating after sorting are preferable when both aggregation input and output are large and the output needs to be sorted for a subsequent operation such as a merge join. \nUnfortunately, the size information required for a sound choice is often inaccurate or unavailable during query optimization, leading to sub-optimal algorithm choices. To address this challenge, this paper introduces a new algorithm for sort-based duplicate removal, grouping, and aggregation. The new algorithm always performs at least as well as both traditional hash-based and traditional sort-based algorithms. It can serve as a system's only aggregation algorithm for unsorted inputs, thus preventing erroneous algorithm choices. Furthermore, the new algorithm produces sorted output that can speed up subsequent operations. Google's F1 Query uses the new algorithm in production workloads that aggregate petabytes of data every day.", "venue": "arXiv.org", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2020-10-01", "journal": {"name": "ArXiv", "volume": "abs/2010.00152"}, "authors": [{"authorId": "145182862", "name": "Thanh Do"}, {"authorId": "1799376", "name": "G. Graefe"}], "citations": [{"paperId": "9e7a19e7988cfd6fc9d78288c8cea36748699203", "title": "Acceleration and Implementation of Database Aggregation Query Based on FPGA"}, {"paperId": "7bef0e334d14f164ff3996092c183e0238d0ab6d", "title": "A Study of Early Aggregation in Database Query Processing on FPGAs"}]}
