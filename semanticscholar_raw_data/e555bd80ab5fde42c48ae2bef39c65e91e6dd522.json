{"paperId": "e555bd80ab5fde42c48ae2bef39c65e91e6dd522", "publicationVenue": {"id": "a6d17266-03e2-40f8-b669-6822bec99ff2", "name": "\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b", "issn": "2305-6061", "alternate_issns": ["2454-0714"], "url": "http://aurora-group.eu/engitm/"}, "title": "Syntax Tree Development for Automated Serial-to-Parallel Code Translator for Multicore Processors", "abstract": "\n The emergence of multicore architectures has extremely stimulated the area of parallel computing. However, developing a parallel program and manually paralleling inherited sequential program codes are time-consuming work. The programmer should have good skills in using parallel programming methods. This fact determines the relevance of the subject of the research \u2013 the development of a serial-to-parallel code translator. The article gives a review of existing solutions in the chosen direction of research and considers their advantages and disadvantages. The principle of formation of a syntactic tree which is based on JSON format (the text format of data exchange based on JavaScript) is offered and an example of formation of a syntactic tree on the basis of this principle is considered. The result of the work is an approach for building a program platform for translating sequential code into parallel code. The distinctive feature of the developed platform is the web-service, which potentially allows you to extend the translator with other programming languages. The interaction with the programming environment is realized by means of REST-requests (HTTP-requests designed to call remote procedures). The developed software platform consists of three modules: the query processing module, which provides interaction with external systems through REST-requests; the tree building module, which forms a syntax tree on the basis of the source program code; the code conversion module, which obtains parallel program code on the basis of the syntax tree.\n", "venue": "\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b", "year": 2023, "fieldsOfStudy": null, "publicationTypes": ["Review"], "publicationDate": "2023-01-01", "journal": {"name": "\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b"}, "authors": [{"authorId": "2027023559", "name": "I. Viktorov"}, {"authorId": "2190247894", "name": "R. Gibadullin"}], "citations": [{"paperId": "980619df9da178ad305afd037c897a535bf2012c", "title": "Development of video control system training stand"}, {"paperId": "8bd32359dab55cefdfbb647b5354ad08f0880ba1", "title": "The research of electrical parameters of threshold detectors"}, {"paperId": "daeb018a234d173b6bf8d7932018ec5e703b52fe", "title": "Principles of developing a limited-queue mass service system on the .NET platform"}, {"paperId": "4e87a92792760588e2dc3e520cbb5ead3848019f", "title": "Development of the security and fire system training stand for student training"}]}
