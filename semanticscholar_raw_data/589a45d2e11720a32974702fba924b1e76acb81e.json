{"paperId": "589a45d2e11720a32974702fba924b1e76acb81e", "publicationVenue": {"id": "289bfdda-eab3-4c9a-97be-ef1e0f9ddfc0", "name": "International Symposium on Software Testing and Analysis", "type": "conference", "alternate_names": ["ISSTA", "Int Symp Softw Test Anal"], "url": "https://dl.acm.org/conference/issta"}, "title": "Debugging the performance of Maven\u2019s test isolation: experience report", "abstract": "Testing is the most common approach used in industry for checking software correctness. Developers frequently practice reliable testing-executing individual tests in isolation from each other-to avoid test failures caused by test-order dependencies and shared state pollution (e.g., when tests mutate static fields). A common way of doing this is by running each test as a separate process. Unfortunately, this is known to introduce substantial overhead. This experience report describes our efforts to better understand the sources of this overhead and to create a system to confirm the minimal overhead possible. We found that different build systems use different mechanisms for communicating between these multiple processes, and that because of this design decision, running tests with some build systems could be faster than with others. Through this inquiry we discovered a significant performance bug in Apache Maven\u2019s test running code, which slowed down test execution by on average 350 milliseconds per-test when compared to a competing build system, Ant. When used for testing real projects, this can result in a significant reduction in testing time. We submitted a patch for this bug which has been integrated into the Apache Maven build system, and describe our ongoing efforts to improve Maven\u2019s test execution tooling.", "venue": "International Symposium on Software Testing and Analysis", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2020-07-13", "journal": {"name": "Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis"}, "authors": [{"authorId": "5890416", "name": "Pengyu Nie"}, {"authorId": "145118978", "name": "Ahmet \u00c7elik"}, {"authorId": "2099508227", "name": "Matthew Coley"}, {"authorId": "2057497498", "name": "George Mason"}, {"authorId": "2174769", "name": "Aleksandar Milicevic"}, {"authorId": "144023217", "name": "Jonathan Bell"}, {"authorId": "2020926", "name": "Milo\u0161 Gligori\u0107"}], "citations": [{"paperId": "94c43cc53a99a68f8b4b8284e0967fd4c5935166", "title": "PACE: A Program Analysis Framework for Continuous Performance Prediction"}, {"paperId": "c5e4d3ef6d61cbeea895863856501e2e35a67dd0", "title": "Optimizing Continuous Development by Detecting and Preventing Unnecessary Content Generation"}, {"paperId": "ab7366f88da620a8b8677130ffdad06b9b656d58", "title": "BinaryRTS: Cross-language Regression Test Selection for C++ Binaries in CI"}, {"paperId": "cf6230ed8b600c38d9ca4eaadde6e1ad6fac3e16", "title": "Preempting Flaky Tests via Non-Idempotent-Outcome Tests"}, {"paperId": "b971205103f9ae837813bdec890f6b57f590d5a0", "title": "Build System Aware Multi-language Regression Test Selection in Continuous Integration"}, {"paperId": "b29ef8ed3ff8c14ec5dec9a1d70a8de1eb5e170a", "title": "Probe-based Syscall Tracing for Efficient and Practical File-level Test Traces"}, {"paperId": "b2f8399dc3423e4bac9300174b01a55ab1c81f85", "title": "Comparing and Combining Analysis-Based and Learning-Based Regression Test Selection"}, {"paperId": "2f65e60dfd8a05f6dfeec8a237507b029386b1eb", "title": "Performance Testing for Cloud Computing with Dependent Data Bootstrapping"}, {"paperId": "7b5e06aea115be84f43a439d007e85ad24290cbf", "title": "Soundy Automated Parallelization of Test Execution"}, {"paperId": "71236ade6a567c2b6f65189a0c90fe9aef407bdd", "title": "A large-scale longitudinal study of flaky tests"}]}
