{"paperId": "8e3d404de061c6bbc691158a132a3fcd148e07db", "publicationVenue": {"id": "5c1ee4fd-f14f-4d2a-9d42-1a1be373786a", "name": "Journal of the ACM", "type": "journal", "alternate_names": ["J ACM"], "issn": "1535-9921", "alternate_issns": ["0004-5411"], "url": "http://www.acm.org/jacm/", "alternate_urls": ["http://portal.acm.org/jacm", "http://jacm.acm.org/", "https://jacm.acm.org/"]}, "title": "Communication Steps for Parallel Query Processing", "abstract": "We study the problem of computing conjunctive queries over large databases on parallel architectures without shared storage. Using the structure of such a query q and the skew in the data, we study tradeoffs between the number of processors, the number of rounds of communication, and the per-processor load\u2014the number of bits each processor can send or can receive in a single round\u2014that are required to compute q. Since each processor must store its received bits, the load is at most the number of bits of storage per processor. When the data are free of skew, we obtain essentially tight upper and lower bounds for one round algorithms, and we show how the bounds degrade when there is skew in the data. In the case of skewed data, we show how to improve the algorithms when approximate degrees of the (necessarily small number of) heavy-hitter elements are available, obtaining essentially optimal algorithms for queries such as skewed simple joins and skewed triangle join queries. For queries that we identify as treelike, we also prove nearly matching upper and lower bounds for multi-round algorithms for a natural class of skew-free databases. One consequence of these latter lower bounds is that for any \u03f5 > 0, using p processors to compute the connected components of a graph, or to output the path, if any, between a specified pair of vertices of a graph with m edges and per-processor load that is O(m/p1\u2212\u03f5) requires \u03a9(logp) rounds of communication. Our upper bounds are given by simple structured algorithms using MapReduce. Our one-round lower bounds are proved in a very general model, which we call the Massively Parallel Communication (MPC) model, that allows processors to communicate arbitrary bits. Our multi-round lower bounds apply in a restricted version of the MPC model in which processors in subsequent rounds after the first communication round are only allowed to send tuples.", "venue": "Journal of the ACM", "year": 2017, "fieldsOfStudy": ["Computer Science", "Mathematics"], "publicationTypes": ["JournalArticle"], "publicationDate": "2017-10-14", "journal": {"name": "Journal of the ACM (JACM)", "pages": "1 - 58", "volume": "64"}, "authors": [{"authorId": "1791374", "name": "P. Beame"}, {"authorId": "1713920", "name": "Paraschos Koutris"}, {"authorId": "144823759", "name": "Dan Suciu"}], "citations": [{"paperId": "70be1284086e0304aed093d14e18c41c98f63b4d", "title": "Parallel Acyclic Joins: Optimal Algorithms and Cyclicity Separation"}, {"paperId": "a544840003ccea90e219ad05e50a385b74c2dc65", "title": "Massively parallel and streaming algorithms for balanced clustering"}, {"paperId": "f318823f9f5224a011708a34365e6e210c031be4", "title": "Location-Sensitive String Problems in MPC"}, {"paperId": "a3bf6669d19fa023117d026a7ce4b6f71b2484f0", "title": "Massively Parallel Tree Embeddings for High Dimensional Spaces"}, {"paperId": "b398e384995488081cf6a92c33ef30150f00b439", "title": "On Parallel k-Center Clustering"}, {"paperId": "2a5931e1d8494a065d0819256ce79808a185461b", "title": "Efficient deterministic MapReduce algorithms for parallelizable problems"}, {"paperId": "30c5b8f03aec2706f6ab8b5e927061a32dfb89e6", "title": "k-Center Clustering with Outliers in the MPC and Streaming Model"}, {"paperId": "61d368b712698adb49fe0de785f5facf6b730df6", "title": "Change Propagation Without Joins"}, {"paperId": "a188a1b792ad899a7a2c3e9ba8fd7e081162fee3", "title": "Efficient Distributed Algorithms for Minimum Spanning Tree in Dense Graphs"}, {"paperId": "9d4124ec694c477641c760728603b8f4e63ca079", "title": "Massively Parallel Algorithms for b-Matching"}, {"paperId": "b60608b6e199bedbb8e7a7dcd86700e4dbbd9345", "title": "Scalable Differentially Private Clustering via Hierarchically Separated Trees"}, {"paperId": "8089d1e234983cf85cedd58992c7a9a484430e7e", "title": "HYPERSONIC: A Hybrid Parallelization Approach for Scalable Complex Event Processing"}, {"paperId": "37005eb1cced5212069482c4b522de9c225e8eec", "title": "Fair k-Center Clustering in MapReduce and Streaming Settings"}, {"paperId": "c4f32b7976cfeff2ad22ed761e6e01b4d4855f48", "title": "Brooks\u2019 theorem in graph streams: a single-pass semi-streaming algorithm for \u2206-coloring"}, {"paperId": "257c68a981b195e59594f10c6210a4318e9499cc", "title": "Deterministic massively parallel connectivity"}, {"paperId": "0273f94513e74f1e30b35b7ec8741d04f10006ef", "title": "Brief Announcement: A Randomness-efficient Massively Parallel Algorithm for Connectivity"}, {"paperId": "4bce08d96d8334a97433d50d9dfe37e7ebec722c", "title": "Massively Parallel Join Algorithms"}, {"paperId": "29f0d4572f9f35283430366f78569519733751b6", "title": "Sampling and sparsification for approximating the packedness of trajectories and detecting gatherings"}, {"paperId": "c798c19a01a0dd11447cb67416d1babb89c579d0", "title": "Computing the Exact Packedness of a Curve"}, {"paperId": "ed0b5927bb01e0551f777eb9a8f0a70011bae3dd", "title": "Sample-and-Gather: Fast Ruling Set Algorithms in the Low-Memory MPC Model"}, {"paperId": "2d444a716b2b33d5696cd195c8c558327f955596", "title": "Efficient Data Transmission Method Considering Hierarchical Data Structure"}, {"paperId": "ba52d528728362c470f43729e84a50972837a017", "title": "Unconditional Lower Bounds for Adaptive Massively Parallel Computation"}, {"paperId": "a7d434e5dcf3fcc32d0c65f29e2265277b6d773e", "title": "A Formally Verified, Optimized Monitor for Metric First-Order Dynamic Logic"}, {"paperId": "66f47891e0a6cc747c2492c865f424ea47af55d1", "title": "Parallel Algorithms for Sparse Matrix Multiplication and Join-Aggregate Queries"}, {"paperId": "f81eacbca4900ca1a50e5d25ebffd1774fc7c847", "title": "A Massively Parallel Algorithm for Minimum Weight Vertex Cover"}, {"paperId": "2a3d49d8f8a8df58fa71c8c07f93a2ddbd47085e", "title": "Connected Components on a PRAM in Log Diameter Time"}, {"paperId": "a8b26718d629024b1823b36a3b4881b8c4a6dc26", "title": "Equivalence classes and conditional hardness in massively parallel computations"}, {"paperId": "5cf8403ae635e2abf79d18cdca214c9b6cff8f8d", "title": "Adaptive Online First-Order Monitoring"}, {"paperId": "b00b073f967e068d848910c21b8c840da23eee49", "title": "Massively Parallel Computation of Matching and MIS in Sparse Graphs"}, {"paperId": "f21495b24d58d2fb9b4162a03ed1bcad8d5a5355", "title": "Breaking the Linear-Memory Barrier in MPC: Fast MIS on Trees with Strongly Sublinear Memory"}, {"paperId": "11a010a65680f709a6aacd8ab7d64b1331f258ca", "title": "Massively Parallel Computation via Remote Memory Access"}, {"paperId": "4bb3e9655fbae590a4f5cf7eb69a5dd2aa5b8cf6", "title": "Distributed and Streaming Linear Programming in Low Dimensions"}, {"paperId": "f1aa069dcc467e3ee01ec786967bdf0f94d1e2d5", "title": "Exponentially Faster Massively Parallel Maximal Matching"}, {"paperId": "c84672ffcc0c6ca9df1c9f27d725dc87fb7e71cc", "title": "Simple Concurrent Connected Components Algorithms"}, {"paperId": "502286db3973874cf4119aad176c2923349bc68a", "title": "Scalable online first-order monitoring"}, {"paperId": "4d7392fe67e378236a7bd077ae7fd8c06d1dc70f", "title": "Finite-State Map-Reduce Computation and Relational Algebra Queries"}, {"paperId": "5d76e2bbe7ef70c0e1330d565b8b1f49685bb0a4", "title": "Two Rounds Are Enough for Reconstructing Any Graph (Class) in the Congested Clique Model"}, {"paperId": "eb4cbe185eb71840b3172a215052d44e9e7b4bbf", "title": "Brief Announcement: Semi-MapReduce Meets Congested Clique"}, {"paperId": "5731cc5d45b41c211979e8e8f53e9ec43495f918", "title": "Breaking the linear-memory barrier in MPC: Fast MIS on trees with strongly sublinear memory"}, {"paperId": "1677405af578d30221f53ca5bd1422d108eacb72", "title": "Graph Reconstruction in the Congested Clique"}, {"paperId": "923692622baae0ddc32978c2b73327db22df09ec", "title": "Massively-Parallel Similarity Join, Edge-Isoperimetry, and Distance Correlations on the Hypercube"}, {"paperId": "c886c7511ec3adc4bd4e3be2a3e32171fdda62cf", "title": "A Benchmark Generator for Online First-Order Monitoring"}, {"paperId": "5e1e645dceb18952447e6ada68cc66bc10342b46", "title": "Scalable Online Monitoring of Distributed Systems"}]}
