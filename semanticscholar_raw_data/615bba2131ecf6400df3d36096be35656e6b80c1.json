{"paperId": "615bba2131ecf6400df3d36096be35656e6b80c1", "publicationVenue": {"id": "57f970eb-366a-4bfa-aa06-2ff70d834806", "name": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing", "type": "conference", "alternate_names": ["Clust Comput Grid", "CCGRID", "IEEE/ACM Int Symp Clust Cloud Grid Comput", "IEEE/ACM International Symposium Cluster, Cloud and Grid Computing", "Cluster Computing and the Grid", "IEEE/ACM Int Symp Clust Cloud Internet Comput"], "url": "http://www.buyya.com/ccgrid/"}, "title": "Lamda-Flow: Automatic Pushdown of Dataflow Operators Close to the Data", "abstract": "Modern data analytics infrastructures are composed of physically disaggregated compute and storage clusters. Thus, dataflow analytics engines, such as Apache Spark or Flink, are left with no choice but to transfer datasets to the compute cluster prior to their actual processing. For large data volumes, this becomes problematic, since it involves massive data transfers that exhaust network bandwidth, that waste compute cluster memory, and that may become a performance barrier. To overcome this problem, we present \u03bbFlow: a framework for automatically pushing dataflow operators (e.g., map, flatMap, filter, etc.) down onto the storage layer. The novelty of \u03bbFlow is that it manages the pushdown granularity at the operator level, which makes it a unique problem. To wit, it requires addressing several challenges, such as how to encapsulate dataflow operators and execute them on the storage cluster, and how to keep track of dependencies such that operators can be pushed down safely onto the storage layer. Our evaluation reports significant reductions in resource usage for a large variety of IO-bound jobs. For instance, \u03bbFlow was able to reduce both network bandwidth and memory requirements by 90% in Spark. Our Flink experiments also prove the extensibility of \u03bbFlow to other engines.", "venue": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-05-14", "journal": {"name": "2019 19th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID)", "pages": "112-121"}, "authors": [{"authorId": "2715350", "name": "Ra\u00fal Gracia Tinedo"}, {"authorId": "1749419", "name": "Marc S\u00e1nchez Artigas"}, {"authorId": "144333596", "name": "P. L\u00f3pez"}, {"authorId": "2888002", "name": "Y. Moatti"}, {"authorId": "11040281", "name": "Filip Gluszak"}], "citations": [{"paperId": "35e34ca58482b0307455b4539bf58bd6af5cc1bf", "title": "A Deep Dive into Common Open Formats for Analytical DBMSs"}, {"paperId": "52421dd4636f766ab8338a96e291917b79c2fdf7", "title": "Optimizing Near-Data Processing for Spark"}, {"paperId": "6adf085a118f2a1291667b308d5c42564e2362e6", "title": "Jarvis: Large-scale Server Monitoring with Adaptive Near-data Processing"}]}
