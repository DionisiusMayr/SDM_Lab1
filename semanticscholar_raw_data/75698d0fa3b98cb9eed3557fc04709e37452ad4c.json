{"paperId": "75698d0fa3b98cb9eed3557fc04709e37452ad4c", "publicationVenue": {"id": "7bb54772-a70c-44df-9b9d-9f3b5354c0e2", "name": "IEEE International Parallel and Distributed Processing Symposium", "type": "conference", "alternate_names": ["IEEE Int Parallel Distrib Process Symp", "International Parallel and Distributed Processing Symposium", "IPDPS", "Int Parallel Distrib Process Symp"], "url": "http://www.ipdps.org/"}, "title": "FastJoin: A Skewness-Aware Distributed Stream Join System", "abstract": "In the bigdata era, many applications are required to perform quick and accurate join operations on large-scale real-time data streams, such as stock trading and online advertisement analysis. To achieve high throughput and low latency, distributed stream join systems explore efficient stream partitioning strategies to execute the complex stream join procedure in parallel. Existing systems mainly deploy two kinds of partitioning strategies, i.e., random partitioning and hash partitioning. Random partitioning strategy partitions one data stream uniformly while broadcasting all the tuples of the other data stream. This simple strategy may incur lots of unnecessary computations for low-selectivity stream join. Hash partitioning strategy maps all the tuples of the two data streams according to their attributes for joining. However, hash partitioning strategy suffers from a serious load imbalance problem caused by the skew distribution of the attributes, which is common in real-world data. The skewed load may seriously affect the system performance. In this paper, we carefully model the load skewness problem in distributed join systems. We explore the key tuples which lead to the heavy load skewness, and propose an efficient key selection algorithm, GreedyFit to find out these key tuples. We design a lightweight tuple migration strategy to solve the load imbalance problem in real-time and implement a new distributed stream join system, FastJoin. Experimental results using real-world data show that FastJoin can significantly improve the system performance in terms of throughput and latency compared to the state-of-the-art stream join systems.", "venue": "IEEE International Parallel and Distributed Processing Symposium", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-05-20", "journal": {"name": "2019 IEEE International Parallel and Distributed Processing Symposium (IPDPS)", "pages": "1042-1052"}, "authors": [{"authorId": "152194333", "name": "Shunjie Zhou"}, {"authorId": "47191084", "name": "Fan Zhang"}, {"authorId": "1713345", "name": "Hanhua Chen"}, {"authorId": "145914256", "name": "Hai Jin"}, {"authorId": "1776472", "name": "B. Zhou"}], "citations": [{"paperId": "63515650fa2f89ba35a0075d1e3f084124ce76c1", "title": "An adaptive load balancing strategy for stateful join operator in skewed data stream environments"}, {"paperId": "0a378fec0f20724abb104361a58260d43babafd8", "title": "Nereus: A Distributed Stream Band Join System With Adaptive Range Partitioning"}, {"paperId": "d9b18c8a69eba21e189cead667ede211ff1aa54f", "title": "Flink Task Scheduling Based on LBGA"}, {"paperId": "5061ae9da1a80526e0ba98912cfb7d90fe15b004", "title": "SepJoin: A Distributed Stream Join System with Low Latency and High Throughput"}, {"paperId": "c67057aac7520175d5f5796c0881420d2cdef01e", "title": "An adaptive non-migrating load-balanced distributed stream window join system"}, {"paperId": "2b29cb41ba9cff4f0839d70defff130d75cc5de6", "title": "BS-Join: A novel and efficient mixed batch-stream join method for spatiotemporal data management in Flink"}, {"paperId": "777c0d5ac02e05a66daa12abb6fe1b224f41148c", "title": "Comparative Analysis of Skew-Join Strategies for Large-Scale Datasets with MapReduce and Spark"}, {"paperId": "18150bec397bdf79132f95a0089fd084037bd648", "title": "FATM: A failure\u2010aware adaptive fault tolerance model for distributed stream processing systems"}, {"paperId": "cdc45897e9b6a3701aa9309295891ae3399b32c4", "title": "Framework-Agnostic Optimization of Repeated Skewed Joins at Massive Scale"}, {"paperId": "49d3c8a0e882b155c271c976dd6884be3502ba44", "title": "Flink-ER: An Elastic Resource-Scheduling Strategy for Processing Fluctuating Mobile Stream Data on Flink"}, {"paperId": "df2a6e7703488e4feb7fd600a1e1ec51617c0aee", "title": "Reasoning Based Workload Performance Prediction in Cloud Data Centers"}, {"paperId": "130c3d61dbc1e2dca982179f6f88dc4bc7a944ab", "title": "Modeling Distributed Stream Processing Systems Under Heavy Workload"}, {"paperId": "c47c8b97fe98c4851155a592ef1d780e4a2b587c", "title": "Simois: A Scalable Distributed Stream Join System with Skewed Workloads"}]}
