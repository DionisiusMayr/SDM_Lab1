{"paperId": "b3bca0bf111b8419c27dacbc3e5b6186684ceb2d", "publicationVenue": {"id": "b02cf974-33be-46bd-9cbc-022db6cb7151", "name": "IEEE International Conference on Software Maintenance and Evolution", "type": "conference", "alternate_names": ["Int Conf Sci Manag Eng", "IEEE Int Conf Softw Maint Evol", "ICSME", "International Conference Science, Management, and Engineering"], "url": "http://conferences.computer.org/icsm/"}, "title": "Assessing Test Case Prioritization on Real Faults and Mutants", "abstract": "Test Case Prioritization (TCP) is an important component of regression testing, allowing for earlier detection of faults or helping to reduce testing time and cost. While several TCP approaches exist in the research literature, a growing number of studies have evaluated them against synthetic software defects, called mutants. Hence, it is currently unclear to what extent TCP performance on mutants would be representative of the performance achieved on real faults. To answer this fundamental question, we conduct the first empirical study comparing the performance of TCP techniques applied to both real-world and mutation faults. The context of our study includes eight well-studied TCP approaches, 35k+ mutation faults, and 357 real-world faults from five Java systems in the Defects4J dataset. Our results indicate that the relative performance of the studied TCP techniques on mutants may not strongly correlate with performance on real faults, depending upon attributes of the subject programs. This suggests that, in certain contexts, the best performing technique on a set of mutants may not be the best technique in practice when applied to real faults. We also illustrate that these correlations vary for mutants generated by different operators depending on whether chosen operators reflect typical faults of a subject program. This highlights the importance, particularly for TCP, of developing mutation operators tailored for specific program domains.", "venue": "IEEE International Conference on Software Maintenance and Evolution", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2018-07-23", "journal": {"name": "2018 IEEE International Conference on Software Maintenance and Evolution (ICSME)", "pages": "240-251"}, "authors": [{"authorId": "144464685", "name": "Qi Luo"}, {"authorId": "1381376597", "name": "Kevin Moran"}, {"authorId": "1697757", "name": "D. Poshyvanyk"}, {"authorId": "1719962", "name": "M. D. Penta"}], "citations": [{"paperId": "2d0975ef1f434e3878825be464e90e086de1129e", "title": "Can Code Representation Boost IR-Based Test Case Prioritization?"}, {"paperId": "472dadd3ddbf1519f76f13d1d013e42a8768342c", "title": "How do Software Engineering Researchers Use GitHub? An Empirical Study of Artifacts & Impact"}, {"paperId": "94c6cd2c20a84d86852487f8d44046bae00b4936", "title": "Cluster-based adaptive test case prioritization"}, {"paperId": "247a0b03605c75ab6be3b59c4d705b99d8c7800a", "title": "On the Reproducibility of Software Defect Datasets"}, {"paperId": "b49a3d0e3e22590887a6fc3c5dab4ee778ac5246", "title": "Optimizing Continuous Integration by Dynamic Test Proportion Selection"}, {"paperId": "9e88a6e3f1068fd4c265966167919d5de70feb55", "title": "HybridCISave: A Combined Build and Test Selection Approach in Continuous Integration"}, {"paperId": "9ce7056180cd7fa70dc747819fd45050e0956904", "title": "Exploring Better Black-Box Test Case Prioritization via Log Analysis"}, {"paperId": "d66d45796f450ba72d787e3269a50c52fe97b045", "title": "Test Case Prioritization Using Partial Attention"}, {"paperId": "c248359cff0cf9d405863fdd22f7ebaa9ccb445c", "title": "Analytic hierarchy process-based regression test case prioritization technique enhancing the fault detection rate"}, {"paperId": "b8410615dbba111166441fc4182486d343543ff9", "title": "On the use of commit-relevant mutants"}, {"paperId": "db26073f44b526992c363191cb8af9677b165b63", "title": "AGA: An Accelerated Greedy Additional Algorithm for Test Case Prioritization"}, {"paperId": "fc3e64291d819f0b51f30a043d9385dc5f92bd59", "title": "ReCover: a Curated Dataset for Regression Testing Research"}, {"paperId": "197d83b1a11088a00d3bace219b80df234bbd749", "title": "Which builds are really safe to skip? Maximizing failure observation for build selection in continuous integration"}, {"paperId": "25a6a38bb83c26fe0f26ec106af53e32735dc296", "title": "Applying test case prioritization to software microbenchmarks"}, {"paperId": "1fd17127fa6488ccd2d4e39dca8e566a82dc93c7", "title": "Reducing cost in continuous integration with a collection of build selection approaches"}, {"paperId": "13bdaaacb669040e7bc07c4c8e2677d328d40a4c", "title": "Performance of Enhanced Multiple-Searching Genetic Algorithm for Test Case Generation in Software Testing"}, {"paperId": "54f976099f97380974db70da27a37ee53547b5a2", "title": "MuKEA-TCP: A Mutant Kill-based Local Search Augmented Evolutionary Algorithm Approach for Test Case Prioritization"}, {"paperId": "fe5720ed8b839df37a50f3866cc92a0925f96eef", "title": "Test case selection and prioritization using machine learning: a systematic literature review"}, {"paperId": "07c97ed8b165ec7fb878c822fbe442e42671c226", "title": "Multiobjective Test Case Prioritization Using Test Case Effectiveness: Multicriteria Scoring Method"}, {"paperId": "a00681012cb21bc55d0b45ce98753959df402375", "title": "Test case prioritization using test case diversification and fault-proneness estimations"}, {"paperId": "e6c8e50fc573b7e2e09da29cc269d97239f1650f", "title": "What Helped, and what did not? An Evaluation of the Strategies to Improve Continuous Integration"}, {"paperId": "7c2344adbf0d0220a6a27eb2f3c4997a7da78416", "title": "Test case prioritization to examine software for fault detection using PCA extraction and K-means clustering with ranking"}, {"paperId": "04dcd39f03f1bd7aaafa256d486e83c1ba45ccaf", "title": "Interpretable Test Case Recommendation based on Knowledge Graph"}, {"paperId": "7d2ce129cda960cc17e2cf4369c4c3de30a2e5ca", "title": "REDUNET: reducing test suites by integrating set cover and network-based optimization"}, {"paperId": "8ebe8f563af166c186d342dd818c02fd2ff2d585", "title": "Ant Colony System With Sorting-Based Local Search for Coverage-Based Test Case Prioritization"}, {"paperId": "68598f59698ededb65d997803db708b7ec7cb853", "title": "Empirically revisiting and enhancing IR-based test-case prioritization"}, {"paperId": "dfd642fea23da87433899b417bfc23a2678f2030", "title": "Regression Test Case Prioritization by Code Combinations Coverage"}, {"paperId": "7485ebfd250c34f30be63c03026fe6186db8f07e", "title": "A Cost-efficient Approach to Building in Continuous Integration"}, {"paperId": "74f5d30d9cec0d83685a2a46b7d1341737cea9b0", "title": "Enabling Mutant Generation for Open- and Closed-Source Android Apps"}, {"paperId": "b4035cfa05c575b201d1258c3cc1398827883bbe", "title": "Test Case Prioritization Based on Path Complexity"}, {"paperId": "537a4dd58babbe7f4612d08aeb091c539b19aa33", "title": "Improvements to test case prioritisation considering efficiency and effectiveness on real faults"}, {"paperId": "2e51408859ca1548869c0959b21ae533fa1fdd35", "title": "An Empirical Study on the Spreading of Fault Revealing Test Cases in Prioritized Suites"}, {"paperId": "60ae7d8186f7525f918d5ef62be9142d4de17557", "title": "An Empirical Study on the Use of Defect Prediction for Test Case Prioritization"}, {"paperId": "c5f2ac87b6806189e4bbaa8cf53e235d3261b8bb", "title": "Leveraging Machine Learning to Improve Software Reliability"}, {"paperId": "04e65ba8493f3f01c65eda8846363ceac5edbc23", "title": "Learning How to Mutate Source Code from Bug-Fixes"}, {"paperId": "759a26e2617450721239904c1946924e93ddfe2a", "title": "Automating Software Development for Mobile Computing Platforms"}, {"paperId": "e1c9ec3ef33448c72f6f3a88e995a310c002481f", "title": "Trend Application of Machine Learning in Test Case Prioritization: A Review on Techniques"}, {"paperId": "6fe954f93f6d3b37e5cac6cee1ca1f9b35faa999", "title": "An Progression of Prioritization Techniques for Test Cases"}, {"paperId": "4c1eeb7fa3a1d72c2ccde80bc5dee11109c4cd21", "title": "Flower Pollination Algorithm for Test Case Prioritization in Regression Testing"}, {"paperId": "9a435ebe4535d588ddb4ab492232f5cf835b7d15", "title": "Learning Code Transformations via Neural Machine Translation"}, {"paperId": "72885d37efe1b1c7ef524d43b242b1f1b3159c9e", "title": "Automated slicing scheme for test case prioritization in regression testing"}]}
