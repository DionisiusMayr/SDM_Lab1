{"paperId": "62caa0f9bf0d81d1162873319935663c03f97631", "publicationVenue": {"id": "d2e111a6-dd60-474c-ae8a-2b5773cca07d", "name": "International Conference on Parallel and Distributed Systems", "type": "conference", "alternate_names": ["Int Conf Parallel Distrib Syst", "ICPADS"], "url": "http://www.wikicfp.com/cfp/program?id=1443"}, "title": "Partitioning and Bucketing Techniques to Speed up Query Processing in Spark-SQL", "abstract": "Horizontal partitioning is an optimization technique applied to improve query processing time in distributed data warehouses. Scanning a large number of HDFS data blocks, to respond to the ad-hoc or OLAP queries, is a heavy operation. We can skip loading unnecessary data blocks if we partition or index some tables by the appropriate predicate attributes. However, the way of selecting the candidate's attributes remains a challenging task to handle. In this paper, we propose a technique based on frequent itemset mining, to Partition, Bucket and Sort the Tables (PBSTs) of a big data warehouse with the more frequent predicate attributes in the queries. We take into account the density of the attributes of the tables, data skew, and the physical characteristics of the cluster nodes. To evaluate our approach, we conducted some experiments in a cluster of 15 slave nodes. Experimental results show that with our method, we improve the query response time by 50 % over existing skipping techniques.", "venue": "International Conference on Parallel and Distributed Systems", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2018-12-01", "journal": {"name": "2018 IEEE 24th International Conference on Parallel and Distributed Systems (ICPADS)", "pages": "142-151"}, "authors": [{"authorId": "2099623725", "name": "Yassine Ramdane"}, {"authorId": "1735803", "name": "Omar Boussa\u00efd"}, {"authorId": "1774419", "name": "N. Kabachi"}, {"authorId": "1739726", "name": "F. Bentayeb"}], "citations": [{"paperId": "5a310852d3eb38d67c43dc2080cc7f72da8b3f48", "title": "Decision-Tree-Based Horizontal Fragmentation Method for Data Warehouses"}, {"paperId": "41eafea6256ab2af225617006eac763b2a420ccd", "title": "LOCAT: Low-Overhead Online Configuration Auto-Tuning of Spark SQL Applications"}, {"paperId": "0d479fbe2c28f50662ae22d2f47d9a692dddf145", "title": "Comparative Analysis of Decision Tree Algorithms for Data Warehouse Fragmentation"}, {"paperId": "a33630380730e4c9302a2dc4dc6c1b4d18b7a441", "title": "CoPart: a context-based partitioning technique for big data"}, {"paperId": "7c6ab6a9114ae84764ea56aa768bc3736edc7fe8", "title": "SkipSJoin: A New Physical Design for Distributed Big Data Warehouses in Hadoop"}]}
