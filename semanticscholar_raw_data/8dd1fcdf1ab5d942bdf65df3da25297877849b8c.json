{"paperId": "8dd1fcdf1ab5d942bdf65df3da25297877849b8c", "publicationVenue": {"id": "528ced1f-e949-4e1a-8fee-2ffbf0be551d", "name": "Conference on Innovative Data Systems Research", "type": "conference", "alternate_names": ["CIDR", "Conf Innov Data Syst Res"], "url": "http://cidrdb.org/"}, "title": "Hardware-conscious Query Processing in GPU-accelerated Analytical Engines", "abstract": "In the last years, modern servers are adopting hardware accelerators, such as GPUs, in order to improve their power ef\ufb01ciency and computational capacity. Modern analytical query processing engines are highly optimized for multi-core multi-CPU query execution, but lack the necessary abstractions to support concurrent hardware-conscious query execution over multiple heterogeneous devices and exploit the available accelerators. This work presents a Heterogeneity-conscious Analytical query Processing Engine (HAPE), a blueprint for hardware-conscious analytical engines for ef\ufb01cient and concurrent multi-CPU multi-GPU query execution. HAPE decomposes query execution on heterogeneous hardware into, 1) ef\ufb01cient single-device and 2) concurrent multi-device query execution. It uses hardware-conscious algorithms designed for single-device execution and combines them into ef\ufb01cient intra-device hardware-conscious execution modules, via code generation. HAPE combines these modules to achieve multi-device execution by handling data and control transfers. We validate our design by building a prototype and evaluating its performance using radix-join co-processing and the TPC-H benchmark. We show that it achieves up to 10x and 3.5x speed-up on the radix-join against CPU and GPU alternatives, respectively, and 1.6x-8x against state-of-the-art CPU-and GPU-based commercial DBMSs on the selected TPC-H queries.", "venue": "Conference on Innovative Data Systems Research", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "66243223", "name": "Periklis Chrysogelos"}, {"authorId": "3416158", "name": "Panagiotis Sioulas"}, {"authorId": "1728318", "name": "A. Ailamaki"}], "citations": [{"paperId": "4d32593f8a4707cb8827b822b9e4686f00d7216e", "title": "Analytical Queries: A Comprehensive Survey"}, {"paperId": "6581a666f0f47df9cda7f0c398fe00c0d27c56a9", "title": "ADAMANT: A Query Executor with Plug-In Interfaces for Easy Co-processor Integration"}, {"paperId": "e59ce42fbf9c6de756739824f4f9e8990d8277b2", "title": "GHive: accelerating analytical query processing in apache hive via CPU-GPU heterogeneous computing"}, {"paperId": "9ecbe5dd1e45ee16e6bb0478ef25d771711bacc4", "title": "Orchestrating Data Placement and Query Execution in Heterogeneous CPU-GPU DBMS"}, {"paperId": "b6faa858b8ec91e52b21ff81c72ef60f1aacab64", "title": "Triton Join: Efficiently Scaling to a Large Join State on GPUs with Fast Interconnects"}, {"paperId": "b6aabbd6cd5c6d65423b904d30df01ff307b73b7", "title": "GHive: A Demonstration of GPU-Accelerated Query Processing in Apache Hive"}, {"paperId": "b3bafa32ee226575bbc5190174dcfa8651dbf535", "title": "A Comprehensive Empirical Study of Query Performance Across GPU DBMSes"}, {"paperId": "7d88407d6fa5cd3c428f443e1b6ec7e267c308a3", "title": "Query Processing on Heterogeneous CPU/GPU Systems"}, {"paperId": "3b3749c7f4862830bfda80c8d8cf84074f8aff10", "title": "TCUDB: Accelerating Database with Tensor Processors"}, {"paperId": "482e4e64fdd13607844d1f715043f03eadbbb3a2", "title": "MG-Join: A Scalable Join for Massively Parallel Multi-GPU Architectures"}, {"paperId": "fb495472fe3445908590dad77c46feaf17c3e299", "title": "NestGPU: Nested Query Processing on GPU"}, {"paperId": "6841406989e6b8bf7a87cfb8725a28c31bc412f6", "title": "Improving Execution Efficiency of Just-in-time Compilation based Query Processing on GPUs"}, {"paperId": "80d03e482d43a09875a9137527dcdce8acaa1737", "title": "Empirical evaluation across multiple GPU-accelerated DBMSes"}, {"paperId": "0672fbfc388dfe7c7f5adafe7ba92be276448b77", "title": "Pump Up the Volume: Processing Large Data on GPUs with Fast Interconnects"}, {"paperId": "2b6c993dbadac04d99cb39aae43eb457555e4f1e", "title": "Distributed Join Algorithms on Multi-CPU Clusters with GPUDirect RDMA"}, {"paperId": "7f731e58bc0138c05ebd78df2ef002dd90694c65", "title": "Parallel Hybrid Join Algorithm on GPU"}, {"paperId": "1885a5f66d862555dd6e93131c0099bb9206631f", "title": "Fluid Co-processing: GPU Bloom-filters for CPU Joins"}, {"paperId": "657eefcf2dab50158a90c25f974300c5fde37e5b", "title": "HetCache: Synergising NVMe Storage and GPU acceleration for Memory-Efficient Analytics"}, {"paperId": "7bb7d401d3238b97109cde91de39812c3e5fa689", "title": "VectorVisor: A Binary Translation Scheme for Throughput-Oriented GPU Acceleration"}, {"paperId": "d67b7d43e04cda818bdcae7a28b342c41c860339", "title": "Post-Moore's Law Fusion: High-Bandwidth Memory, Accelerators, and Native Half-Precision Processing for CPU-Local Analytics"}, {"paperId": "e46c4c1f59d7ab61bcc1e2470067df04cbc2c77a", "title": "\u041c\u043e\u0434\u0435\u043b\u044c \u0437\u0430\u0442\u0440\u0430\u0442 \u0434\u043b\u044f \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u0433\u0435\u0442\u0435\u0440\u043e\u0433\u0435\u043d\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u0445"}, {"paperId": "86f23c2c8e1bf6e5f6855fbd771b7aec936e2ac8", "title": "An Experimental Study across GPU DBMSes toward Cost-Effective Analytical Processing"}, {"paperId": "10adb513cb357e7ff621991a9fe0bcf95ce3f959", "title": "Hardware-Oblivious SIMD Parallelism for In-Memory Column-Stores"}, {"paperId": "2737a61f6557fe7bf53a608c668de2eff1f582f0", "title": "GPU-accelerated data management under the test of time"}, {"paperId": "21810bed01c0873d2568840814465717093f710e", "title": "HetExchange: Encapsulating heterogeneous CPU-GPU parallelism in JIT compiled engines"}]}
