{"paperId": "c47c8b97fe98c4851155a592ef1d780e4a2b587c", "publicationVenue": {"id": "ffe5bb5c-04ed-488e-985d-d3a7b39542cf", "name": "IEEE International Conference on Distributed Computing Systems", "type": "conference", "alternate_names": ["International Conference on Distributed Computing Systems", "IEEE Int Conf Distrib Comput Syst", "Int Conf Device Circuit Syst", "ICDCS", "Int Conf Distrib Comput Syst", "International Conference on Devices, Circuits and Systems"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000213/all-proceedings"}, "title": "Simois: A Scalable Distributed Stream Join System with Skewed Workloads", "abstract": "Many BigData applications require to perform quick join operations on different large-scale real-time data streams. The key challenge to design an efficient stream join system is how to reasonably partition the streaming data among distributed processing nodes to avoid high density of join computation. However, the skewed distribution of real world streams raises great challenges for streaming data partitioning in distributed stream join systems. Existing hash based partitioning schemes incur significant load imbalance which leads to low system throughput and long processing latency, while shuffling based strategies incur redundant join computation and much more communication. To address this issue, in this paper, we propose and implement a scalable distributed stream join system, Simois, which shuffles the potential top heavy-load keys while hashing the others. However, how to identify the keys which lead to the heavy workload imbalance is challenging, because the heavy workload is determined by the current joint status of two streams, and the distribution of the two streams may change with time. To solve this problem, we design a novel efficient exponential counting scheme for identifying the keys with the heaviest workload in the two dynamic streams. The proposed exponential counting scheme needs extremely low computation and space cost, so that it can be well implemented in a stream processing system. Moreover, we design a popularity decline algorithm to make our design adaptive to the highly dynamic changes of streams. We implement Simois on top of Apache Storm and conduct comprehensive experiments using large-scale real world traces. Experiment results show that Simois improves the system throughput significantly by 52% and reduces the average latency by 37%, compared to existing state-of-the-art designs.", "venue": "IEEE International Conference on Distributed Computing Systems", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2019-07-01", "journal": {"name": "2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS)", "pages": "176-185"}, "authors": [{"authorId": "50212920", "name": "Fan Zhang"}, {"authorId": "1713345", "name": "Hanhua Chen"}, {"authorId": "145914256", "name": "Hai Jin"}], "citations": [{"paperId": "63515650fa2f89ba35a0075d1e3f084124ce76c1", "title": "An adaptive load balancing strategy for stateful join operator in skewed data stream environments"}, {"paperId": "0a378fec0f20724abb104361a58260d43babafd8", "title": "Nereus: A Distributed Stream Band Join System With Adaptive Range Partitioning"}, {"paperId": "5061ae9da1a80526e0ba98912cfb7d90fe15b004", "title": "SepJoin: A Distributed Stream Join System with Low Latency and High Throughput"}, {"paperId": "c67057aac7520175d5f5796c0881420d2cdef01e", "title": "An adaptive non-migrating load-balanced distributed stream window join system"}, {"paperId": "33907be08194d8f4262787ad16f05143b589a223", "title": "Guard: Attack-Resilient Adaptive Load Balancing in Distributed Streaming Systems"}, {"paperId": "0c73b48c981eb1b707c58ed0548e7fe441fa1394", "title": "TinyLFU-based semi-stream cache join for near-real-time data warehousing"}, {"paperId": "18150bec397bdf79132f95a0089fd084037bd648", "title": "FATM: A failure\u2010aware adaptive fault tolerance model for distributed stream processing systems"}, {"paperId": "12b712763f26006dcf1d27616eece14d645571ea", "title": "TrioStat: Online Workload Estimation in Distributed Spatial Data Streaming Systems"}, {"paperId": "130c3d61dbc1e2dca982179f6f88dc4bc7a944ab", "title": "Modeling Distributed Stream Processing Systems Under Heavy Workload"}, {"paperId": "ab9a7dc0e236f585242cb4f62ca7ffe5671cdd30", "title": "2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS)"}]}
