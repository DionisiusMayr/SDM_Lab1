{"paperId": "7c6617753e4561ac69ad6cc21f7e6551b167a966", "publicationVenue": {"id": "74f47cf8-2839-4a56-959a-524dd0ed9e3e", "name": "International Conference on Extending Database Technology", "type": "conference", "alternate_names": ["Int Conf Extending Database Technol", "Extending Database Technology", "Extending Database Technol", "EDBT"], "url": "http://www.edbt.org/"}, "title": "Scalable Parallelization of RDF Joins on Multicore Architectures", "abstract": "The RDF data model has emerged as the most prominent way to interlink and exchange data on the Web due to its simplicity in the form of subject predicate object statements, but this simplicity comes with the cost of having to execute a large number of joins in order to get the desirable query results. Numerous approaches exist that aim to treat this problem, mainly focusing on disk based storage. In this work we consider a main memory setting and present a physical design and query method aiming to exploit spatial locality for efficient in-memory processing. Our design is also amenable to straightforward parallelization, something crucial for main memory database systems. Specifically, we present a join implementation that allows to achieve any desired degree of parallelism on arbitrary join queries and RDF graphs stored in memory using compact vertical partitioning. We use an adaptive join processing approach, such that we take advantage of complete or even partial ordering of RDF data, which is compactly stored in order to increase spatial locality and keep memory consumption low, coupled with an ID-to-Position vector index used when ordering does not allow for efficient scanning of the input relation. We have implemented an in-memory prototype that experimentally shows the efficiency and scalability of our proposal, taking advantage of continuously growing sizes of main memory and multi-core environments of modern hardware. Specifically, we show that for a machine with 128 GB of main memory and 16 cores, which is a reasonable amount for an average modern server, our prototype can store and query RDF graphs with up to two billion triples, and it outperforms centralized and distributed state of the art approaches.", "venue": "International Conference on Extending Database Technology", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"pages": "349-360"}, "authors": [{"authorId": "2546269", "name": "D. Bilidas"}, {"authorId": "1746733", "name": "Manolis Koubarakis"}], "citations": [{"paperId": "69238c264f911f55688346bb16640ea8a15e5738", "title": "In-memory parallelization of join queries over large ontological hierarchies"}, {"paperId": "3296874c35f60dfd5d23488cbf2d1beab7f916b3", "title": "The Effects of Different JSON Representations on Querying Knowledge Graphs"}]}
