{"paperId": "52edab318e86afbf541eb4ea33a39737c66ca3f2", "publicationVenue": {"id": "c6840156-ee10-4d78-8832-7f8909811576", "name": "IEEE Transactions on Knowledge and Data Engineering", "type": "journal", "alternate_names": ["IEEE Trans Knowl Data Eng"], "issn": "1041-4347", "url": "https://www.computer.org/web/tkde", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=69"]}, "title": "On Atomicity and Confidentiality Across Blockchains Under Failures", "abstract": "Distributed applications that utilize <italic>heterogeneous</italic> blockchain systems have the potential to be widely deployed. In such applications, users from different blockchains can transact with one another through <italic>cross-chain transactions</italic>. There are two essential features of particular relevance for those applications during cross-chain transactions: the <italic>atomicity</italic> in that either all or none of the blockchains involved confirm a cross-chain transaction, the <italic>confidentiality</italic> in that a blockchain involved in a cross-chain transaction is only accessible for designated users. Existing cross-chain proposals have largely relied on permissioned blockchains to ensure confidentiality. However, we found that failures could occur when reading or writing information during transaction confirmations across permissioned blockchains, namely read/write (r/w) failures, which can lead to the violation of atomicity. In this paper, we propose a novel mechanism, <italic>Unity</italic>, to ensure both atomicity and confidentiality of cross-chain transactions under r/w failures by leveraging permissioned blockchains. When failures occur in reading or writing data, <italic>Unity</italic> classifies the data into two categories based on its status - whether data is the latest version or not, and presents different solutions for atomicity. Specifically, when data is not the latest, we design a four-phase-commit protocol (<inline-formula><tex-math notation=\"LaTeX\">$\\text{4pc}$</tex-math><alternatives><mml:math><mml:mtext>4pc</mml:mtext></mml:math><inline-graphic xlink:href=\"tao-ieq1-3255842.gif\"/></alternatives></inline-formula>), in which consensus on confirming or aborting a cross-chain transaction can be achieved. If data is the latest when r/w failures occur, we propose a smart contract based solution (<inline-formula><tex-math notation=\"LaTeX\">$\\text{SSC}$</tex-math><alternatives><mml:math><mml:mtext>SSC</mml:mtext></mml:math><inline-graphic xlink:href=\"tao-ieq2-3255842.gif\"/></alternatives></inline-formula>). We examine the effectiveness of <italic>Unity</italic> theoretically and through experiments. With a failure probability of 0.7, <italic>Unity</italic> achieves 98% more atomic cross-chain transactions when compared with the state-of-the-art cross-chain platform, Hyperservice.", "venue": "IEEE Transactions on Knowledge and Data Engineering", "year": 2024, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2024-02-01", "journal": {"name": "IEEE Transactions on Knowledge and Data Engineering", "pages": "766-780", "volume": "36"}, "authors": [{"authorId": "48273384", "name": "Yuechen Tao"}, {"authorId": "71788673", "name": "Bo Li"}, {"authorId": "91269142", "name": "Baochun Li"}], "citations": []}
