{"paperId": "899f86566b04e7a79d15cd2df62fbb2e66ec8b75", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Survey of Vector Database Management Systems", "abstract": "There are now over 20 commercial vector database management systems (VDBMSs), all produced within the past five years. But embedding-based retrieval has been studied for over ten years, and similarity search a staggering half century and more. Driving this shift from algorithms to systems are new data intensive applications, notably large language models, that demand vast stores of unstructured data coupled with reliable, secure, fast, and scalable query processing capability. A variety of new data management techniques now exist for addressing these needs, however there is no comprehensive survey to thoroughly review these techniques and systems. We start by identifying five main obstacles to vector data management, namely vagueness of semantic similarity, large size of vectors, high cost of similarity comparison, lack of natural partitioning that can be used for indexing, and difficulty of efficiently answering hybrid queries that require both attributes and vectors. Overcoming these obstacles has led to new approaches to query processing, storage and indexing, and query optimization and execution. For query processing, a variety of similarity scores and query types are now well understood; for storage and indexing, techniques include vector compression, namely quantization, and partitioning based on randomization, learning partitioning, and navigable partitioning; for query optimization and execution, we describe new operators for hybrid queries, as well as techniques for plan enumeration, plan selection, and hardware accelerated execution. These techniques lead to a variety of VDBMSs across a spectrum of design and runtime characteristics, including native systems specialized for vectors and extended systems that incorporate vector capabilities into existing systems. We then discuss benchmarks, and finally we outline research challenges and point the direction for future work.", "venue": "arXiv.org", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2023-10-21", "journal": {"name": "ArXiv", "volume": "abs/2310.14021"}, "authors": [{"authorId": "2261352681", "name": "James Jie Pan"}, {"authorId": "2261394689", "name": "Jianguo Wang"}, {"authorId": "2261575540", "name": "Guoliang Li"}], "citations": [{"paperId": "16c816201eb629a758676a3c1fa4cead50e5f412", "title": "When Large Language Models Meet Vector Databases: A Survey"}, {"paperId": "ee3e676d716d0c7fac1b8ef9456677d8f24bad57", "title": "Translation Aligned Sentence Embeddings for Turkish Language"}, {"paperId": "69d10ea099a2280639bdc43336fd8e4bd4d5ef92", "title": "Are There Fundamental Limitations in Supporting Vector Data Management in Relational Databases? A Case Study of PostgreSQL"}]}
