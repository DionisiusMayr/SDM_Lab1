{"paperId": "f279f95be445461afdfcb3b715fe26b56df06c5e", "publicationVenue": {"id": "2f699b3b-cb0f-4ee8-867d-bb187b8970e7", "name": "Certified Programs and Proofs", "type": "conference", "alternate_names": ["CPP", "Certif Program Proof"]}, "title": "Adapting proof automation to adapt proofs", "abstract": "We extend proof automation in an interactive theorem prover to analyze changes in specifications and proofs. Our approach leverages the history of changes to specifications and proofs to search for a patch that can be applied to other specifications and proofs that need to change in analogous ways. We identify and implement five core components that are key to searching for a patch. We build a patch finding procedure from these components, which we configure for various classes of changes. We implement this procedure in a Coq plugin as a proof-of-concept and use it on real Coq code to change specifications, port definitions of a type, and update the Coq standard library. We show how our findings help drive a future that moves the burden of dealing with the brittleness of small changes in an interactive theorem prover away from the programmer and into automated tooling.", "venue": "Certified Programs and Proofs", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2018-01-08", "journal": {"name": "Proceedings of the 7th ACM SIGPLAN International Conference on Certified Programs and Proofs"}, "authors": [{"authorId": "35064164", "name": "T. Ringer"}, {"authorId": "30402218", "name": "N. Yazdani"}, {"authorId": "143622582", "name": "J. Leo"}, {"authorId": "8319903", "name": "D. Grossman"}], "citations": [{"paperId": "ac104d0c57870168238b7f852ce8cb2007d4e505", "title": "Towards Automatic Transformations of Coq Proof Scripts"}, {"paperId": "c5db7e64a11d62927c5add55f02de338be31b842", "title": "Proof Repair across Quotient Type Equivalences"}, {"paperId": "96cf8c1d10006ad9421a3e783ab03ddb617f65ef", "title": "Mostly Automated Proof Repair for Verified Libraries"}, {"paperId": "d8bfaa478819f3f2e84f73b83ca955fe5af16081", "title": "Automated Reasoning Repair"}, {"paperId": "46983c6016d9830040564e165c2a8e5fb87d4e78", "title": "Deep specification and proof preservation for the CoqTL transformation language"}, {"paperId": "b191899397087f9a49fa61fa8a2b2a009edb6223", "title": "Diversity-Driven Automated Formal Verification"}, {"paperId": "64ed8dd1e69ed2d91f50c907e0531f4beff17df5", "title": "TacTok: semantics-aware proof synthesis"}, {"paperId": "b220120d9744cdeab7e5d7c9728ac5e7d8b4f1f6", "title": "Certifying a rule-based model transformation engine for proof preservation"}, {"paperId": "53f54e04c7e90742ce558a13f2975e6500148e6a", "title": "Proof repair across type equivalences"}, {"paperId": "2bb4a40c8f8e0cfc3dc110af92a9e46974e9dd86", "title": "MCoq: Mutation Analysis for Coq Verification Projects"}, {"paperId": "39e16cc76503befc99fdc7b7451d50a6193aa220", "title": "REPLica: REPL instrumentation for Coq analysis"}, {"paperId": "b122c36c504f7077b7628e31f8e0269732dc47a8", "title": "Challenges in the collaborative evolution of a proof language and its ecosystem. (D\u00e9fis dans l'\u00e9volution collaborative d'un langage de preuve et de son \u00e9cosyst\u00e8me)"}, {"paperId": "72c34aac7bcaa9446d2830a755202335486f4d3d", "title": "QED at Large: A Survey of Engineering of Formally Verified Software"}, {"paperId": "b1b88c6d1f05913be18750ff00e06edd5e1f49ef", "title": "TacticToe: Learning to Prove with Tactics"}, {"paperId": "3585a7d59aca7bc1387e04ad2bf913d9954fe9fa", "title": "Toward Using Fuzzers and Lightweight Specifications to Reveal Semantic Bugs."}, {"paperId": "a8034aa680bda26ac63364ebbb13d75552a7db3f", "title": "Proof Repair Infrastructure for Supervised Models: Building a Large Proof Repair Dataset"}, {"paperId": "c3d4abb2a26d17f0e81cdd04f918a04a62f64918", "title": "Joining Forces! Reusing Contracts for Deductive Verifiers Through Automatic Translation"}, {"paperId": "31d9b53f8b081596a0ebc603edd585202ba4608a", "title": "Research Statement"}, {"paperId": "aba3a679fe7bffe15e372be6cc1f8f9897902f9d", "title": "Ornaments for Proof Reuse in Coq"}, {"paperId": "8716678afdf0cc23de956d86c66743399b59d8eb", "title": "26 : 2 Ornaments for Proof Reuse in Coq list"}, {"paperId": "1b5841f8ff7f8a58758333767e1a23a541a24d27", "title": "Automation for Proof Engineering: Machine-Checked Proofs At Scale"}, {"paperId": "7cac50d753510d363d90756eedec5aec004a02a4", "title": "Fast and wrong: The case for formally specifying hardware with LLMs"}]}
