{"paperId": "33558f35e826af941c4c919cb50fb75a265f4879", "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99", "name": "International Conference on Architectural Support for Programming Languages and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS", "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program Lang Oper Syst", "Architectural Support for Programming Languages and Operating Systems"], "url": "http://www.acm.org/sigplan/"}, "title": "DiGraph: An Efficient Path-based Iterative Directed Graph Processing System on Multiple GPUs", "abstract": "Many systems are recently proposed for large-scale iterative graph analytics on a single machine with GPU accelerators. Despite of many research efforts, for iterative directed graph processing over GPUs, existing solutions suffer from slow convergence speed and high data access cost, because many vertices are ineffectively reprocessed for lots of rounds so as to update their states according to other active vertices regardless of their dependencies. In this paper, we propose a novel and efficient iterative directed graph processing system on a machine with the support of multiple GPUs. Compared with existing systems, the unique feature of our system is that it takes advantage of the dependencies between vertices in three novel ways. First, it represents a directed graph into a set of disjoint hot/cold directed paths and takes the path as the basic parallel processing unit, so as to help efficient vertex state propagation along the paths over GPUs for faster convergence speed and higher utilization ratio of the loaded data. Second, it tries to dispatch the paths to GPUs for parallel processing according to the topological order of the dependency graph of them. Many paths then converge along such an order after processing them for exactly once, getting lower reprocessing overhead. Third, a path scheduling strategy is further developed on each streaming multiprocessor to enable the privileged execution of the paths (e.g., the hot paths) with greater impacts on vertex state propagation for shorter convergence time according to vertex dependency. Experimental results show that our approach speeds up iterative directed graph processing by up to 3.54 times in comparison with the state-of-the-art systems.", "venue": "International Conference on Architectural Support for Programming Languages and Operating Systems", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2019-04-04", "journal": {"name": "Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems"}, "authors": [{"authorId": "72095113", "name": "Yu Zhang"}, {"authorId": "144925807", "name": "Xiaofei Liao"}, {"authorId": "145914256", "name": "Hai Jin"}, {"authorId": "143824511", "name": "Bingsheng He"}, {"authorId": "2109500825", "name": "Haikun Liu"}, {"authorId": "144204231", "name": "Lin Gu"}], "citations": [{"paperId": "83d06bb5b982a890714654dda13553538fcab881", "title": "ACGraph: Accelerating Streaming Graph Processing via Dependence Hierarchy"}, {"paperId": "a818c337a115d9b19da6a582d6cfc55310a8805e", "title": "SaGraph: A Similarity-aware Hardware Accelerator for Temporal Graph Processing"}, {"paperId": "b026fa23f0f73e18004a0ac909476cb205ff967e", "title": "EGraph: Efficient Concurrent GPU-Based Dynamic Graph Processing"}, {"paperId": "d02fb455cbe1d38ace836f6d2daae81c09e69b61", "title": "Efficient Multi-GPU Graph Processing with Remote Work Stealing"}, {"paperId": "c4a6e58251c07dc7d14dee2bd210e589242974cf", "title": "Incremental Connected Component Detection for Graph Streams on GPU"}, {"paperId": "3f5701f0b8ae2a039635d2486123f52bb6a1711c", "title": "Glign: Taming Misaligned Graph Traversals in Concurrent Graph Processing"}, {"paperId": "d214f924d67771db63437eafc61a65e77a2cc3a4", "title": "AI Model Utilization Measurements For Finding Class Encoding Patterns"}, {"paperId": "17f3d9b84c21cfc313d5c11f9efba37605cade94", "title": "Software Systems Implementation and Domain-Specific Architectures towards Graph Analytics"}, {"paperId": "d46a10610ed00bb41c65870137a8f07d63cf109a", "title": "GGraph: An Efficient Structure-Aware Approach for Iterative Graph Processing"}, {"paperId": "3b9e59e91d99a49122124b25d58e8a1a887e448b", "title": "HyTGraph: GPU-Accelerated Graph Processing with Hybrid Transfer Management"}, {"paperId": "c8ae9b653bbb58b474735032128b113a24cf37f1", "title": "Bring orders into uncertainty: enabling efficient uncertain graph processing via novel path sampling on multi-accelerator systems"}, {"paperId": "05f587341a403ba2efb8836d5dc89fad16a29f77", "title": "Krill: A Compiler and Runtime System for Concurrent Graph Processing"}, {"paperId": "4595404a30579368ffb6f15f0b96cf346c5d0658", "title": "LargeGraph"}, {"paperId": "482e4e64fdd13607844d1f715043f03eadbbb3a2", "title": "MG-Join: A Scalable Join for Massively Parallel Multi-GPU Architectures"}, {"paperId": "862b475d2602000bac075513eec35f3de668f9fe", "title": "PolyGraph: Exposing the Value of Flexibility for Graph Processing Accelerators"}, {"paperId": "aca12a7880c70a09b8e1e6cdbca08ffa35e95c3a", "title": "GraphPEG"}, {"paperId": "0d6c6e8d01945b9664c8cd9ac704888149dec5e2", "title": "DGCL: an efficient communication library for distributed GNN training"}, {"paperId": "a92ac38658b3a7f75e1836b9d9b6c41b21c40d79", "title": "Compiling Graph Applications for GPU s with GraphIt"}, {"paperId": "b37c5a96fe2f3389d9fe3addb8812634abb82164", "title": "Grus"}, {"paperId": "c130448814f002df3d82df61533d7f8a1d434e68", "title": "DepGraph: A Dependency-Driven Accelerator for Efficient Iterative Graph Processing"}, {"paperId": "974a06b07fc2d51b14a37d1fca5cb16ee1fef306", "title": "Compilation Techniques for Graph Algorithms on GPUs"}, {"paperId": "6d31f0391547e6a56e63cf88948807c675650a5b", "title": "AsynGraph"}, {"paperId": "3bbb1f931400b86e0b81e1e64a7834aeebdb49c6", "title": "G3"}, {"paperId": "465a768ffbf42834d07168e40bf6f657ed7e3e0d", "title": "EMOGI: Efficient Memory-access for Out-of-memory Graph-traversal In GPUs"}, {"paperId": "8691eeb5bb957050c69bd698b96e050bbe78aaba", "title": "Subway: minimizing data transfer during out-of-GPU-memory graph processing"}, {"paperId": "8fee8103ec32f8629a64aba2497b4c2b29c1ada0", "title": "GraphMap: scalable iterative graph processing using NoSQL"}, {"paperId": "ba7e3767594d2dcefcde605b43f823f783dbd5a0", "title": "GraphM: an efficient storage system for high throughput of concurrent graph processing"}, {"paperId": "078c8da67b462d20a5ebb4d7f58e025d9331b96c", "title": "GreenEdge: Greening Edge Datacenters with Energy-Harvesting IoT Devices"}, {"paperId": "bfbd3f389cd32e28deaf7c8bf27e0e2e706a6920", "title": "CGraph"}, {"paperId": "64feee191aef7681eff2efadec5fe72bf7351dc9", "title": "aDFS: An Almost Depth-First-Search Distributed Graph-Querying System"}]}
