{"paperId": "3f0ae66975dce667aead28a68532f3f00494e93e", "publicationVenue": {"id": "e95c8d18-09be-464f-a3cf-5b2637f0eff6", "name": "Algorithms", "type": "journal", "issn": "1999-4893", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-150910", "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-150910", "http://www.mdpi.com/journal/algorithms", "http://www.mdpi.com/journal/algorithms/"]}, "title": "Revisiting the Design of Parallel Stream Joins on Trusted Execution Environments", "abstract": "The appealing properties of secure hardware solutions such as trusted execution environment (TEE) including low computational overhead, confidentiality guarantee, and reduced attack surface have prompted considerable interest in adopting them for secure stream processing applications. In this paper, we revisit the design of parallel stream join algorithms on multicore processors with TEEs. In particular, we conduct a series of profiling experiments to investigate the impact of alternative design choices to parallelize stream joins on TEE including: (1) execution approaches, (2) partitioning schemes, and (3) distributed scheduling strategies. From the profiling study, we observe three major high-performance impediments: (a) the computational overhead introduced with cryptographic primitives associated with page swapping operations, (b) the restrictive Enclave Page Cache (EPC) size that limits the supported amount of in-memory processing, and (c) the lack of vertical scalability to support the increasing workload often required for near real-time applications. Addressing these issues allowed us to design SecJoin, a more efficient parallel stream join algorithm that exploits modern scale-out architectures with TEEs rendering no trade-offs on security whilst optimizing performance. We present our model-driven parameterization of SecJoin and share our experimental results which have shown up to 4-folds of improvements in terms of throughput and latency.", "venue": "Algorithms", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-05-25", "journal": {"name": "Algorithms", "pages": "183", "volume": "15"}, "authors": [{"authorId": "1396613197", "name": "S. Meftah"}, {"authorId": "2188004", "name": "Shuhao Zhang"}, {"authorId": "2097860", "name": "B. Veeravalli"}, {"authorId": "1685959", "name": "Khin Mi Mi Aung"}], "citations": [{"paperId": "341ffc8e6c7fb06ed3b3338504e4c2457d3990f4", "title": "A Survey on Transactional Stream Processing"}]}
