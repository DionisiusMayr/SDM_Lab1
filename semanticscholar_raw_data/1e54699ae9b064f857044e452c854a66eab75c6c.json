{"paperId": "1e54699ae9b064f857044e452c854a66eab75c6c", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Approximate Distributed Joins in Apache Spark", "abstract": "The join operation is a fundamental building block of parallel data processing. Unfortunately, it is very resource-intensive to compute an equi-join across massive datasets. The approximate computing paradigm allows users to trade accuracy and latency for expensive data processing operations. The equi-join operator is thus a natural candidate for optimization using approximation techniques. Although sampling-based approaches are widely used for approximation, sampling over joins is a compelling but challenging task regarding the output quality. Naive approaches, which perform joins over dataset samples, would not preserve statistical properties of the join output. \nTo realize this potential, we interweave Bloom filter sketching and stratified sampling with the join computation in a new operator, ApproxJoin, that preserves the statistical properties of the join output. ApproxJoin leverages a Bloom filter to avoid shuffling non-joinable data items around the network and then applies stratified sampling to obtain a representative sample of the join output. \nOur analysis shows that ApproxJoin scales well and significantly reduces data movement, without sacrificing tight error bounds on the accuracy of the final results. We implemented ApproxJoin in Apache Spark and evaluated ApproxJoin using microbenchmarks and real-world case studies. The evaluation shows that ApproxJoin achieves a speedup of 6-9x over unmodified Spark-based joins with the same sampling rate. Furthermore, the speedup is accompanied by a significant reduction in the shuffled data volume, which is 5-82x less than unmodified Spark-based joins.", "venue": "arXiv.org", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2018-05-15", "journal": {"name": "ArXiv", "volume": "abs/1805.05874"}, "authors": [{"authorId": "2265023", "name": "D. Quoc"}, {"authorId": "2282441", "name": "Istemi Ekin Akkus"}, {"authorId": "3025359", "name": "Pramod Bhatotia"}, {"authorId": "3264757", "name": "Spyros Blanas"}, {"authorId": "2042672", "name": "Ruichuan Chen"}, {"authorId": "145494211", "name": "C. Fetzer"}, {"authorId": "143850196", "name": "T. Strufe"}], "citations": [{"paperId": "fed0952cd2cbac2124a3d0ab6ab928a13d587f26", "title": "Optimized Bootstrap Sampling for \u03c3-AQP Error Estimation: A Pilot Study"}, {"paperId": "a96405df7f3b6318d31f088e3988fe93dbecc949", "title": "TensorSCONE: A Secure TensorFlow Framework using Intel SGX"}, {"paperId": "b3156132c5724995275a7f77f4442ff3f1f47c46", "title": "A Survey on Spark Ecosystem for Big Data Processing"}, {"paperId": "e248079fd2706e432dc8c8774fd7f37b94ced7ca", "title": "ApproxJoin: Approximate Distributed Joins"}, {"paperId": "31960fc841e833825f280e28093ab65ccc493cfd", "title": "Approximate Edge Analytics for the IoT Ecosystem"}, {"paperId": "1d52abd9633de905b33e9b8400f423f96cd97dd6", "title": "Non-Parametric Error Estimation for \u03c3 -AQP using Optimized Bootstrap Sampling"}, {"paperId": "8188f1399a77e02d18e7f0b196f88d9c64ee1ae5", "title": "Error Assessment for Multi-Join AQP using Bootstrap Sampling"}]}
