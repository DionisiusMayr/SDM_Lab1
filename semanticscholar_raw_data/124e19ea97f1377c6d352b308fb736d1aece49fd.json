{"paperId": "124e19ea97f1377c6d352b308fb736d1aece49fd", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Insert-Only versus Insert-Delete in Dynamic Query Evaluation", "abstract": "We study the dynamic query evaluation problem: Given a join query Q and a stream of updates, we would like to construct a data structure that supports constant-delay enumeration of the query output after each update. We show that a stream of N insert-only updates (to an initially empty database) can be executed in total time O(N^{w(Q)}), where w(Q) is the fractional hypertree width of Q. This matches the complexity of the static query evaluation problem for Q and a database of size N. One corollary is that the average time per single-tuple insert is constant for acyclic joins. In contrast, we show that a stream of N insert-and-delete updates to Q can be executed in total time O(N^{w(Q')}), where Q' is obtained from Q by extending every relational atom with extra variables that represent the\"lifespans\"of tuples in Q. We show that this reduction is optimal in the sense that the static evaluation runtime of Q' provides a lower bound on the total update time of Q. Our approach recovers the optimal single-tuple update time for known queries such as the hierarchical and Loomis-Whitney join queries.", "venue": "arXiv.org", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-12-14", "journal": {"name": "ArXiv", "volume": "abs/2312.09331"}, "authors": [{"authorId": "2274932546", "name": "Mahmoud Abo Khamis"}, {"authorId": "2238571585", "name": "Ahmet Kara"}, {"authorId": "1756801", "name": "Dan Olteanu"}, {"authorId": "2274930966", "name": "Dan Suciu"}], "citations": []}
