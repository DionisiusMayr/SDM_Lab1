{"paperId": "ad1415eb37667bf16177c5922670b6cbe137d269", "publicationVenue": {"id": "b9083d6f-6a0b-458f-b91b-ac82b9afdf3c", "name": "ACM SIGOPS Operating Systems Review", "type": "journal", "alternate_names": ["ACM SIGOPS Oper Syst Rev", "Operating Systems Review", "Oper Syst Rev"], "issn": "0163-5980", "url": "http://portal.acm.org/sigops/newsletter"}, "title": "GraphZero", "abstract": "Subgraph matching is a fundamental task in many applications which identifies all the embeddings of a query pattern in an input graph. Compilation-based subgraph matching systems generate specialized implementations for the provided patterns and often substantially outperform other systems. However, the generated code causes significant computation redundancy and the compilation process incurs too much overhead to be used online, both due to the inherent symmetry in the structure of the query pattern. In this paper, we propose an optimizing query compiler, named GraphZero, to completely address these limitations through symmetry breaking based on group theory. GraphZero implements three novel techniques. First, its schedule explorer efficiently prunes the schedule space without missing any high-performance schedule. Second, it automatically generates and enforces a set of restrictions to eliminate computation redundancy. Third, it generalizes orientation, a surprisingly effective optimization that was only used for clique patterns, to apply to arbitrary patterns. Evaluation on multiple query patterns shows that GraphZero outperforms two state-of-the-art compilation and non-compilation based systems by up to 40X and 2654X, respectively.", "venue": "ACM SIGOPS Operating Systems Review", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-06-02", "journal": {"name": "ACM SIGOPS Operating Systems Review", "pages": "21 - 37", "volume": "55"}, "authors": [{"authorId": "27998850", "name": "Daniel Mawhirter"}, {"authorId": "1438304186", "name": "Sam Reinehr"}, {"authorId": "2059083875", "name": "Connor Holmes"}, {"authorId": "1870340", "name": "Tongping Liu"}, {"authorId": "144397979", "name": "Bo Wu"}], "citations": [{"paperId": "91e9f0d35d595c4dc5fbf9a2da011eac43cfa0cc", "title": "Exploiting Fine-Grained Redundancy in Set-Centric Graph Pattern Mining"}, {"paperId": "48669df0e9c05b580eda3892e39e25177b4fcf14", "title": "GraphPar: Efficient Workload-Aware Subgraph Matching System on Multiple GPUs"}, {"paperId": "1bb10600aa2ebc639a878fde3b0c75471abd0da5", "title": "Shogun: A Task Scheduling Framework for Graph Mining Accelerators"}, {"paperId": "53c4182dfd692fbf7e35a3f753842db5153b759d", "title": "Accelerating Graph Mining Systems with Subgraph Morphing"}, {"paperId": "08d5460338c944f223f74427107eabe353fd9e94", "title": "An efficient pruning method for subgraph matching in large-scale graphs"}, {"paperId": "d1856698e761c6f513983deafe0391aceb28406e", "title": "Khuzdul: Efficient and Scalable Distributed Graph Pattern Mining Engine"}, {"paperId": "7f364ec437131ab30be998be39b0c7cfa05c3a79", "title": "DecoMine: A Compilation-Based Graph Pattern Mining System with Pattern Decomposition"}, {"paperId": "4889d2241bc2fd4e2c2f3c322bea4569b6c49bad", "title": "Efficient Strategies for Graph Pattern Mining Algorithms on GPUs"}, {"paperId": "17f3d9b84c21cfc313d5c11f9efba37605cade94", "title": "Software Systems Implementation and Domain-Specific Architectures towards Graph Analytics"}, {"paperId": "9a168f5bbd5110a375b664c2c8e7d432d2146956", "title": "Kudu: An Efficient and Scalable Distributed Graph Pattern Mining Engine"}]}
