{"paperId": "21810bed01c0873d2568840814465717093f710e", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "HetExchange: Encapsulating heterogeneous CPU-GPU parallelism in JIT compiled engines", "abstract": "Modern server hardware is increasingly heterogeneous as hardware accelerators, such as GPUs, are used together with multicore CPUs to meet the computational demands of modern data analytics workloads.Unfortunately, query parallelization techniques used by analytical database engines are designed for homogeneous multicore servers, where query plans are parallelized across CPUs to process data stored in cache coherent shared memory. Thus, these techniques are unable to fully exploit available heterogeneous hardware, where one needs to exploit task-parallelism of CPUs and data-parallelism of GPUs for processing data stored in a deep, noncache-coherent memory hierarchy with widely varying access latencies and bandwidth. In this paper, we introduce HetExchange-a parallel query execution framework that encapsulates the heterogeneous parallelism of modern multi-CPU-multi-GPU servers and enables the parallelization of (pre-)existing sequential relational operators. In contrast to the interpreted nature of traditional Exchange, HetExchange is designed to be used in conjunction with JIT compiled engines in order to allow a tight integration with the proposed operators and generation of efficient code for heterogeneous hardware. We validate the applicability and efficiency of our design by building a prototype that can operate over both CPUs and GPUs, and enables its operators to be parallelismand data-location-agnostic. In doing so, we show that efficiently exploiting CPU-GPU parallelism can provide 2.8x and 6.4x improvement in performance compared to state-of-the-art CPU-based and GPU-based DBMS. PVLDB Reference Format: P. Chrysogelos, M. Karpathiotakis, R. Appuswamy, and A. Ailamaki. HetExchange: Encapsulating heterogeneous CPU-GPU parallelism in JIT compiled engines. PVLDB, 12(5): 544-556, 2019. DOI: https://doi.org/10.14778/3303753.3303760", "venue": "Proceedings of the VLDB Endowment", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal": {"name": "Proc. VLDB Endow.", "pages": "544-556", "volume": "12"}, "authors": [{"authorId": "66243223", "name": "Periklis Chrysogelos"}, {"authorId": "1943226", "name": "M. Karpathiotakis"}, {"authorId": "32113594", "name": "Raja Appuswamy"}, {"authorId": "1728318", "name": "A. Ailamaki"}], "citations": [{"paperId": "cd061dc4053179c702a0f41e7859ecb8e78dbde3", "title": "Unlocking the power of industrial artificial intelligence towards Industry 5.0: Insights, pathways, and challenges"}, {"paperId": "4bb3e0b4761c07f602b8553bff5bd4ef1421ee78", "title": "HeteroPP: A directive\u2010based heterogeneous cooperative parallel programming framework"}, {"paperId": "9920d14a762231122035fbefab3bfd5983a5298a", "title": "Context-Enhanced Relational Operators with Vector Embeddings"}, {"paperId": "df3e456ed971931a5840a777106d184481f94a3c", "title": "Efficiently Processing Large Relational Joins on GPUs"}, {"paperId": "0ce26a9483701d628584a7d1521960fe41c5e326", "title": "BOSS - An Architecture for Database Kernel Composition"}, {"paperId": "4d32593f8a4707cb8827b822b9e4686f00d7216e", "title": "Analytical Queries: A Comprehensive Survey"}, {"paperId": "f5883db53ba11c20e3e93b2b3cea9272448dad81", "title": "GPU Database Systems Characterization and Optimization"}, {"paperId": "0985e38dc2ac36eb26c5c0c195b5d5725a5583dc", "title": "Declarative Sub-Operators for Universal Data Processing"}, {"paperId": "b1cb61738287494acd7541301f1951e7e1ae6275", "title": "Accelerating User-Defined Aggregate Functions (UDAF) with Block-wide Execution and JIT Compilation on GPUs"}, {"paperId": "0b9584de2f1a5e4f2ea65cee5867a1cbf22ce129", "title": "LAQy: Efficient and Reusable Query Approximations via Lazy Sampling"}, {"paperId": "edb0c0907548a72220ca375aeda8fe9d2cceea61", "title": "FlowKV: A Semantic-Aware Store for Large-Scale State Management of Stream Processing Engines"}, {"paperId": "6581a666f0f47df9cda7f0c398fe00c0d27c56a9", "title": "ADAMANT: A Query Executor with Plug-In Interfaces for Easy Co-processor Integration"}, {"paperId": "c66760621fc70e8a4f04e001df130e39589ce00a", "title": "RTIndeX: Exploiting Hardware-Accelerated GPU Raytracing for Database Indexing"}, {"paperId": "9f84a46439e24d726e5efe040f7a552db966c424", "title": "Revisiting Query Performance in GPU Database Systems"}, {"paperId": "dff0e6b1b327ab13be7ef42bbb2567c94d551f95", "title": "Analytical Engines With Context-Rich Processing: Towards Efficient Next-Generation Analytics"}, {"paperId": "93e30a02c9ceb8c5fb8e85e42023b26f938c317e", "title": "D-Cubicle: boosting data transfer dynamically for large-scale analytical queries in single-GPU systems"}, {"paperId": "e59ce42fbf9c6de756739824f4f9e8990d8277b2", "title": "GHive: accelerating analytical query processing in apache hive via CPU-GPU heterogeneous computing"}, {"paperId": "9ecbe5dd1e45ee16e6bb0478ef25d771711bacc4", "title": "Orchestrating Data Placement and Query Execution in Heterogeneous CPU-GPU DBMS"}, {"paperId": "2945b18928a36ac1a42f1b8bc1ecdd67056d1a1e", "title": "Sampling-Based AQP in Modern Analytical Engines"}, {"paperId": "c818b6af5c0657b9a29c8195dbb143f25390bc16", "title": "HPCache: Memory-Efficient OLAP Through Proportional Caching"}, {"paperId": "b6faa858b8ec91e52b21ff81c72ef60f1aacab64", "title": "Triton Join: Efficiently Scaling to a Large Join State on GPUs with Fast Interconnects"}, {"paperId": "300823792f3854a857c452259455fe4b162c3104", "title": "Query Processing on Tensor Computation Runtimes"}, {"paperId": "7d88407d6fa5cd3c428f443e1b6ec7e267c308a3", "title": "Query Processing on Heterogeneous CPU/GPU Systems"}, {"paperId": "a675f9e3ee49a1ffaabdca86d2c249ca517d0224", "title": "Development of a CPU-GPU heterogeneous platform based on a nonlinear parallel algorithm"}, {"paperId": "5929a2b0b6a256a08917a39bc2ae298cd4759c67", "title": "Fine-Grained Multi-Query Stream Processing on Integrated Architectures"}, {"paperId": "b906b82b80bfa010568d68997a1696ca0dba7d63", "title": "Hardware-Conscious Sliding Window Aggregation on GPUs"}, {"paperId": "482e4e64fdd13607844d1f715043f03eadbbb3a2", "title": "MG-Join: A Scalable Join for Massively Parallel Multi-GPU Architectures"}, {"paperId": "fb495472fe3445908590dad77c46feaf17c3e299", "title": "NestGPU: Nested Query Processing on GPU"}, {"paperId": "073471cf36f7246e26c4fd765e8eaf7cb9e86d27", "title": "ShadowVM: accelerating data plane for data analytics with bare metal CPUs and GPUs"}, {"paperId": "6841406989e6b8bf7a87cfb8725a28c31bc412f6", "title": "Improving Execution Efficiency of Just-in-time Compilation based Query Processing on GPUs"}, {"paperId": "bc61dce150ff871386f85481970bfc1d1c10941c", "title": "Out-of-order execution of database queries"}, {"paperId": "a650825f753f3b542859e9a917cceb0fd47d1c06", "title": "One size does not fit all: accelerating OLAP workloads with GPUs"}, {"paperId": "d1e5895464861da9204ff6637709cef80ade5b01", "title": "XeFlow: Streamlining Inter-Processor Pipeline Execution for the Discrete CPU-GPU Platform"}, {"paperId": "0672fbfc388dfe7c7f5adafe7ba92be276448b77", "title": "Pump Up the Volume: Processing Large Data on GPUs with Fast Interconnects"}, {"paperId": "06d04ab17369511a870505488b14d9a190684953", "title": "Adaptive HTAP through Elastic Resource Scheduling"}, {"paperId": "a4a77c58933dfac2130caeb419ba077b7bcda21b", "title": "Database Processing-in-Memory: An Experimental Study"}, {"paperId": "afe18462b598c98c9e83315e7caf895dbef141d1", "title": "In-Memory Join Algorithms on GPUs for Large-Data"}, {"paperId": "1885a5f66d862555dd6e93131c0099bb9206631f", "title": "Fluid Co-processing: GPU Bloom-filters for CPU Joins"}, {"paperId": "275651532d622b2bafc31abd3d5f1320460bc52b", "title": "Micro-architectural analysis of in-memory OLTP: Revisited"}, {"paperId": "657eefcf2dab50158a90c25f974300c5fde37e5b", "title": "HetCache: Synergising NVMe Storage and GPU acceleration for Memory-Efficient Analytics"}, {"paperId": "d67b7d43e04cda818bdcae7a28b342c41c860339", "title": "Post-Moore's Law Fusion: High-Bandwidth Memory, Accelerators, and Native Half-Precision Processing for CPU-Local Analytics"}, {"paperId": "13d9af4cc7fa0b480999bdb859243c87f9670d31", "title": "Boosting Efficiency of External Pipelines by Blurring Application Boundaries"}, {"paperId": "7c6ed0ff29cb7298082527c4cba6f9869097a05b", "title": "Exploring Query Processing on CPU-GPU Integrated Edge Device"}, {"paperId": "c7a121bdd33850a64eddf1e38bd82d31c5ffc27d", "title": "Storage Management in Smart Data Lake"}, {"paperId": "2737a61f6557fe7bf53a608c668de2eff1f582f0", "title": "GPU-accelerated data management under the test of time"}, {"paperId": "82e42ec3fdb7d76fdd3804b1b18bc01a5ee58cd4", "title": "FineStream: Fine-Grained Window-Based Stream Processing on CPU-GPU Integrated Architectures"}, {"paperId": "b6afd55750298c9dd0d8e6a484582addbf381ff9", "title": "CPU CPU GPU GPU GPU GPU Static Resource Allocator Dynamic Resource Allocator Mem Mem Mem Mem Mem Mem Runtime Query Optimization CPU backend GPU backend \u2a1d \u03c3 \u0393 \u2a1d"}, {"paperId": "8dd1fcdf1ab5d942bdf65df3da25297877849b8c", "title": "Hardware-conscious Query Processing in GPU-accelerated Analytical Engines"}, {"paperId": "eb3adc351e46619ebec37d71a453a13a5078e33c", "title": "Hardware-conscious Query Processing in GPU-accelerated Analytical Engines"}]}
