{"paperId": "b09f7114a6f4100a377a91a30c03892acf1ab76a", "publicationVenue": null, "title": "Anchor: Fast and Precise Value-Flow Analysis for Containers via Memory Orientation", "abstract": "s the properties of the data structures by logical formulae, and reasons the speciication of each interface of the data structures symbolically. The speciications obtained by symbolic reasoning are sound, while they often only concern the restrictive forms of the linkage properties [79] and numeric properties [95], and are also quite brittle in real-world programs. The second kind of approaches synthesizes the data structure speciications by leveraging learning techniques [73, 98]. Speciically, they utilize the runtime states of the data structure interfaces [98] or the usage of data structures in the client programs to infer the possible speciications [73]. However, they often rely on a given template for the inference, not considering the numeric properties in most cases. We believe it is meaningful to identify whether a data structure is a container and determine the more expressive behavior of its interfaces. A variety of container analyses, such as container-aware pointer analysis [31, 35], and container type optimization [99], can beneit from the speciications inferred automatically. 10.5 SMT Solving Optimization There have been several studies optimizing the SMT solving process in the program analysis based on the program information. One typical category of the studies leverages the semantic information to assist the SMT solving [100\u015b 103]. For example, the interval and data-dependency information are utilized to guide the branching heuristic in the SAT solving phase [101]. Another typical category of the studies achieves the program transformations which preserve the semantic equivalence, and constructs the constraints based on the new program, unleashing the power of the optimized constraint solvers to improve the eiciency of the solving [72, 104]. For instance, when the array only contains the constant values, the array operations are transformed to the comparison of the indexes, which can be represented in the bit-vector theory [72]. The transformation is essentially the process of applying array axioms for the particular kind of arrays, making the analysis beneit from the eiciency of the solving procedure of the bit-vector theory. Anchor bears similarities to the idea in [72]. Speciically, it specializes the container axioms for the anchored containers to simplify the constraints and enables a precise value low analysis without solving the sophisticated formulae in the combined theory of linear integer arithmetic and uninterpreted functions [35]. It is a promising direction to discover and leverage speciic operation patterns to perform eicient and precise reasoning on the data structures. 11 CONCLUSION We have described Anchor to analyze value lows for containers. Anchor identiies anchored containers automatically for strong updates in the memory orientation analysis and discovers the precise value lows through containers, promoting a variety of client analyses. As a result, it produces more precise thin slices and uncovers 20 NPEs with only two false positives. It outperforms the state-of-the-art value low analyses and container reasoning techniques in terms of precision and scalability, and features in the ability to analyze millions of lines of code. We expect the underlying insight of Anchor to beneit various clients of analyzing container-manipulating programs, such as program understanding and bug detection. ACKNOWLEDGMENTS We thank Professor Eric Bodden and the anonymous reviewers for valuable feedback on earlier drafts, which helped improve its presentation. We also appreciate Dr. Gang Fan for insightful discussions. The authors are supported by the RGC16206517, ITS/440/18FP and PRP/004/21FX grants from the Hong Kong Research Grant Council and the Innovation and Technology Commission, Ant Group, and the donations from Microsoft and Huawei. This work was inished when Qingkai Shi was with Ant Group. He is currently with Purdue University and is available via email at shi553@purdue.edu. Peisen Yao is the corresponding author. ACM Trans. Softw. Eng. Methodol. Anchor: Fast and Precise Value-Flow Analysis for Containers via Memory Orientation \u2022 33", "venue": "", "year": 2022, "fieldsOfStudy": null, "publicationTypes": ["Review"], "publicationDate": null, "journal": null, "authors": [{"authorId": "2285606899", "name": "Chengpeng Wang"}], "citations": [{"paperId": "dcf3d45adfe1bcd1ea7bb08dde4c834bed2c2bb2", "title": "Anchor: Fast and Precise Value-flow Analysis for Containers via Memory Orientation"}]}
