{"paperId": "c15f67c1ad3d92f2c4ec8678bbb9bb28db4202d1", "publicationVenue": {"id": "b664ddb8-e5a5-4e6c-a234-3c402b801778", "name": "European Conference on Object-Oriented Programming", "type": "conference", "alternate_names": ["ECOOP", "Eur Conf Object-oriented Program"], "url": "http://www.ecoop.org/"}, "title": "Breaking the Negative Cycle: Exploring the Design Space of Stratification for First-Class Datalog Constraints", "abstract": "The \u03bb Dat calculus brings together the power of functional and declarative logic programming in one language. In \u03bb Dat , Datalog constraints are first-class values that can be constructed, passed around as arguments, returned, composed with other constraints, and solved. A significant part of the expressive power of Datalog comes from the use of negation. Stratified negation is a particularly simple and practical form of negation accessible to ordinary programmers. Stratification requires that Datalog programs must not use recursion through negation. For a Datalog program, this requirement is straightforward to check, but for a \u03bb Dat program, it is not so simple: A \u03bb Dat program constructs, composes, and solves Datalog programs at runtime. Hence stratification cannot readily be determined at compile-time. In this paper, we explore the design space of stratification for \u03bb Dat . We investigate strategies to ensure, at compile-time, that programs constructed at runtime are guaranteed to be stratified, and we argue that previous design choices in the Flix programming language have been suboptimal.", "venue": "European Conference on Object-Oriented Programming", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"pages": "31:1-31:28"}, "authors": [{"authorId": "1871522491", "name": "Jonathan Lindegaard Starup"}, {"authorId": "145336226", "name": "Magnus Madsen"}, {"authorId": "3284421", "name": "Ond\u0159ej Lhot\u00e1k"}], "citations": []}
