{"paperId": "c714b4c8863e16bff77308197fd692de7f41a439", "publicationVenue": null, "title": "A data-flow execution engine for scalable embedded computing", "abstract": "The end of Dennard scaling [1], Moore\u2019s law [2], and the resulting di\ufb03culty of increasing clock frequency forced the engineering community to shift to the multi/many-core processors and multi-node systems as an alternative way to improve performance. An increased core number bene\ufb01ts many workloads, but programming limitations still reduce the performance due to not fully exploited parallelism. From this perspective, new execution models are arising to overcome such limitations to scale up performance. Execution models like Data-Flow can take advantage of the full parallelism, thanks to the possibility of creating many asynchronous threads that can run in parallel. These threads may encapsulate the data to be processed, their dependencies, and, once completed, write their output for other threads. Data-Flow Threads (DF-Threads) is a novel Data-Flow execution model for mapping threads on local or distributed cores transparently to the programmer [3]. This model is capable of being parallelized massively among di\ufb00erent cores, and it handles even hundreds of thousands or more Data-Flow threads with their associated data regions. Further implementation and evaluation of the DF-Threads model (previ-ously proposed by R.Giorgi [3]) is presented in this thesis. The proposed model can be able to exploit the full parallelism of modern heterogeneous embedded architectures (e.g., the AXIOM-Board [4]). The work relies on introducing the \u201dData-Flow engine\u201d (DF-Engine), which is able to accelerate the", "venue": "", "year": 2017, "fieldsOfStudy": ["Computer Science"], "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages": "91-94", "volume": ""}, "authors": [{"authorId": "88727757", "name": "Marco Procaccini"}, {"authorId": "1816975", "name": "R. Giorgi"}], "citations": []}
