{"paperId": "0e14ca385db23e991627068237a5042bc69f9233", "publicationVenue": null, "title": "Muhammad Shahbaz \u2014 Research Statement", "abstract": "As a networks and systems architect, I build domain-specific languages, compilers, and architectures to address the ever-rising tension between performance and flexibility. For so long, the continuous growth in chips\u2019 processing capacity has helped preserve the end-to-end principle, keeping central-processing units (CPUs) general-purpose and smart while having network switches fixed-function and dumb, to process and forward information at speed. Since the turn of the century, two major trends are now challenging this principle, forcing us to rethink how we build CPUs and switches and the role they play: (a) the decline of Moore\u2019s Law [13] and (b) the rise of big data (e.g., social media, video streaming, augmented/virtual reality, internet of things, and artificial intelligence)\u2014generating quintillion bytes of information every day [1]. The chip area and energy budget is not increasing anymore; CPUs must now repurpose resources (like caches, out-of-order execution, and more) needed for general-purpose processing, to logic tailored to a particular application domain (e.g., machine learning or serverless compute). Likewise, switches must now take on more responsibilities (e.g., congestion control and packet scheduling) to further offload CPUs; they can no longer be fixed-function, line-rate devices for packet forwarding only. The concern, however, is that doing so will cause systems to sacrifice flexibility for higher performance, and networks to sacrifice performance for more flexibility.", "venue": "", "year": 2019, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "152376205", "name": "M. Shahbaz"}], "citations": []}
