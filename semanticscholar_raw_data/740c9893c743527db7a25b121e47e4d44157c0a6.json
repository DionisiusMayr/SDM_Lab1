{"paperId": "740c9893c743527db7a25b121e47e4d44157c0a6", "publicationVenue": {"id": "711c7c92-e80f-40f2-9459-e1dfb9c54cd7", "name": "Theory and Practice of Logic Programming", "type": "journal", "alternate_names": ["Theory Pract Log Program"], "issn": "1471-0684", "url": "https://www.cambridge.org/core/journals/theory-and-practice-of-logic-programming", "alternate_urls": ["http://journals.cambridge.org/TLP"]}, "title": "Parallel Logic Programming: A Sequel", "abstract": "\n Multi-core and highly connected architectures have become ubiquitous, and this has brought renewed interest in language-based approaches to the exploitation of parallelism. Since its inception, logic programming has been recognized as a programming paradigm with great potential for automated exploitation of parallelism. The comprehensive survey of the first twenty years of research in parallel logic programming, published in 2001, has served since as a fundamental reference to researchers and developers. The contents are quite valid today, but at the same time the field has continued evolving at a fast pace in the years that have followed. Many of these achievements and ongoing research have been driven by the rapid pace of technological innovation, that has led to advances such as very large clusters, the wide diffusion of multi-core processors, the game-changing role of general-purpose graphic processing units, and the ubiquitous adoption of cloud computing. This has been paralleled by significant advances within logic programming, such as tabling, more powerful static analysis and verification, the rapid growth of Answer Set Programming, and in general, more mature implementations and systems. This survey provides a review of the research in parallel logic programming covering the period since 2001, thus providing a natural continuation of the previous survey. In order to keep the survey self-contained, it restricts its attention to parallelization of the major logic programming languages (Prolog, Datalog, Answer Set Programming) and with an emphasis on automated parallelization and preservation of the sequential observable semantics of such languages. The goal of the survey is to serve not only as a reference for researchers and developers of logic programming systems but also as engaging reading for anyone interested in logic and as a useful source for researchers in parallel systems outside logic programming.", "venue": "Theory and Practice of Logic Programming", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2021-11-22", "journal": {"name": "ArXiv", "volume": "abs/2111.11218"}, "authors": [{"authorId": "1733896", "name": "A. Dovier"}, {"authorId": "3255775", "name": "A. Formisano"}, {"authorId": "144961671", "name": "G. Gupta"}, {"authorId": "1717483", "name": "M. Hermenegildo"}, {"authorId": "1735551", "name": "Enrico Pontelli"}, {"authorId": "145702781", "name": "Ricardo Rocha"}], "citations": [{"paperId": "5bd2d8772ba8cf038551313960ff4bfc60b04229", "title": "Constraint propagation on GPU: A case study for the AllDifferent constraint"}, {"paperId": "ade08e17bae6dce4659dbb3212fd65edd1e686d3", "title": "Fifty Years of Prolog and Beyond"}, {"paperId": "9f05eacbbf3ed0807e61c35b704f37e0243ba797", "title": "Constraints propagation on GPU: A case study for AllDifferent"}, {"paperId": "0bb193ff7c2907b6cdac0f2d77e3cfa24f2f34e8", "title": "GPU parallelism for SAT solving heuristics"}, {"paperId": "b2b0ad258b7b7236c48094bb97f1cdcd2878e2ba", "title": "Abstract Interpretation: From 0, 1, To \u221e"}]}
