{"paperId": "b1fa9070528f6666ea7d3f7ae38d34545487647a", "publicationVenue": {"id": "2a7ac430-c70b-4147-b72a-237f8cba9f27", "name": "USENIX Conference on File and Storage Technologies", "type": "conference", "alternate_names": ["File Storage Technol", "Form Asp Secur Trust", "USENIX Conf File Storage Technol", "FAST", "File and Storage Technologies", "Formal Aspects in Security and Trust"], "url": "http://www.wikicfp.com/cfp/program?id=1011", "alternate_urls": ["http://www.dsi.unive.it/IFIPWG1_7/index.html"]}, "title": "INSTalytics", "abstract": "We present the design, implementation, and evaluation of INSTalytics, a co-designed stack of a cluster file system and the compute layer, for efficient big-data analytics in large-scale data centers. INSTalytics amplifies the well-known benefits of data partitioning in analytics systems; instead of traditional partitioning on one dimension, INSTalytics enables data to be simultaneously partitioned on four different dimensions at the same storage cost, enabling a larger fraction of queries to benefit from partition filtering and joins without network shuffle. To achieve this, INSTalytics uses compute-awareness to customize the three-way replication that the cluster file system employs for availability. A new heterogeneous replication layout enables INSTalytics to preserve the same recovery cost and availability as traditional replication. INSTalytics also uses compute-awareness to expose a new sliced-read API that improves performance of joins by enabling multiple compute nodes to read slices of a data block efficiently via co-ordinated request scheduling and selective caching at the storage nodes. We have built a prototype implementation of INSTalytics in a production analytics stack, and we show that recovery performance and availability is similar to physical replication, while providing significant improvements in query performance, suggesting a new approach to designing cloud-scale big-data analytics systems.", "venue": "USENIX Conference on File and Storage Technologies", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2019-02-26", "journal": {"name": "ACM Transactions on Storage (TOS)", "pages": "1 - 30", "volume": "15"}, "authors": [{"authorId": "1768816", "name": "Muthian Sivathanu"}, {"authorId": "81439604", "name": "Midhul Vuppalapati"}, {"authorId": "3271526", "name": "Bhargav S. Gulavani"}, {"authorId": "30141706", "name": "K. Rajan"}, {"authorId": "50334798", "name": "Jyoti Leeka"}, {"authorId": "3083814", "name": "Jayashree Mohan"}, {"authorId": "17816610", "name": "Piyus Kedia"}], "citations": [{"paperId": "7f0a900d6a0847e970d9482ba9da69947f027d34", "title": "Towards Optimizing Storage Costs on the Cloud"}, {"paperId": "f42e0db355eec9c46c81ce3d5b459ad83a9554e6", "title": "Unshackling Database Benchmarking from Synthetic Workloads"}, {"paperId": "129633a30d42053cb9f5f3df19cc10468e50ef09", "title": "Remus: Efficient Live Migration for Distributed Databases with Snapshot Isolation"}, {"paperId": "52a909b767dc6be4bd16f9dad0358f553fa3fc0a", "title": "Replicated Layout for In-Memory Database Systems"}, {"paperId": "03fe5309d8ea349ed1aba77ba1e66ba5900856b8", "title": "The Cosmos Big Data Platform at Microsoft: Over a Decade of Progress and a Decade to Look Forward"}, {"paperId": "4d914f48e07db44649715cef74f2cb0a58d2265b", "title": "SLA-Aware Adaptive Mapping Scheme in Bigdata Distributed Storage Systems"}, {"paperId": "47c45df0b1d8331dc83cf97775c22f85d74e02b6", "title": "Covering the Relational Join"}, {"paperId": "e55893909eaccd7fb380638830fd03e47ede26ad", "title": "Analyzing GDPR Compliance Through the Lens of Privacy Policy"}]}
