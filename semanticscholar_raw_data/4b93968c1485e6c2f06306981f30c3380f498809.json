{"paperId": "4b93968c1485e6c2f06306981f30c3380f498809", "publicationVenue": {"id": "ccd8e532-73c6-414f-bc91-271bbb2933e2", "name": "Electronics", "type": "journal", "issn": "1450-5843", "alternate_issns": ["2079-9292", "0883-4989"], "url": "http://www.electronics.etfbl.net/", "alternate_urls": ["http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-247562", "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-247562", "https://www.mdpi.com/journal/electronics"]}, "title": "Locality/Fairness-Aware Job Scheduling in Distributed Stream Processing Engines", "abstract": "Distributed stream processing engines (DSPEs) deploy multiple tasks on distributed servers to process data streams in real time. Many DSPEs have provided locality-aware stream partitioning (LSP) methods to reduce network communication costs. However, an even job scheduler provided by DSPEs deploys tasks far away from each other on the distributed servers, which cannot use the LSP properly. In this paper, we propose a Locality/Fairness-aware job scheduler (L/F job scheduler) that considers locality together to solve problems of the even job scheduler that only considers fairness. First, the L/F job scheduler increases cohesion of contiguous tasks that require message transmissions for the locality. At the same time, it reduces coupling of parallel tasks that do not require message transmissions for the fairness. Next, we connect the contiguous tasks into a stream pipeline and evenly deploy stream pipelines to the distributed servers so that the L/F job scheduler achieves high cohesion and low coupling. Finally, we implement the proposed L/F job scheduler in Apache Storm, a representative DSPE, and evaluate it in both synthetic and real-world workloads. Experimental results show that the L/F job scheduler is similar in throughput compared to the even job scheduler, but latency is significantly improved by up to 139.2% for the LSP applications and by up to 140.7% even for the non-LSP applications. The L/F job scheduler also improves latency by 19.58% and 12.13%, respectively, in two real-world workloads. These results indicate that our L/F job scheduler provides superior processing performance for the DSPE applications.", "venue": "Electronics", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": null, "publicationDate": "2020-11-05", "journal": {"name": "Electronics"}, "authors": [{"authorId": "2429298", "name": "Siwoon Son"}, {"authorId": "1752894", "name": "Yang-Sae Moon"}], "citations": [{"paperId": "de1b2d354e0f26dc1aa2c630563bc6f7bdbee706", "title": "SPinDP: A High-Speed Distributed Processing Platform for Sampling and Filtering Data Streams"}, {"paperId": "4989709fd9e5e7f0cd27f9a06b0fc17f936e2b8a", "title": "A cost-efficient scheduling algorithm for streaming processing applications on cloud"}, {"paperId": "de1729699afe127946efef60bb4728bf7c3e9b31", "title": "Stochastic distributed data stream partitioning using task locality: design, implementation, and optimization"}]}
