{"paperId": "d571264556e6d5b88bf2856ce0bd1756b1bbb545", "publicationVenue": {"id": "a36dc29e-4ea1-4567-b0fe-1c06daf8bee8", "name": "International Conference on Software Engineering", "type": "conference", "alternate_names": ["Int Conf Softw Eng", "ICSE"], "url": "http://www.icse-conferences.org/"}, "title": "Lessons from Eight Years of Operational Data from a Continuous Integration Service: An Exploratory Case Study of CircleCI", "abstract": "Continuous Integration (CI) is a popular practice that enables the rapid pace of modern software development. Cloud-based CI services have made CI ubiquitous by relieving software teams of the hassle of maintaining a CI infrastructure. To improve these CI services, prior research has focused on analyzing historical CI data to help service consumers. However, finding areas of improvement for CI service providers could also improve the experience for service consumers. To search for these opportunities, we conduct an empirical study of 22.2 million builds spanning 7,795 open-source projects that used CircleCI from 2012 to 2020. First, we quantitatively analyze the builds (i.e., invocations of the CI service) with passing or failing outcomes. We observe that the heavy and typical service consumer groups spend significantly different proportions of time on seven of the nine build actions (e.g., dependency retrieval). On the other hand, the compilation and testing actions consistently consume a large proportion of build time across consumer groups (median 33%). Second, we study builds that terminate prior to generating a pass or fail signal. Through a systematic manual analysis, we find that availability issues, configuration errors, user cancellation, and exceeding time limits are key reasons that lead to premature build termination. Our observations suggest that (1) heavy service consumers would benefit most from build acceleration approaches that tackle long build durations (e.g., skipping build steps) or high throughput rates (e.g., optimizing CI service job queues), (2) efficiency in CI pipelines can be improved for most CI consumers by focusing on the compilation and testing stages, and (3) avoiding misconfigurations and tackling service availability issues present the largest opportunities for improving the robustness of CI services.", "venue": "International Conference on Software Engineering", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2022-05-01", "journal": {"name": "2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE)", "pages": "1330-1342"}, "authors": [{"authorId": "2063714", "name": "Keheliya Gallaba"}, {"authorId": "51118871", "name": "Maxime Lamothe"}, {"authorId": "1725534", "name": "Shane McIntosh"}], "citations": [{"paperId": "636cb1d19992772265309a2b2c853272eca317e9", "title": "Resource Usage and Optimization Opportunities in Workflows of GitHub Actions"}, {"paperId": "b006e3d48ef43291cbe6e63051e15a94df250d2c", "title": "SourcererJBF: A Java Build Framework For Large-Scale Compilation"}, {"paperId": "d349c9fcdc1d03b93f3ebd615be3b8feb8bb9d35", "title": "An empirical comparison of ethnic and gender diversity of DevOps and non-DevOps contributions to open-source projects"}, {"paperId": "7962a37e73e2221e4b23a94e097b0c2e3bd35ba9", "title": "What Factors Affect the Build Failures Correction Time? A Multi-Project Study"}, {"paperId": "425beecf02120510f139ae927ac7d9a950497f5a", "title": "Repeated Builds During Code Review: An Empirical Study of the OpenStack Community"}, {"paperId": "f047334f1b465306745180ecdcca8f721614fdb2", "title": "State-Of-The-Practice in Quality Assurance in Java-Based Open Source Software Development"}, {"paperId": "ddafe1cbbb91279c2c676b092cf7c5ef389467f7", "title": "Continuous Intrusion: Characterizing the Security of Continuous Integration Services"}, {"paperId": "006c04918646be661bb3a55d31249a7b1a3aa0de", "title": "Developers\u2019 Perception of GitHub Actions: A Survey Analysis"}, {"paperId": "9e88a6e3f1068fd4c265966167919d5de70feb55", "title": "HybridCISave: A Combined Build and Test Selection Approach in Continuous Integration"}, {"paperId": "dd13bfd70228921f6d44f7d0dd317c55c125801c", "title": "A First Look at CI/CD Adoptions in Open-Source Android Apps"}, {"paperId": "eea24a35352d7a80305f189064593dbe76708a40", "title": "Trade-Off Exploration for Acceleration of Continuous Integration"}, {"paperId": "f645c6a611b3b0f55b320a460481d0f4aa66e8ae", "title": "CEDAR: Continuous Testing of Deep Learning Libraries"}]}
