{"paperId": "d1ae4ab5047489c2b010c7ce72262982ad66ad60", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "ByteGraph: A High-Performance Distributed Graph Database in ByteDance", "abstract": "Most products at ByteDance, e.g., TikTok, Douyin, and Toutiao, naturally generate massive amounts of graph data. To efficiently store, query and update massive graph data is challenging for the broad range of products at ByteDance with various performance requirements. We categorize graph workloads at ByteDance into three types: online analytical, transaction, and serving processing, where each workload has its own characteristics. Existing graph databases have different performance bottlenecks in handling these workloads and none can efficiently handle the scale of graphs at ByteDance. We developed ByteGraph to process these graph workloads with high throughput, low latency and high scalability. There are several key designs in ByteGraph that make it efficient for processing our workloads, including edge-trees to store adjacency lists for high parallelism and low memory usage, adaptive optimizations on thread pools and indexes, and geographic replications to achieve fault tolerance and availability. ByteGraph has been in production use for several years and its performance has shown to be robust for processing a wide range of graph workloads at ByteDance.", "venue": "Proceedings of the VLDB Endowment", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-08-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "3306-3318", "volume": "15"}, "authors": [{"authorId": "2145413970", "name": "Changji Li"}, {"authorId": "2108844303", "name": "Hongzhi Chen"}, {"authorId": "2167037428", "name": "Shuai Zhang"}, {"authorId": "1490915504", "name": "Ying-Xin Hu"}, {"authorId": "2145763285", "name": "Chao Chen"}, {"authorId": "2109512262", "name": "Zhenjie Zhang"}, {"authorId": "123816348", "name": "Meng"}, {"authorId": "2088215217", "name": "Li"}, {"authorId": "2193954145", "name": "Xiangchen Li"}, {"authorId": "32058742", "name": "Dongqing Han"}, {"authorId": "2116124684", "name": "Xiaohui Chen"}, {"authorId": "2144671306", "name": "Xudong Wang"}, {"authorId": "2424392", "name": "Hui-dong Zhu"}, {"authorId": "2182246691", "name": "Xu-Dong Fu"}, {"authorId": "2112662828", "name": "Ting Wu"}, {"authorId": "2184079980", "name": "Hongfei Tan"}, {"authorId": "113398129", "name": "Hengtian Ding"}, {"authorId": "2695617", "name": "Meng-Ti Liu"}, {"authorId": "2174235132", "name": "Kang Wang"}, {"authorId": "2112409349", "name": "Ting Ye"}, {"authorId": "46255707", "name": "Lei Li"}, {"authorId": "2157513188", "name": "Xin Li"}, {"authorId": "2153604994", "name": "Yu Wang"}, {"authorId": "2113918898", "name": "Chen Zheng"}, {"authorId": "50841357", "name": "Han Yang"}, {"authorId": "2116502347", "name": "James Cheng"}], "citations": [{"paperId": "cd30d279e82aad4b6539d1998f7433907733c844", "title": "FulBM: Fast fully batch maintenance for landmark-based 3-hop cover labeling"}, {"paperId": "ebc06a22fa91e03648bc38e3a02cf444d8d3785e", "title": "CUTTANA: Scalable Graph Partitioning for Faster Distributed Graph Databases and Analytics"}, {"paperId": "a83fb6ec620ec44aa13f3334a86d9212da0790a3", "title": "FastStore: A High-Performance RDMA-Enabled Distributed Key-Value Store with Persistent Memory"}, {"paperId": "e25a4ece79160c9817a38e80f77d729ca7487d48", "title": "GeaFlow: A Graph Extended and Accelerated Dataflow System"}, {"paperId": "420f8b01e0ddd3c3f4c5620acbd71e26275786b5", "title": "The Graph Database Interface: Scaling Online Transactional and Analytical Graph Workloads to Hundreds of Thousands of Cores"}, {"paperId": "d9a69324902294e297c5ba366b0658cf5b17921c", "title": "High-Performance Graph Databases That Are Portable, Programmable, and Scale to Hundreds of Thousands of Cores"}]}
