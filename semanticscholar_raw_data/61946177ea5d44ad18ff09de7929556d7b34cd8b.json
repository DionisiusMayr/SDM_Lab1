{"paperId": "61946177ea5d44ad18ff09de7929556d7b34cd8b", "publicationVenue": {"id": "9448f839-459b-45f3-8573-5eff3f032334", "name": "USENIX Annual Technical Conference", "type": "conference", "alternate_names": ["USENIX Annu Tech Conf", "USENIX", "USENIX ATC"], "url": "https://www.usenix.org/conferences/byname/131"}, "title": "SIMD-X: Programming and Processing of Graph Algorithms on GPUs", "abstract": "With high computation power and memory bandwidth, graphics processing units (GPUs) lend themselves to accelerate data-intensive analytics, especially when such applications fit the single instruction multiple data (SIMD) model. However, graph algorithms such as breadth-first search and k-core, often fail to take full advantage of GPUs, due to irregularity in memory access and control flow. To address this challenge, we have developed SIMD-X, for programming and processing of single instruction multiple, complex, data on GPUs. Specifically, the new Active-Compute-Combine (ACC) model not only provides ease of programming to programmers, but more importantly creates opportunities for system-level optimizations. To this end, SIMD-X utilizes just-in-time task management which filters out inactive vertices at runtime and intelligently maps various tasks to different amount of GPU cores in pursuit of workload balancing. In addition, SIMD-X leverages push-pull based kernel fusion that, with the help of a new deadlock-free global barrier, reduces a large number of computation kernels to very few. Using SIMD-X, a user can program a graph algorithm in tens of lines of code, while achieving 3?, 6?, 24?, 3? speedup over Gunrock, Galois, CuSha, and Ligra, respectively.", "venue": "USENIX Annual Technical Conference", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2018-12-10", "journal": {"pages": "411-428"}, "authors": [{"authorId": "2118959610", "name": "Hang Liu"}, {"authorId": "143995151", "name": "Howie Huang"}], "citations": [{"paperId": "610df78324239e5f5ed8810316a2dd9ad83c47ed", "title": "Engineering A Workload-balanced Push-Relabel Algorithm for Massive Graphs on GPUs"}, {"paperId": "d004b35e67f9e9fc70397a580f16397a050add97", "title": "Learning to Drive Software-Defined Solid-State Drives"}, {"paperId": "6afdc49323c7236b238c4e9cf3f37dacd991de90", "title": "The Intel Programmable and Integrated Unified Memory Architecture Graph Analytics Processor"}, {"paperId": "f30c82d5bc12934982d5d6494b7a06553b84000c", "title": "A Bucket-aware Asynchronous Single-Source Shortest Path Algorithm on GPU"}, {"paperId": "c1928f42ad6293562df6078b83adef1e78bd224e", "title": "Tango: Rethinking Quantization for Graph Neural Network Training on GPUs"}, {"paperId": "44775b43d0f55d0d8b94beb1fe8b76ad64270cbb", "title": "LightTraffic: On Optimizing CPU-GPU Data Traffic for Efficient Large-scale Random Walks"}, {"paperId": "0bb489605b4fa105ca2ae0c0774c85d353777dbc", "title": "WAVE: designing a heuristics-based three-way breadth-first search on GPUs"}, {"paperId": "c973f0225b2d6c08e2415d1b2fbaf666be1b4356", "title": "Compressed In-memory Graphs for Accelerating GPU-based Analytics"}, {"paperId": "be5ae5f98ae4b16d14b99d5c3db2b86173382f28", "title": "Scalable Graph Sampling on GPUs with Compressed Graph"}, {"paperId": "7c9abae93ee7ff943b3ef5023e655e1ab8abc42a", "title": "Decoupling Schedule, Topology Layout, and Algorithm to Easily Enlarge the Tuning Space of GPU Graph Processing"}, {"paperId": "72c6c3ede1d4457a85b9ddac0a2bc8d1096f221c", "title": "Atos: A Task-Parallel GPU Scheduler for Graph Analytics"}, {"paperId": "412b91005cb4bf89989385f13ce7a770c84b5faa", "title": "SURF: Direction-Optimizing Breadth-First Search Using Workload State on GPUs"}, {"paperId": "ef12b71e7c7cc7483e3c2147ebf9753a31554266", "title": "TLPGNN: A Lightweight Two-Level Parallelism Paradigm for Graph Neural Network Computation on GPU"}, {"paperId": "893150f171bd7656d86a56c1026e6129d265a957", "title": "TeGraph: A Novel General-Purpose Temporal Graph Computing Engine"}, {"paperId": "63b809349666fa571782b08364b68acbb1df0c2d", "title": "GraphIt to CUDA Compiler in 2021 LOC: A Case for High-Performance DSL Implementation via Staging with BuilDSL"}, {"paperId": "a43a9e5418e0220d671dec55166b60e08f8f152c", "title": "Streaming Sparse Graphs using Efficient Dynamic Sets"}, {"paperId": "74c8d0872b1781fd746ca387835c0e39a73d09bb", "title": "Enabling Branch-Mispredict Level Parallelism by Selectively Flushing Instructions"}, {"paperId": "940d956a6858eabaaf346962f383cdc2746b89fc", "title": "A Learning-based Approach Towards Automated Tuning of SSD Configurations"}, {"paperId": "4595404a30579368ffb6f15f0b96cf346c5d0658", "title": "LargeGraph"}, {"paperId": "6b76654f74df814bb778fe5d03e088c69489e347", "title": "Automatic Generation of High-Performance Inference Kernels for Graph Neural Networks on Multi-Core Systems"}, {"paperId": "ced6690b802d33f61931f526443fca2a63c02382", "title": "Towards Next-Generation Cybersecurity with Graph AI"}, {"paperId": "5d647f9147dd0412cc45a36e40f8562e46988c24", "title": "Taming the Zoo: The Unified GraphIt Compiler Framework for Novel Architectures"}, {"paperId": "3308eeac303fd042f8d7659d9c43faa35173c39b", "title": "Seastar: vertex-centric programming for graph neural networks"}, {"paperId": "ed6ce714b65aca1272ec8af9db74076ecb5605d5", "title": "Trust: Triangle Counting Reloaded on GPUs"}, {"paperId": "a92ac38658b3a7f75e1836b9d9b6c41b21c40d79", "title": "Compiling Graph Applications for GPU s with GraphIt"}, {"paperId": "b37c5a96fe2f3389d9fe3addb8812634abb82164", "title": "Grus"}, {"paperId": "76031ea3119e840798d4aef5cfe3c55814077698", "title": "Compliation Techniques for Graphs Algorithms on GPUs"}, {"paperId": "974a06b07fc2d51b14a37d1fca5cb16ee1fef306", "title": "Compilation Techniques for Graph Algorithms on GPUs"}, {"paperId": "241ef0bcba5e7236846105062c9d99e0cfa297e2", "title": "SWARMGRAPH: Analyzing Large-Scale In-Memory Graphs on GPUs"}, {"paperId": "5e9bb0f3e74be4d8f75cca6ceb3ec87b3e04d7cc", "title": "PIUMA: Programmable Integrated Unified Memory Architecture"}, {"paperId": "6d31f0391547e6a56e63cf88948807c675650a5b", "title": "AsynGraph"}, {"paperId": "5496654b0e517cc0a3c37786011d651c86425e45", "title": "C-SAW: A Framework for Graph Sampling and Random Walk on GPUs"}, {"paperId": "528ff02f6d6505bd121107edd69ab9c777a53d7e", "title": "Accelerating graph sampling for graph machine learning using GPUs"}, {"paperId": "a2976770da75e2144ae02e737e8211cc05255ec9", "title": "NextDoor: GPU-Based Graph Sampling for Graph Machine Learning"}, {"paperId": "6510ef26ad1da6c9c8863a8dc0428d122bb17c81", "title": "Parallelizing pruned landmark labeling: dealing with dependencies in graph algorithms"}, {"paperId": "a72bbf818135b30ab24835e663bc8dcb7b8274ff", "title": "GNNAdvisor: An Adaptive and Efficient Runtime System for GNN Acceleration on GPUs"}, {"paperId": "c76f473beee5eb2a03c9574976e9a638c9681836", "title": "Pangolin: An Efficient and Flexible Graph Pattern Mining System on CPU and GPU."}, {"paperId": "9972f870796edc67058f7568e34947c3feb89033", "title": "Pangolin"}, {"paperId": "e460147584cd2dd8f2081df0d5ea01c1ba0813ca", "title": "CECI: Compact Embedding Cluster Index for Scalable Subgraph Matching"}, {"paperId": "9852d8c1fff0afbd01b32ee8b72ce6b2de974c6b", "title": "XBFS: eXploring Runtime Optimizations for Breadth-First Search on GPUs"}, {"paperId": "c5269518351196e2d6a653b60fa7b024d329b95d", "title": "Fast and Efficient Update Handling for Graph H2TAP"}, {"paperId": "99e568d08ad43f1dc9e9ad3fe138e90e6d5bcefe", "title": "Wukong+G: Fast and Concurrent RDF Query Processing Using RDMA-assisted GPU Graph Exploration"}, {"paperId": "b31e4669399e24c41c8026e1f8eb391c7d4da68d", "title": "ReGra: Accelerating Graph Traversal Applications Using ReRAM With Lower Communication Cost"}, {"paperId": "426f449a52d0ecf0cdd87ca99450a6a9ab8cfb58", "title": "GIN : High-Performance, Scalable Inference for Graph Neural Networks"}]}
