{"paperId": "324617847cc591e3fb11f15cdcdfbc9374021b51", "publicationVenue": {"id": "764e3630-ddac-4c21-af4b-9d32ffef082e", "name": "IEEE International Conference on Data Engineering", "type": "conference", "alternate_names": ["ICDE", "Int Conf Data Eng", "IEEE Int Conf Data Eng", "International Conference on Data Engineering"], "url": "http://www.wikicfp.com/cfp/program?id=1331"}, "title": "RW-Tree: A Learned Workload-aware Framework for R-tree Construction", "abstract": "R-tree is a popular index which supports efficient queries on multi-dimensional data. The performance of R-tree mostly depends on how the tree structure is built if new data instances are inserted, which has been studied for years. Existing works can be categorized into two groups. One is the bulk-loading approaches that insert data instances in batch, but they cannot support real-time insertion. Hence, our focus is on the other one that inserts each data instance individually, and thus fresh data can be instantly queried. However, existing methods do not consider the workload information, which leads to limited potential optimization opportunity. Therefore, it is important to study workload-aware R-tree construction for efficient multi-dimensional data access. There are several challenges. First, how to represent the query workload is a challenge. Second, given a workload, it is challenging to accurately measure the benefit of a data insertion choice. Third, both range queries and kNN queries should be considered in the workload. To address these challenges, we propose a novel framework that leverages a learning-based method to solve the workload-aware R-tree construction problem. First, by extracting the query workload features, we learn a distribution for the workload using the space partition. Second, considering the distribution, we design a cost model to describe the benefits (i.e., query execution time) of different insertion choices and select the best one. Third, we convert the kNN queries to range search ones, so as to support the workload including both types of queries. Experimental results show that on OpenStreetMap real datasets, compared with baselines, we improve the query efficiency by 1.17x.", "venue": "IEEE International Conference on Data Engineering", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-05-01", "journal": {"name": "2022 IEEE 38th International Conference on Data Engineering (ICDE)", "pages": "2073-2085"}, "authors": [{"authorId": "2180489729", "name": "Haowen Dong"}, {"authorId": "1720852203", "name": "Chengliang Chai"}, {"authorId": "3462170", "name": "Yuyu Luo"}, {"authorId": "2180333808", "name": "Jiabin Liu"}, {"authorId": "145556736", "name": "Jianhua Feng"}, {"authorId": "1943446516", "name": "Chaoqun Zhan"}], "citations": [{"paperId": "ac0270e7af0b2b013156c888050be082c673c3cf", "title": "A Survey of Learned Indexes for the Multi-dimensional Space"}, {"paperId": "530221dd0338e5d6f3c11a572cd79802c130f607", "title": "PLATON: Top-down R-tree Packing with Learned Partition Policy"}, {"paperId": "d13b3c9d4a7bd05133578e566657658dc531e29f", "title": "Adding Domain Knowledge to Query-Driven Learned Databases"}, {"paperId": "6097b748a2207ec29cdfc4f74da835afeabdfbb4", "title": "WaZI: A Learned and Workload-aware Z-Index"}, {"paperId": "184d586a614b95991acaff3aa31217401cab4c95", "title": "Reinforcement Learning based Tree Decomposition for Distance Querying in Road Networks"}, {"paperId": "d5aa0efc065ac3073404aebbcc3a2ca3eb63db4b", "title": "Cost-based or Learning-based? A Hybrid Query Optimizer for Query Plan Selection"}, {"paperId": "45976c13ecc25922acadcefa41c5da01459cd725", "title": "Dynamic Materialized View Management using Graph Neural Network"}]}
