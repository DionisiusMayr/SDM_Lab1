{"paperId": "5c8d13a422c640b1eeff6cd92aec6587d8a759ab", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "SA-LSM : Optimize Data Layout for LSM-tree Based Storage using Survival Analysis", "abstract": "\n A significant fraction of data in cloud storage is rarely accessed, referred to as\n cold data.\n Accurately identifying and efficiently managing cold data on cost-effective storages is one of the major challenges for cloud providers, which balances between reducing the cost and improving the system performance. To this end, we propose\n SA-LSM\n to use (S)urvival (A)nalysis for Log-Structure Merge Tree (LSM-tree) key-value (KV) stores. Conventionally, the data layout of LSM-tree is determined jointly by the write and the compaction operations. However, this process by default does not fully utilize the access information of data records, leading to a suboptimal data layout that negatively impacts the system performance.\n SA-LSM\n utilizes the survival analysis, a statistical learning algorithm commonly used in biostatistics, to optimize the data layout.\n \n \n When put into perspective of LSM-tree with proper adoptions,\n SA-LSM\n can accurately predict cold data using the historical semantic information and access traces. As a concrete realization, we implement our proposal in X-Engine, a commercial-strength open-source LSM-tree storage engine. To make the deployment more flexible, we also design a non-intrusive architecture that offloads CPU-intensive work, e.g., model training and inference, to an external service. Extensive experiments on real-world workloads show that it can decrease the tail latency by up to 78.9% compared to the state-of-the-art techniques. The generality of this approach and the significant performance improvement show great potentials in a variety of related applications.\n", "venue": "Proceedings of the VLDB Endowment", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-06-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "2161-2174", "volume": "15"}, "authors": [{"authorId": "2182968278", "name": "Teng Zhang"}, {"authorId": "2115409231", "name": "Jian Tan"}, {"authorId": "2183003242", "name": "Xin Cai"}, {"authorId": "120465266", "name": "Jianying Wang"}, {"authorId": "1442059955", "name": "Feifei Li"}, {"authorId": "48480254", "name": "Jianling Sun"}], "citations": [{"paperId": "c5cbd991c4d1fe60cc8a5ddf5f455ef0bce206e4", "title": "A Contract-Aware and Cost-effective LSM Store for Cloud Storage with Low Latency Spikes"}, {"paperId": "4357fe12f181cfa0d191d4f42b92664a61b3d903", "title": "Time-tired compaction: An elastic compaction scheme for LSM-tree based time-series database"}, {"paperId": "8aa4e459fa9076fe75019137ac2cfc28f4c4f000", "title": "An optimized learning-based directory placement policy with two-rounds selection in distributed file systems"}]}
