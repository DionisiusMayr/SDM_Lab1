{"paperId": "d42ac2361b1ab529a9f878ba45e9a7895faec424", "publicationVenue": {"id": "ea10882c-32ca-4793-aaab-ea15c0a0c73a", "name": "International Conference on Computer, Information and Telecommunication Systems", "type": "conference", "alternate_names": ["Int Conf Comput Inf Telecommun Syst", "CITS"]}, "title": "On Efficiently Partitioning a Topic in Apache Kafka", "abstract": "Apache Kafka addresses the general problem of delivering extreme high volume event data to diverse consumers via a publish-subscribe messaging system. It uses partitions to scale a topic across many brokers for producers to write data in parallel, and also to facilitate parallel reading of consumers. Even though Apache Kafka provides some out of the box optimizations, it does not strictly define how each topic shall be efficiently distributed into partitions. The well-formulated fine-tuning that is needed in order to improve an Apache Kafka cluster performance is still an open research problem. In this paper, we first model the Apache Kafka topic partitioning process for a given topic. Then, given the set of brokers, constraints and application requirements on throughput, OS load, replication latency and unavailability, we formulate the optimization problem of finding how many partitions are needed and show that it is computationally intractable, being an integer program. Furthermore, we propose two simple, yet efficient heuristics to solve the problem: the first tries to minimize and the second to maximize the number of brokers used in the cluster. Finally, we evaluate its performance via largescale simulations, considering as benchmarks some Apache Kafka cluster configuration recommendations provided by Microsoft and Confluent. We demonstrate that, unlike the recommendations, the proposed heuristics respect the hard constraints on replication latency and perform better w.r.t. unavailability time and OS load, using the system resources in a more prudent way.", "venue": "International Conference on Computer, Information and Telecommunication Systems", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-05-19", "journal": {"name": "2022 International Conference on Computer, Information and Telecommunication Systems (CITS)", "pages": "1-8"}, "authors": [{"authorId": "1871465", "name": "Theofanis P. Raptis"}, {"authorId": "1739490", "name": "A. Passarella"}], "citations": [{"paperId": "73a39f81bc29fd1f9b57969192497d5f840b5dc7", "title": "Efficient topic partitioning of Apache Kafka for high-reliability real-time data streaming applications"}, {"paperId": "2c6960d4b11f7ba808fe6a3e1bd565d3de4e070e", "title": "Optimization Techniques for Data Consistency and Throughput Using Kafka Stateful Stream Processing"}, {"paperId": "db868e1c425c2a94302adc37146b4bb40e38e8d8", "title": "Global Message Ordering using Distributed Kafka Clusters"}, {"paperId": "9e24b0093084f8e63070a0fd702068fc72f3747c", "title": "Real-time Event Streaming for Financial Enterprise System with Kafka"}, {"paperId": "16884aa1a953fe5349ed6dc39157fef9cdde4027", "title": "Optimizing Apache Kafka Deployments - Configuration customization is all you need"}, {"paperId": "1b15cc50941fa28e78e5f5ccd2fb8abf4c12e812", "title": "Design Guidelines for Apache Kafka Driven Data Management and Distribution in Smart Cities"}, {"paperId": "eb45d21f2559271024771cdc1fbb457609a776f7", "title": "A Survey on Networked Data Streaming With Apache Kafka"}]}
