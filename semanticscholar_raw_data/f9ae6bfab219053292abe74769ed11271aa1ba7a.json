{"paperId": "f9ae6bfab219053292abe74769ed11271aa1ba7a", "publicationVenue": {"id": "42cd70f7-45f1-4f5a-9723-42d222d6c56e", "name": "IEEE transactions on computers", "type": "journal", "alternate_names": ["IEEE Transactions on Computers", "IEEE Trans Comput", "IEEE trans comput"], "issn": "0018-9340", "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=12", "alternate_urls": ["http://www.computer.org/portal/web/tc"]}, "title": "ApproxSSD: Data Layout Aware Sampling on an Array of SSDs", "abstract": "Execution of analytic frameworks on sample data sets is the current trend in response to increasing data size and demand for real-time analysis. Additionally, high-performance, energy-efficient Solid-State Drive (SSD) arrays are the primary storage subsystem for parallel data analysis systems. To exploit the benefits of SSD arrays when executing sample data set analytics, several key areas must be considered. First, due to logical to physical address translation, random data choice in data sampling jobs can cause unbalanced workloads among SSDs in the array. Second, after the data choice, existing task schedulers in data analysis frameworks can introduce non-negligible resource contentions resulting from the suboptimal Input/Output (I/O). The performance of SSDs is unpredictable because of their varying maintenance costs at runtime, which renders them hard to be managed by the scheduler. With the trend towards sample set data analytics and the use of SSDs, it is increasingly important to ensure balanced workloads and minimize resource contention. Without addressing these areas, sample-set data analytics on SSDs will continue to suffer from performance inefficiencies. In this paper, we propose ApproxSSD to perform on-disk layout-aware data sampling on SSD arrays. This proposed framework leverages data selection and task scheduling to improve the performance of many applications. ApproxSSD decouples I/O from the computation in task execution. This avoids potential I/O contentions and suboptimal workload balances. We have developed an open-source prototype system of ApproxSSD in Scala at Github. Our evaluation shows that ApproxSSD can achieve up to 2.7 times speed up at 10 percent sampling ratio under an example sampling workload when compared to Spark, while simultaneously maintaining high output accuracy.", "venue": "IEEE transactions on computers", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-04-01", "journal": {"name": "IEEE Transactions on Computers", "pages": "471-483", "volume": "68"}, "authors": [{"authorId": "79860137", "name": "Jian Zhou"}, {"authorId": "35250883", "name": "Huafeng Wu"}, {"authorId": "37089214", "name": "Jun Wang"}], "citations": [{"paperId": "4b196f39b9a0e3f53b62292f29f9a8a6434c51b0", "title": "Meteorological data layout and task scheduling in a multi-cloud environment"}, {"paperId": "e3a7ed953ff80da6d7efaf07ae65e0b2a5b28a96", "title": "2019 Index IEEE Transactions on Computers Vol. 68"}, {"paperId": "2ce25f403002bf0ca5038ec9727edeeaccd5ad23", "title": "Data Layout and Scheduling Tasks in a Meteorological Cloud Environment"}, {"paperId": "9a48bc280d09973d169b9bba9939b074672253d3", "title": "Transactions on Computers"}]}
