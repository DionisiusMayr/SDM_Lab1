{"paperId": "84f8d0441396576a6e916dc9f395bd12c073c24b", "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99", "name": "International Conference on Architectural Support for Programming Languages and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS", "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program Lang Oper Syst", "Architectural Support for Programming Languages and Operating Systems"], "url": "http://www.acm.org/sigplan/"}, "title": "FINGERS: exploiting fine-grained parallelism in graph mining accelerators", "abstract": "Graph mining is an emerging application of high importance and also with high complexity, thus requiring efficient hardware acceleration. Current accelerator designs only utilize coarse-grained parallelism, leaving large room for further optimizations. Our key insight is to fully exploit fine-grained parallelism to overcome the existing issues of hardware underutilization, inefficient resource provision, and limited single-thread performance under imbalanced loads. Targeting pattern-aware graph mining algorithms, we first comprehensively identify and analyze the abundant fine-grained parallelism at the branch, set, and segment levels during search tree exploration and set operations. We then propose a novel graph mining accelerator, FINGERS, which effectively exploits these multiple levels of fine-grained parallelism to achieve significant performance improvements. FINGERS mainly enhances the design of each single processing element with parallel compute units for set operations, and efficient techniques for task scheduling, load balancing, and data aggregation. FINGERS outperforms the state-of-the-art design by 2.8\u00d7 on average and up to 8.9\u00d7 with the same chip area. We also demonstrate that different patterns and different graphs exhibit drastically different parallelism opportunities, justifying the necessity of exploiting all levels of fine-grained parallelism in FINGERS.", "venue": "International Conference on Architectural Support for Programming Languages and Operating Systems", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2022-02-28", "journal": {"name": "Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems"}, "authors": [{"authorId": "2109279821", "name": "Qihang Chen"}, {"authorId": "2040881560", "name": "Boyu Tian"}, {"authorId": "2092402029", "name": "Mingyu Gao"}], "citations": [{"paperId": "bc8142622c97db86d1b01467002f27660122c543", "title": "Enabling HW-Based Task Scheduling in Large Multicore Architectures"}, {"paperId": "2318bdeea310b1ea524fa483f9276c4f3ef6c88f", "title": "GraphSet: High Performance Graph Mining through Equivalent Set Transformations"}, {"paperId": "c1928f42ad6293562df6078b83adef1e78bd224e", "title": "Tango: Rethinking Quantization for Graph Neural Network Training on GPUs"}, {"paperId": "15d999fbb9779e1e0d791dbd22e08fadcd72b733", "title": "PSMiner: A Pattern-Aware Accelerator for High-Performance Streaming Graph Pattern Mining"}, {"paperId": "1bb10600aa2ebc639a878fde3b0c75471abd0da5", "title": "Shogun: A Task Scheduling Framework for Graph Mining Accelerators"}, {"paperId": "cb0d72d300e2042050f31877642caed84d54f3f8", "title": "PIMMiner: A High-performance PIM Architecture-aware Graph Mining Framework"}, {"paperId": "54098e299a1672a0f0a27e0affa8e600690164f3", "title": "Recent Developments in Low-Power AI Accelerators: A Survey"}, {"paperId": "afa3dd52f1ac721d41e658be28ad8e45b1792023", "title": "Mint: An Accelerator For Mining Temporal Motifs"}, {"paperId": "66dd43a62358f18a8fbd60aac44b0f11a12346e6", "title": "DIMMining: pruning-efficient and parallel graph mining on near-memory-computing"}, {"paperId": "6550a0af3586ba50f61c4b5f930924cc9318918b", "title": "Arya: Arbitrary Graph Pattern Mining with Decomposition-based Sampling"}]}
