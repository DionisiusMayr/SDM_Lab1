{"paperId": "91119319745c15d1d628b6dcb87251f981014c36", "publicationVenue": {"id": "289bfdda-eab3-4c9a-97be-ef1e0f9ddfc0", "name": "International Symposium on Software Testing and Analysis", "type": "conference", "alternate_names": ["ISSTA", "Int Symp Softw Test Anal"], "url": "https://dl.acm.org/conference/issta"}, "title": "Continuous test suite failure prediction", "abstract": "Continuous integration advocates to run the test suite of a project frequently, e.g., for every code change committed to a shared repository. This process imposes a high computational cost and sometimes also a high human cost, e.g., when developers must wait for the test suite to pass before a change appears in the main branch of the shared repository. However, only 4% of all test suite invocations turn a previously passing test suite into a failing test suite. The question arises whether running the test suite for each code change is really necessary. This paper presents continuous test suite failure prediction, which reduces the cost of continuous integration by predicting whether a particular code change should trigger the test suite at all. The core of the approach is a machine learning model based on features of the code change, the test suite, and the development history. We also present a theoretical cost model that describes when continuous test suite failure prediction is worthwhile. Evaluating the idea with 15k test suite runs from 242 open-source projects shows that the approach is effective at predicting whether running the test suite is likely to reveal a test failure. Moreover, we find that our approach improves the AUC over baselines that use features proposed for just-in-time defect prediction and test case failure prediction by 13.9% and 2.9%, respectively. Overall, continuous test suite failure prediction can significantly reduce the cost of continuous integration.", "venue": "International Symposium on Software Testing and Analysis", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate": "2021-07-11", "journal": {"name": "Proceedings of the 30th ACM SIGSOFT International Symposium on Software Testing and Analysis"}, "authors": [{"authorId": "121574197", "name": "Cong Pan"}, {"authorId": "1884064", "name": "Michael Pradel"}], "citations": [{"paperId": "636cb1d19992772265309a2b2c853272eca317e9", "title": "Resource Usage and Optimization Opportunities in Workflows of GitHub Actions"}, {"paperId": "8345a414d9933f3f422b1aec1ab2256811d21c4b", "title": "An Intelligent Approach to Code-Driven Test Execution"}, {"paperId": "3171620df2f63b3d60bb7f86bd2e66c8cb2cee76", "title": "PAVUDI: Patch-based Vulnerability Discovery using Machine Learning"}, {"paperId": "faf958020c6c97576a9fd20249853affbf014be5", "title": "SAGA: Summarization-Guided Assert Statement Generation"}, {"paperId": "3f06dcb2a0a153658dd894adfa8f1a2c5b598012", "title": "Systematic Literature Review on Application of Machine Learning in Continuous Integration"}, {"paperId": "31b54e79b4af4b681ab88b5bf01a91d9ed0fd83a", "title": "Test Case Prioritization using Transfer Learning in Continuous Integration Environments"}, {"paperId": "5084a0d0bdebece0396027d9d886ddc3966ecea3", "title": "SoK: Machine Learning for Continuous Integration"}, {"paperId": "b49a3d0e3e22590887a6fc3c5dab4ee778ac5246", "title": "Optimizing Continuous Integration by Dynamic Test Proportion Selection"}, {"paperId": "9e88a6e3f1068fd4c265966167919d5de70feb55", "title": "HybridCISave: A Combined Build and Test Selection Approach in Continuous Integration"}, {"paperId": "6a6861493fd0c2fd0c1c9357694af8ca8d93a616", "title": "On the effectiveness of data balancing techniques in the context of ML-based test case prioritization"}, {"paperId": "3c55e5d51a199e5f5db9d255c4cf9597e1dc0d5a", "title": "Learning to Rank for Test Case Prioritization"}, {"paperId": "649f094c2d638d0b4d8e3b100bb25a4e14c58ed4", "title": "Predictive Models in Software Engineering: Challenges and Opportunities"}, {"paperId": "15c73cff6a30c818e66b16f9a0dd3ad9c96aaaf0", "title": "Cost of Flaky Tests in Continuous Integration: An Industrial Case Study"}]}
