{"paperId": "df64f7083338d4ad85d204a49f931ba50d9cabc6", "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99", "name": "International Conference on Architectural Support for Programming Languages and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS", "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program Lang Oper Syst", "Architectural Support for Programming Languages and Operating Systems"], "url": "http://www.acm.org/sigplan/"}, "title": "Debugging in the brave new world of reconfigurable hardware", "abstract": "Software and hardware development cycles have traditionally been quite distinct. Software allows post-deployment patches, which leads to a rapid development cycle. In contrast, hardware bugs that are found after fabrication are extremely costly to fix (and sometimes even unfixable), so the traditional hardware development cycle involves massive investment in extensive simulation and formal verification. Reconfigurable hardware, such as a Field Programmable Gate Array (FPGA), promises to propel hardware development towards an agile software-like development approach, since it enables a hardware developer to patch bugs that are detected during on-chip testing or in production. Unfortunately, FPGA programmers lack bug localization tools amenable to this rapid development cycle, since past tools mainly find bugs via simulation and verification. To develop hardware bug localization tools for a rapid development cycle, a thorough understanding of the symptoms, root causes, and fixes of hardware bugs is needed. In this paper, we first study bugs in existing FPGA designs and produce a testbed of reliably-reproducible bugs. We classify the bugs according to their intrinsic properties, symptoms, and root causes. We demonstrate that many hardware bugs are comparable to software bug counterparts, and would benefit from similar techniques for bug diagnosis and repair. Based upon our findings, we build a novel collection of hybrid static/dynamic program analysis and monitoring tools for debugging FPGA designs, showing that our tools enable a software-like development cycle by effectively reducing developers' manual efforts for bug localization.", "venue": "International Conference on Architectural Support for Programming Languages and Operating Systems", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2022-02-28", "journal": {"name": "Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems"}, "authors": [{"authorId": "144152953", "name": "Jiacheng Ma"}, {"authorId": "46245486", "name": "Gefei Zuo"}, {"authorId": "2069113829", "name": "Kevin Loughlin"}, {"authorId": "2155846383", "name": "Haoyang Zhang"}, {"authorId": "2059893796", "name": "Andrew Quinn"}, {"authorId": "3178312", "name": "Baris Kasikci"}], "citations": [{"paperId": "e31cf16d643c192b3ba5b2212d5affc60e7394e5", "title": "Mantra: Mutation Testing of Hardware Design Code Based on Real Bugs"}, {"paperId": "a490646bc1857939c94f9593d8398832fde0aeac", "title": "CPU-free Computing: A Vision with a Blueprint"}, {"paperId": "054d3ee4add862242f97321e15f5f30049eba239", "title": "Validating the Redundancy Assumption for HDL from Code Clone's Perspective"}, {"paperId": "bf444fe86d19caa42a5e93b4a5199bd3effca39d", "title": "Vidi: Record Replay for Reconfigurable Hardware"}, {"paperId": "cfa6cacf804c084194ae44da063b1c5a7dff7535", "title": "Stepwise Debugging for Hardware Accelerators"}, {"paperId": "6d83ec0835ac47ef18c5de72e5a29475b4db3210", "title": "Towards Developing High Performance RISC-V Processors Using Agile Methodology"}, {"paperId": "3f61775cb652637f9bec1b3ba93f11dfc8f45018", "title": "Hyperion: A Case for Unified, Self-Hosting, Zero-CPU Data-Processing Units (DPUs)"}]}
