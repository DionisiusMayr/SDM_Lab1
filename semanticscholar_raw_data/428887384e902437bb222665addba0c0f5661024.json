{"paperId": "428887384e902437bb222665addba0c0f5661024", "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f", "name": "IEEE Transactions on Network and Service Management", "type": "journal", "alternate_names": ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url": "http://ejournals.ebsco.com/direct.asp?JournalID=714200", "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028", "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]}, "title": "You Only Run Once: Spark Auto-Tuning From a Single Run", "abstract": "Tuning configurations of Spark jobs is not a trivial task. State-of-the-art auto-tuning systems are based on iteratively running workloads with different configurations. During the optimization process, the relevant features are explored to find good solutions. Many optimizers enhance the time-to-solution using black-box optimization algorithms that do not take into account any information from the Spark workloads. In this article, we present a new method for tuning configurations that uses information from one run of a Spark workload. To achieve good performance, we mine the SparkEventLog that is generated by the Spark engine. This log file contains a large amount of information from the executed application. We use this information to enhance a performance model with low-level features from the workload to be optimized. These features include Spark Actions, Transformations, and Task metrics. This process allows us to obtain application-specific workload information. With this information our system can predict sensible Spark configurations for unseen jobs, given that it has been trained with reasonable coverage of Spark applications. Experiments show that the presented system correctly produces good configurations, while achieving up to 80% speedup with respect to the default Spark configuration, and up to 12x speedup of the time-to-solution with respect to a standard Bayesian Optimization procedure.", "venue": "IEEE Transactions on Network and Service Management", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2020-12-01", "journal": {"name": "IEEE Transactions on Network and Service Management", "pages": "2039-2051", "volume": "17"}, "authors": [{"authorId": "32902381", "name": "David Buchaca Prats"}, {"authorId": "2083798143", "name": "Felipe Albuquerque Portella"}, {"authorId": "6418294", "name": "Carlos H. A. Costa"}, {"authorId": "2658652", "name": "J. L. Berral"}], "citations": [{"paperId": "0f119b265c39f70db0b6965ed9a68a85959e1e3f", "title": "Towards General and Efficient Online Tuning for Spark"}, {"paperId": "62e2416b3a3b06dfa123620af0443ef526a03fbf", "title": "Transfer-learning-based Autotuning using Gaussian Copula"}, {"paperId": "84f60428f78964c0cb663ee36caf222e9f182b32", "title": "Rover: An Online Spark SQL Tuning Service via Generalized Transfer Learning"}, {"paperId": "6e02f1dda7075f9a101d6557fd206c5ecf994377", "title": "DeepCAT: A Cost-Efficient Online Configuration Auto-Tuning Approach for Big Data Frameworks"}, {"paperId": "9e4436cef22fb866f38ce030bb743eedf84603b7", "title": "TunaOil: A Tuning Algorithm Strategy for Reservoir Simulation Workloads"}, {"paperId": "b784dd3b8bafad23aa64f644975ba64a01aa952e", "title": "A Gas Concentration Prediction Method Driven by a Spark Streaming Framework"}, {"paperId": "35d13a1a51e2915d317c299fa34c108296e078d6", "title": "A survey on AI for storage"}, {"paperId": "2122c64be55d2b9a4ed07b587a9803911a3e9e8a", "title": "Runtime prediction of big data jobs: performance comparison of machine learning algorithms and analytical models"}, {"paperId": "41eafea6256ab2af225617006eac763b2a420ccd", "title": "LOCAT: Low-Overhead Online Configuration Auto-Tuning of Spark SQL Applications"}, {"paperId": "6c3a30c27f14851eb062bf43969856d8e6e900b8", "title": "Global Optimization of Data Pipelines in Heterogeneous Cloud Environments"}, {"paperId": "312645529c74cac339671ccc70131a144c09267d", "title": "A novel framework for generic Spark workload characterization and similar pattern recognition using machine learning"}, {"paperId": "4d1c255fc35427b355c5f964bd5f063821749182", "title": "OPPerTune : Post-Deployment Configuration Tuning of Services Made Easy"}, {"paperId": "a4d4ff654e50547105692b211291ea89b5760d2d", "title": "A Framework for Optimizing Spark Configurations"}, {"paperId": "547bcd7e78e4d65767cc4c580f8f3a42783e9b34", "title": "Performance Roulette: How Cloud Weather Affects ML-Based System Optimization"}]}
