{"paperId": "e07e3b09761077244eca1662c7d7b66df08631d7", "publicationVenue": {"id": "7f92b1d2-f2b3-454d-adbe-ff02c83fe404", "name": "IEEE Conference on Computer Communications", "type": "conference", "alternate_names": ["INFOCOM", "IEEE Conf Comput Commun"], "url": "http://www.ieee-infocom.org/"}, "title": "Efficient Coflow Transmission for Distributed Stream Processing", "abstract": "Distributed streaming applications require the underlying network flows to transmit packets continuously to keep their output results fresh. These results will become stale if no updates come, and their staleness is determined by the slowest flow. At this point, coflows can be semantically comprised. Hence, efficient coflow transmission is critical for streaming applications. However, prior coflow-based solutions have significant limitations. They use a one-shot performance metric\u2014CCT (coflow completion time), which cannot continuously reflect the staleness of the output results for a streaming application.To this end, we propose a new performance metric\u2014coflow age (CA), for coflows generated by distributed streaming applications. The CA tracks the longest time-since-last-service among all flows in a coflow. In such a context, we consider a data center network with multiple coflows that continuously transmit packets between their source-destination pairs and address the problem of minimizing the average long-term CA while simultaneously satisfying the throughput constraints from the coflows. To solve this problem efficiently, we design a randomized algorithm and a drift-plus-age algorithm, and show that they can make the average long-term CA to achieve nearly two times and arbitrarily close to the optimal value, respectively. Through extensive simulations, we further demonstrate that both of the proposed algorithms can significantly reduce the CA of coflows, without violating the throughput requirement of any coflow, when compared to the state-of-the-art solution.", "venue": "IEEE Conference on Computer Communications", "year": 2020, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-07-01", "journal": {"name": "IEEE INFOCOM 2020 - IEEE Conference on Computer Communications", "pages": "1319-1328"}, "authors": [{"authorId": "2108651293", "name": "Wenxin Li"}, {"authorId": "2115562069", "name": "Xu Yuan"}, {"authorId": "144383453", "name": "W. Qu"}, {"authorId": "2002488", "name": "Heng Qi"}, {"authorId": "2155797294", "name": "Xiaobo Zhou"}, {"authorId": "2118528991", "name": "Sheng Chen"}, {"authorId": "9046409", "name": "Renhai Xu"}], "citations": [{"paperId": "2625429dee85dfa1e00f9de63bdfff9312e684f3", "title": "RICH: Strategy-proof and efficient coflow scheduling in non-cooperative environments"}, {"paperId": "75d7fb5984189d703ffdf182c03675c7ad2953a6", "title": "Joint Online Coflow Optimization Across Geo-Distributed Datacenters"}]}
