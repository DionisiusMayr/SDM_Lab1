{"paperId": "dbeb781a01d672c6641a7d8734f0d46d1d73de59", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "FASTgres: Making Learned Query Optimizer Hinting Effective", "abstract": "\n The traditional and well-established cost-based query optimizer approach enumerates different execution plans for each query, assesses each plan with costs, and selects the plan that promises the lowest costs for execution. However, the optimal execution plan is not always selected. To steer the optimizer in the right direction, many query optimizers provide configuration parameters called query optimizer hints. These hints can be set for every single query separately. To show the great potential of these hints for the optimization of analytical queries, we present results of a comprehensive and in-depth evaluation using three benchmarks and two different versions of the open-source database system PostgreSQL. In particular, we highlight that query optimizer hinting is a non-trivial challenge. To solve this challenge, we propose\n FASTgres\n , a learning-based context-aware classification strategy for hint set prediction. Compared to related work,\n FASTgres\n provides transparent and direct hint set predictions with consistent performance improvements. In our end-to-end evaluation, we demonstrate that\n FASTgres\n effectively reduces benchmark runtimes by a factor of up to 3.25x with only steering the cost-based optimizer.\n", "venue": "Proceedings of the VLDB Endowment", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-01", "journal": {"name": "Proc. VLDB Endow.", "pages": "3310-3322", "volume": "16"}, "authors": [{"authorId": "41065728", "name": "Lucas Woltmann"}, {"authorId": "2209414836", "name": "Jerome Thiessat"}, {"authorId": "31715175", "name": "Claudio Hartmann"}, {"authorId": "1694689", "name": "Dirk Habich"}, {"authorId": "7337091", "name": "Wolfgang Lehner"}], "citations": [{"paperId": "551ff631d62b524cae31f44fb9af2ad812db5cfb", "title": "Stage: Query Execution Time Prediction in Amazon Redshift"}, {"paperId": "91fcc641d6a24c06d2c6657f9a8ec6e506d3ef86", "title": "FOSS: A Self-Learned Doctor for Query Optimizer"}]}
