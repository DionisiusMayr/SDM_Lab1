{"paperId": "35592c445d2e6adeb1c43ed5b25700b544188954", "publicationVenue": {"id": "4299b928-18a2-403a-adf4-b15510e38aed", "name": "IEEE Computer Society Annual Symposium on VLSI", "type": "conference", "alternate_names": ["IEEE Comput Soc Annu Symp VLSI", "ISVLSI"], "url": "http://www.wikicfp.com/cfp/program?id=1766"}, "title": "Exploiting Near-Data Processing to Accelerate Time Series Analysis", "abstract": "A time series is a chronologically ordered set of samples of a real-valued variable that can contain millions of observations. Time series analysis is used to analyze information in a wide variety of domains [128]: epidemiology, genomics, neuroscience, medicine, environmental sciences, economics, and more. Time series analysis includes finding similarities (mo-tifs) and anomalies (discords) between every two subsequences (i.e., slices of consecutive data points) of the time series. There are two major approaches for motif and discord discovery: approximate and exact algorithms. Approximate algorithms are faster than exact algorithms, but they can provide inaccurate results or limited discord detection, which cannot be tolerated by many applications (e.g., vehicle safety systems). Unlike approximate algorithms, exact algorithms do not yield false positives or discordant dismissals, but can be very time-consuming on large time series data. Thus, anytime versions (aka interruptible algorithms) of exact algorithms are proposed to provide approximate solutions quickly and can return a valid result even if the user stops their execution early. The state-of-the-art exact anytime method for motif and discord discovery is matrix profile [142], which is based on Euclidean distances and floating-point arithmetic. We evaluate a recent CPU implementation of the matrix profile algorithm [149] on a real multi-core machine (Intel Xeon Phi KNL [76]) and observe that its performance is heavily bottlenecked by data movement. In other words, the amount of computation per data access is not enough to hide the memory latency and thus time series analysis is memory-bound. This overhead caused by data movement limits the potential benefits of acceleration efforts that do not alleviate the data movement bottleneck in current time series applications.", "venue": "IEEE Computer Society Annual Symposium on VLSI", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2022-06-02", "journal": {"name": "2022 IEEE Computer Society Annual Symposium on VLSI (ISVLSI)", "pages": "279-282"}, "authors": [{"authorId": "2061067079", "name": "Ivan Fernandez"}, {"authorId": "1939292", "name": "Ricardo Quislant"}, {"authorId": "46175739", "name": "Christina Giannoula"}, {"authorId": "3387282", "name": "M. Alser"}, {"authorId": "2167029308", "name": "Juan G'omez-Luna"}, {"authorId": "2059547812", "name": "Eladio Guti\u00e9rrez"}, {"authorId": "3190187", "name": "O. Plata"}, {"authorId": "145929920", "name": "O. Mutlu"}], "citations": [{"paperId": "4715290c4d09f8617d05b1d630623521a363de8f", "title": "A Near Memory Computing FPGA Architecture for Neural Network Acceleration"}, {"paperId": "7bb6015f45457fdbe3bb39e17dc9cb0786ecd688", "title": "A Modern Primer on Processing in Memory"}]}
