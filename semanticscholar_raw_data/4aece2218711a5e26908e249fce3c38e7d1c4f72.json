{"paperId": "4aece2218711a5e26908e249fce3c38e7d1c4f72", "publicationVenue": {"id": "312ca99c-9149-490d-813e-c60d5e949f65", "name": "Concurrency and Computation", "type": "journal", "alternate_names": ["Concurr Comput Pract Exp", "Concurrency and Computation: Practice and Experience", "Concurr Comput"], "issn": "1532-0626", "url": "http://www3.interscience.wiley.com/cgi-bin/jhome/77004395?CRETRY=1&SRETRY=0", "alternate_urls": ["http://www3.interscience.wiley.com/cgi-bin/jtoc?ID=77004395", "http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1532-0634"]}, "title": "A multithreaded CUDA and OpenMP based power\u2010aware programming framework for multi\u2010node GPU systems", "abstract": "In the article, we have proposed a framework that allows programming a parallel application for a multi\u2010node system, with one or more graphical processing units (GPUs) per node, using an OpenMP+extended CUDA API. OpenMP is used for launching threads responsible for management of particular GPUs and extended CUDA calls allow to transfer data and launch kernels on local and remote GPUs. The framework hides inter\u2010node MPI communication from the programmer. For optimization, the implementation takes advantage of the MPI_THREAD_MULTIPLE mode allowing: multiple threads handling distinct GPUs as well as overlapping communication and computations transparently using multiple CUDA streams. The solution allows data parallelization across available GPUs in order to minimize execution time and supports a power\u2010aware mode in which GPUs are automatically selected for computations using a greedy approach in order not to exceed an imposed power limit. We have implemented and benchmarked three parallel applications including: finding the largest divisors; verification of the Collatz conjecture; finding patterns in vectors. These were tested on three various systems: a GPU cluster with 16 nodes, each with NVIDIA GTX 1060 GPU; a powerful 2\u2010node system\u2014one node with 8 \u00d7$$ \\times $$ NVIDIA Quadro RTX 6000 GPUs, the second with 4 \u00d7$$ \\times $$ NVIDIA Quadro RTX 5000 GPUs; a heterogeneous environment with one node with 2 \u00d7$$ \\times $$ NVIDIA RTX 2080 and 2 nodes with NVIDIA GTX 1060 GPUs. We demonstrated effectiveness of the framework through execution times versus power caps within ranges of 100\u20131400 W, 250\u20133000 W, and 125\u2013600 W for these systems respectively as well as gains from using two versus one CUDA streams per GPU. Finally, we have shown that for the testbed applications the solution allows to obtain high speed\u2010ups between 89.3% and 97.4% of the theoretically assessed ideal ones, for 16 nodes and 2 CUDA streams, demonstrating very good parallel efficiency.", "venue": "Concurrency and Computation", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2023-08-29", "journal": {"name": "Concurrency and Computation: Practice and Experience", "volume": "35"}, "authors": [{"authorId": "3318504", "name": "P. Czarnul"}], "citations": [{"paperId": "4b3eb187b6f974b135c2a61ffad65031492c49f4", "title": "Special Issue on the pervasive nature of HPC (PN\u2010HPC)"}]}
