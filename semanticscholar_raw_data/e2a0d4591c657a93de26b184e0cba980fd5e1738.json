{"paperId": "e2a0d4591c657a93de26b184e0cba980fd5e1738", "publicationVenue": null, "title": "GTS: A Fast and Scalable Graph Processing Method based on Streaming Topology to GPUs", "abstract": "A fast and scalable graph processing method becomes increasingly important as graphs become popular in a wide range of applications and their sizes are growing rapidly. Most of distributed graph processing methods require a lot of machines equipped with a total of thousands of CPU cores and a few terabyte main memory for handling billion-scale graphs. Meanwhile, GPUs could be a promising direction toward fast processing of large-scale graphs by exploiting thousands of GPU cores. All of the existing methods using GPUs, however, fail to process large-scale graphs that do not fit in main memory of a single machine. Here, we propose a fast and scalable graph processing method GTS that handles even RMAT32 (64 billion edges) very efficiently only by using a single machine. The proposed method stores graphs in PCI-E SSDs and executes a graph algorithm using thousands of GPU cores while streaming topology data of graphs to GPUs via PCI-E interface. GTS is fast due to no communication overhead and scalable due to no data duplication from graph partitioning among machines. Through extensive experiments, we show that GTS consistently and significantly outperforms the major distributed graph processing methods, GraphX, Giraph, and PowerGraph, and the state-of-the-art GPU-based method TOTEM.", "venue": "SIGMOD Conference", "year": 2016, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate": "2016-06-14", "journal": {"name": "Proceedings of the 2016 International Conference on Management of Data"}, "authors": [{"authorId": "2116504190", "name": "Min-Soo Kim"}, {"authorId": "3416247", "name": "K. An"}, {"authorId": "2021341", "name": "Himchan Park"}, {"authorId": "2065448792", "name": "Hyunseok Seo"}, {"authorId": "2116329459", "name": "Jinwook Kim"}], "citations": [{"paperId": "7e72894e3e553ca83592b80d34c299fabbfb7dc5", "title": "GMiner++: Boosting GPU-based frequent itemset mining by reducing redundant computations"}, {"paperId": "aae7a3652d1d16c0958ab3c5eea250ba9eafc86a", "title": "INFINEL: An efficient GPU-based processing method for unpredictable large output graph queries"}, {"paperId": "e52549fdb6be6d36071143764b8d8862aabb930c", "title": "Optimizing GPU-Based Graph Sampling and Random Walk for Efficiency and Scalability"}, {"paperId": "7fe4e933cecd74ceb52e0e3447c6a36c1da89a4e", "title": "GPUTucker: Large-scale GPU-based tucker decomposition using tensor partitioning"}, {"paperId": "b026fa23f0f73e18004a0ac909476cb205ff967e", "title": "EGraph: Efficient Concurrent GPU-Based Dynamic Graph Processing"}, {"paperId": "44775b43d0f55d0d8b94beb1fe8b76ad64270cbb", "title": "LightTraffic: On Optimizing CPU-GPU Data Traffic for Efficient Large-scale Random Walks"}, {"paperId": "79af8667ea55f0bf63462ee807d001d900754b27", "title": "GAMMA: A Graph Pattern Mining Framework for Large Graphs on GPU"}, {"paperId": "1d4f8f69f90f5479d1dff65fa10650b449fae3e2", "title": "End-to-End LU Factorization of Large Matrices on GPUs"}, {"paperId": "2b35225d24544b48131af4f93df1fad699a77c7f", "title": "GraphA: An efficient ReRAM-based architecture to accelerate large scale graph processing"}, {"paperId": "bb622799bd257a440b1a0beaec9df46a4854d1d1", "title": "PGAbB: A Block-Based Graph Processing Framework for Heterogeneous Platforms"}, {"paperId": "3b9e59e91d99a49122124b25d58e8a1a887e448b", "title": "HyTGraph: GPU-Accelerated Graph Processing with Hybrid Transfer Management"}, {"paperId": "af2bb3a28f95bb4ff5c6f26321a45c39be2b94ed", "title": "Ginex: SSD-enabled Billion-scale Graph Neural Network Training on a Single Machine via Provably Optimal In-memory Caching"}, {"paperId": "2cf170d49339371e93c4b050de09bb8f979369b6", "title": "Scaling and Selecting GPU Methods for All Pairs Shortest Paths (APSP) Computations"}, {"paperId": "63b809349666fa571782b08364b68acbb1df0c2d", "title": "GraphIt to CUDA Compiler in 2021 LOC: A Case for High-Performance DSL Implementation via Staging with BuilDSL"}, {"paperId": "f2259b785c76fdd285ae574ba38dd56ca6900865", "title": "Unified-memory-based hybrid processing for partition-oriented subgraph matching on GPU"}, {"paperId": "4595404a30579368ffb6f15f0b96cf346c5d0658", "title": "LargeGraph"}, {"paperId": "dfcd4cbd47b17eb60392ff918e2b5191921b503e", "title": "Skywalker: Efficient Alias-Method-Based Graph Sampling and Random Walk on GPUs"}, {"paperId": "27f155758647e9dcd296f003b78dd21de60017bb", "title": "Systemizing Interprocedural Static Analysis of Large-scale Systems Code with Graspan"}, {"paperId": "5d647f9147dd0412cc45a36e40f8562e46988c24", "title": "Taming the Zoo: The Unified GraphIt Compiler Framework for Novel Architectures"}, {"paperId": "353663f5ccf824d5f9f905a2aca4fc289813f194", "title": "Efficient parallel A* search on multi-GPU system"}, {"paperId": "0d6c6e8d01945b9664c8cd9ac704888149dec5e2", "title": "DGCL: an efficient communication library for distributed GNN training"}, {"paperId": "ad847e6792897a57a2d23ccfa57cd808ce992f23", "title": "Trillion-scale Graph Processing Simulation based on Top-Down Graph Upscaling"}, {"paperId": "a92ac38658b3a7f75e1836b9d9b6c41b21c40d79", "title": "Compiling Graph Applications for GPU s with GraphIt"}, {"paperId": "b37c5a96fe2f3389d9fe3addb8812634abb82164", "title": "Grus"}, {"paperId": "76031ea3119e840798d4aef5cfe3c55814077698", "title": "Compliation Techniques for Graphs Algorithms on GPUs"}, {"paperId": "974a06b07fc2d51b14a37d1fca5cb16ee1fef306", "title": "Compilation Techniques for Graph Algorithms on GPUs"}, {"paperId": "465df6e7ac6d4c9afd23759a01ae2fb530ce4dbb", "title": "WolfGraph: The edge-centric graph processing on GPU"}, {"paperId": "6d31f0391547e6a56e63cf88948807c675650a5b", "title": "AsynGraph"}, {"paperId": "d5ecc3b3380d8d20637ded5101f4a1caff8d4840", "title": "Groute"}, {"paperId": "f39c4f757f0378914052f8856a85fc90956e9329", "title": "PCGCN: Partition-Centric Processing for Accelerating Graph Convolutional Network"}, {"paperId": "8691eeb5bb957050c69bd698b96e050bbe78aaba", "title": "Subway: minimizing data transfer during out-of-GPU-memory graph processing"}, {"paperId": "91474bbe46200313bef7516cfa9a78258770c134", "title": "SONG: Approximate Nearest Neighbor Search on GPU"}, {"paperId": "b333be37cc7e11ca5429a1ace443f244bd94d240", "title": "HitGraph: High-throughput Graph Processing Framework on FPGA"}, {"paperId": "87e0fc77548a6fde608e0835fa99880f8a7fa8d4", "title": "NeuGraph: Parallel Deep Neural Network Computation on Large Graphs"}, {"paperId": "b3d8c5479d23c4492903cc6f02193bd43846d20b", "title": "DistME: A Fast and Elastic Distributed Matrix Computation Engine using GPUs"}, {"paperId": "6ec4b7e3f09d5b5b82479ded67b6b39c85889263", "title": "GPU-based Graph Traversal on Compressed Graphs"}, {"paperId": "9097985c7b61facd4b3e6748dde53d7d52510376", "title": "RealGraph: A Graph Engine Leveraging the Power-Law Distribution of Real-World Graphs"}, {"paperId": "bb48df8040e8eddb9a5bc1794bd6cde8afae6b7f", "title": "Excavating the Potential of GPU for Accelerating Graph Traversal"}, {"paperId": "33558f35e826af941c4c919cb50fb75a265f4879", "title": "DiGraph: An Efficient Path-based Iterative Directed Graph Processing System on Multiple GPUs"}, {"paperId": "9da352207aed0c7245640e64a6fe7e765ffe8c1f", "title": "DiGraph"}, {"paperId": "32604282b8e53584a906d31ab1238f7b41d0dd39", "title": "A Survey on Graph Processing Accelerators: Challenges and Opportunities"}, {"paperId": "3d879cde5e905fce83f10c35fbe0365dfda0af32", "title": "Clip: A Disk I/O Focused Parallel Out-of-Core Graph Processing System"}, {"paperId": "61946177ea5d44ad18ff09de7929556d7b34cd8b", "title": "SIMD-X: Programming and Processing of Graph Algorithms on GPUs"}, {"paperId": "2e28197b244f28573d3abbb671c53eb98b3c91e1", "title": "Enhancing the Scalability and Performance of Iterative Graph Algorithms on Apache Storm"}, {"paperId": "2a05cb8677128664a80e1b225125e31d8cc91cc9", "title": "Towards Efficient Large-Scale Graph Neural Network Computing"}, {"paperId": "26170c4e06b66e6381f04150889b84c2fc3d7237", "title": "GraphMP: I/O-Efficient Big Graph Analytics on a Single Commodity Machine"}, {"paperId": "0aa4a497726291741fda41ad4f7be07dfd816a22", "title": "EvoGraph: An Effective and Efficient Graph Upscaling Method for Preserving Graph Properties"}, {"paperId": "e3146a803ba3a11eabbc3c3286c392780dbe3571", "title": "Efficient processing of recommendation algorithms on a single-machine-based graph engine"}, {"paperId": "dcfd0402e90a3321ad212cd8b325f450a344f129", "title": "Gluon: a communication-optimizing substrate for distributed heterogeneous graph analytics"}, {"paperId": "ac74b11933eeee93357a4527c2d322cb2f0d7eda", "title": "Scaling Up Large-Scale Graph Processing for GPU-Accelerated Heterogeneous Systems"}, {"paperId": "7ce80d6e6772bf91d7cc05485b12915952b09c61", "title": "GMiner: A fast GPU-based frequent itemset mining method for large-scale data"}, {"paperId": "228406a6cc8e3bd7f0386f8be19e370459d25bc4", "title": "A survey of graph processing on graphics processing units"}, {"paperId": "7cf3b3861daa851e2d7f8c7a80ff43928345d55d", "title": "Graph Processing on GPUs"}, {"paperId": "1d324adfc7ba42820550038ac03f07518aadf464", "title": "Research on Graph Processing Systems on a Single Machine"}, {"paperId": "5d137be96e0358fc8ee572234b718478a11c5bec", "title": "A Distributed Multi-GPU System for Fast Graph Processing"}, {"paperId": "f4e42c15a7a35a198a04a74cbdbe19d360a2d00c", "title": "Graphie: Large-Scale Asynchronous Graph Traversals on Just a GPU"}, {"paperId": "f84aa869a21f083133b74e23d83ab2dd1378b7ff", "title": "GraphMP: An Efficient Semi-External-Memory Big Graph Processing System on a Single Machine"}, {"paperId": "55de2ad793b4ccf542536f38730cc4a13cefe005", "title": "TrillionG: A Trillion-scale Synthetic Graph Generator using a Recursive Vector Model"}, {"paperId": "4e28693070356f6ec08bd1246e61fd9e7aa5eac0", "title": "Mosaic: Processing a Trillion-Edge Graph on a Single Machine"}, {"paperId": "87040851da805c807cf674338b59816e16bf821e", "title": "Groute: An Asynchronous Multi-GPU Programming Model for Irregular Computations"}, {"paperId": "ecc64b4c8f5ccc7576aeb0c01b25f149334db6b6", "title": "Graph Processing Scheme Using GPU With Value-Driven Differential Scheduling"}, {"paperId": "a34652c5f46b8252afb601bebe2c1e5e506d9e66", "title": "SGMiner: A Fast and Scalable GPU-based Frequent Pattern Miner on SSDs"}, {"paperId": "1ebef4a2c67a1678add9eebe051b0cc5b6ef26a4", "title": "Scaph: Scalable GPU-Accelerated Graph Processing with Value-Driven Differential Scheduling"}, {"paperId": "7eb6e93a7860a99778c151b012b86084662c082c", "title": "Pre-Select Static Caching and Neighborhood Ordering for BFS-like Algorithms on Disk-based Graph Engines"}, {"paperId": "c6c5effbb349da454a1d0ba8e694692a65eb93ce", "title": "Graph Analytics on Manycore Memory Systems"}, {"paperId": "096819782ce34058faa7ad3d81c9b3d49a5cf527", "title": "Core Graph: Exploiting Edge Centrality to Speedup the Evaluation of Iterative Graph Queries"}]}
