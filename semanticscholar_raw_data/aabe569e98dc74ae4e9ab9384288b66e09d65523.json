{"paperId": "aabe569e98dc74ae4e9ab9384288b66e09d65523", "publicationVenue": {"id": "9448f839-459b-45f3-8573-5eff3f032334", "name": "USENIX Annual Technical Conference", "type": "conference", "alternate_names": ["USENIX Annu Tech Conf", "USENIX", "USENIX ATC"], "url": "https://www.usenix.org/conferences/byname/131"}, "title": "Riker: Always-Correct and Fast Incremental Builds from Simple Specifications", "abstract": "Build systems are responsible for building software correctly and quickly. Unfortunately, traditional build tools like make are correct and fast only when developers precisely enumerate dependencies for every incremental build step. Forward build systems improve correctness over traditional build tools by discovering dependencies automatically, but existing forward build tools have two fundamental flaws. First, they are incorrect; existing forward build tools miss dependencies because their models of system state are incomplete. Second, they rely on users to manually specify incremental build steps, increasing the programmer burden for fast builds. This paper introduces R IKER , a forward build system that guarantees fast, correct builds. R IKER builds are easy to specify; in many cases a single command such as gcc *.c suffices. From these simple specifications, R IKER automatically discovers fast incremental rebuild opportunities. R IKER models the entire POSIX filesystem\u2014not just files, but directories, pipes, and so on. This model guarantees that every dependency is checked on every build so every output is correct. We use R IKER to build 14 open source packages including LLVM and memcached. R IKER incurs a median overhead of 8.8% on the initial full build. On average, R IKER \u2019s incremental builds realize 94% of make \u2019s incremental speedup with no manual effort and no risk of errors .", "venue": "USENIX Annual Technical Conference", "year": 2022, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"pages": "885-898"}, "authors": [{"authorId": "2613886", "name": "Charlie Curtsinger"}, {"authorId": "2628408", "name": "Daniel W. Barowy"}], "citations": [{"paperId": "27011931951b21d1b75d82265f78a97d4da9914f", "title": "Enabling Fine-Grained Incremental Builds by Making Compiler Stateful"}, {"paperId": "4ccbbf93a9237bed3e30dd27ecb5c3259db36dea", "title": "Executing Shell Scripts in the Wrong Order, Correctly"}, {"paperId": "b9404b6dd58d7778c32b94c76587219fb2f0b70e", "title": "OCOLOS: Online COde Layout OptimizationS"}, {"paperId": "adf7135a4eaa4dc5457758808d5172d01c3bb188", "title": "DiSh: Dynamic Shell-Script Distribution"}]}
