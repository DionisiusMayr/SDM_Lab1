{"paperId": "e5ff1668b4ce071c033b38c4e0d51000d7a4d67e", "publicationVenue": null, "title": "Automatic Incrementalization of Vertex-Centric Programs", "abstract": "Vertex-centric computations by their very definition are communication intensive. Because of this, a large portion of the total computational time of a vertex-centric program is spent in communication, and reducing the number ofmessages sent in order to peform a given computation is a critical aspect of any optimization efforts. While previous work has focused on reducing communication overhead by directly changing the communication patterns by altering the way the graph is partitioned and distributed, or by altering the graph topology itself, in this paperwe present a different optimization strategy based on a family of complementary compiletime program transformations tominimize communication overhead. In particular, we show how through a series of compile-time transformations of the programwe can automatically incrementalize the vertex-centric algorithm as a whole. We formalize and empirically evaluate these transformations and show that they can result in up-to 4.4X speedup on certain programs. Furthermore, due to the fact that these are program transformations alone, other prior optimization strategies can work with the resulting vertex-centric program just as they would a non-incrementalized program.", "venue": "", "year": 2018, "fieldsOfStudy": null, "publicationTypes": null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2520685", "name": "Timothy A. K. Zakian"}, {"authorId": "51153010", "name": "L. Capelli"}], "citations": [{"paperId": "c59a2f23e4f6a62c0c5b322173a68ff8eed2238b", "title": "Incrementalization of graph partitioning algorithms"}, {"paperId": "b6dd86dfe33849c5d5084f53e77bf03f40281704", "title": "Adaptive Asynchronous Parallelization of Graph Algorithms"}]}
