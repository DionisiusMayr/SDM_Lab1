{"paperId": "c130448814f002df3d82df61533d7f8a1d434e68", "publicationVenue": {"id": "b7aa40ac-729b-49d6-9064-4d1a9480e9a9", "name": "International Symposium on High-Performance Computer Architecture", "type": "conference", "alternate_names": ["HPCA", "High Perform Comput Appl", "Int Symp High-performance Comput Archit", "High Performance Computing and Applications"], "url": "https://web.archive.org/web/*/http://www.hpcaconf.org/"}, "title": "DepGraph: A Dependency-Driven Accelerator for Efficient Iterative Graph Processing", "abstract": "Many graph processing systems have been recently developed for many-core processors. However, for iterative graph processing, due to the dependencies between vertices\u2019 states, the propagations of new states of vertices are inherently conducted along graph paths sequentially and are also dependent on each other. Despite the years\u2019 research effort, existing solutions still severely underutilize many-core processors to quickly propagate the new states of vertices, suffering from slow convergence speed. In this paper, we propose a dependency-driven programmable accelerator, DepGraph, which couples with the core architecture of the many-core processor and can fundamentally alleviate the challenge of dependencies for faster state propagation. Specifically, we propose an effective dependency-driven asynchronous execution approach into novel microarchitecture designs for faster state propagations. DepGraph prefetches the vertices for the core on-the-fly along the dependency chains between their states and the active vertices\u2019 new states, aiming to effectively accelerate the propagations of the active vertices\u2019 new states and also ensure better data locality. Through transforming the dependency chains along the frequently-used paths into direct ones at runtime and maintaining these calculated direct dependencies as a set of fast shortcuts, called hub index, DepGraph further accelerates most state propagations. Also, many propagations do not need to wait for the completion of other propagations, which enables more propagations to be effectively conducted along the paths with higher degree of parallelism. The experimental results show that for iterative graph processing on a simulated 64-core processor, a cutting-edge software graph processing system can achieve 5.0\u201322.7 times speedup after integrating with our DepGraph while incurring only 0.6% area cost. In comparison with three state-of-the-art hardware solutions, i.e., HATS, Minnow, and PHI, DepGraph improves the performance by up to 3.0\u201314.2, 2.2\u20135.8, and 2.4\u201310.1 times, respectively.", "venue": "International Symposium on High-Performance Computer Architecture", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-02-01", "journal": {"name": "2021 IEEE International Symposium on High-Performance Computer Architecture (HPCA)", "pages": "371-384"}, "authors": [{"authorId": "72095113", "name": "Yu Zhang"}, {"authorId": "144925807", "name": "Xiaofei Liao"}, {"authorId": "145914256", "name": "Hai Jin"}, {"authorId": "1683219", "name": "Ligang He"}, {"authorId": "143824511", "name": "Bingsheng He"}, {"authorId": "2109500825", "name": "Haikun Liu"}, {"authorId": "144204231", "name": "Lin Gu"}], "citations": [{"paperId": "438497a8fe2a387aeabf4c182a92a154aa480385", "title": "Data Motion Acceleration: Chaining Cross-Domain Multi Accelerators"}, {"paperId": "69ee8f1f98da4847b3d7ffc9f04a68492873588b", "title": "Enhancing Graph Random Walk Acceleration via Efficient Dataflow and Hybrid Memory Architecture"}, {"paperId": "149e6824aa241cd6faa1819b5aa85338dbeda0f6", "title": "Graph for Science: From API based Programming to Graph Engine based Programming for HPC"}, {"paperId": "ab7eac8eacf50dcb03a5b4a0776f1a248811826e", "title": "Communication-Avoiding Recursive Aggregation"}, {"paperId": "4b8af75c85c2603f8fdb647613896f2375d0c1c4", "title": "Flip: Data-centric Edge CGRA Accelerator"}, {"paperId": "83d06bb5b982a890714654dda13553538fcab881", "title": "ACGraph: Accelerating Streaming Graph Processing via Dependence Hierarchy"}, {"paperId": "ff70b57466ca768b2c70bb8459eda4f3f78af4b6", "title": "In-Storage Domain-Specific Acceleration for Serverless Computing"}, {"paperId": "5e78af2f7da1228d650c35105fec76ef4ef9dcc9", "title": "Intelligent Computing: The Latest Advances, Challenges and Future"}, {"paperId": "a6e98711629d173205fbc7dd28110f408121c01d", "title": "Scaling Graph 500 SSSP to 140 Trillion Edges with over 40 Million Cores"}, {"paperId": "17f3d9b84c21cfc313d5c11f9efba37605cade94", "title": "Software Systems Implementation and Domain-Specific Architectures towards Graph Analytics"}, {"paperId": "f071772d67f3c6c8cf424666f5653177f538946a", "title": "SDMA: An Efficient and Flexible Sparse-Dense Matrix-Multiplication Architecture for GNNs"}, {"paperId": "7aff55edc983ddf42943813f28bfccb659332ef5", "title": "TDGraph: a topology-driven accelerator for high-performance streaming graph processing"}, {"paperId": "a4211edeae71b54fd4206e5474c1cc2fd259a9b5", "title": "A Preliminary Performance Evaluation of Breadth-first Search on a Configurable Processor"}, {"paperId": "f624bfc432f5ed9350125de1500e4e02baaf841b", "title": "LCCG: A Locality-Centric Hardware Accelerator for High Throughput of Concurrent Graph Processing"}, {"paperId": "4595404a30579368ffb6f15f0b96cf346c5d0658", "title": "LargeGraph"}, {"paperId": "862b475d2602000bac075513eec35f3de668f9fe", "title": "PolyGraph: Exposing the Value of Flexibility for Graph Processing Accelerators"}]}
