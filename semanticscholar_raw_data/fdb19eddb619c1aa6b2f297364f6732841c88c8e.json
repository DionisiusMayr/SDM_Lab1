{"paperId": "fdb19eddb619c1aa6b2f297364f6732841c88c8e", "publicationVenue": {"id": "5545566b-c0b8-418c-83a5-a986a4657572", "name": "ACM-SIAM Symposium on Discrete Algorithms", "type": "conference", "alternate_names": ["Symposium on Discrete Algorithms", "ACM-SIAM Symp Discret Algorithm", "Symp Discret Algorithm", "SODA"], "url": "https://en.wikipedia.org/wiki/Symposium_on_Discrete_Algorithms"}, "title": "A Deamortization Approach for Dynamic Spanner and Dynamic Maximal Matching", "abstract": "Many dynamic graph algorithms have an amortized update time, rather than a stronger worst-case guarantee. But amortized data structures are not suitable for real-time systems, where each individual operation has to be executed quickly. For this reason, there exist many recent randomized results that aim to provide a guarantee stronger than amortized expected. The strongest possible guarantee for a randomized algorithm is that it is always correct (Las Vegas) and has high-probability worst-case update time, which gives a bound on the time for each individual operation that holds with high probability. In this article, we present the first polylogarithmic high-probability worst-case time bounds for the dynamic spanner and the dynamic maximal matching problem. (1) For dynamic spanner, the only known o(n) worst-case bounds were O(n3/4) high-probability worst-case update time for maintaining a 3-spanner and O(n5/9) for maintaining a 5-spanner. We give a O(1)k log3 (n) high-probability worst-case time bound for maintaining a (2k-1)-spanner, which yields the first worst-case polylog update time for all constant k. (All the results above maintain the optimal tradeoff of stretch 2k-1 and \u00d5(n1+1/k) edges.) (2) For dynamic maximal matching, or dynamic 2-approximate maximum matching, no algorithm with o(n) worst-case time bound was known and we present an algorithm with O(log 5 (n)) high-probability worst-case time; similar worst-case bounds existed only for maintaining a matching that was (2+\u03f5)-approximate, and hence not maximal. Our results are achieved using a new approach for converting amortized guarantees to worst-case ones for randomized data structures by going through a third type of guarantee, which is a middle ground between the two above: An algorithm is said to have worst-case expected update time \u0251 if for every update \u03c3, the expected time to process \u03c3 is at most \u0251. Although stronger than amortized expected, the worst-case expected guarantee does not resolve the fundamental problem of amortization: A worst-case expected update time of O(1) still allows for the possibility that every 1/f(n) updates requires \u03f4 (f(n)) time to process, for arbitrarily high f(n). In this article, we present a black-box reduction that converts any data structure with worst-case expected update time into one with a high-probability worst-case update time: The query time remains the same, while the update time increases by a factor of O(log 2(n)). Thus, we achieve our results in two steps: (1) First, we show how to convert existing dynamic graph algorithms with amortized expected polylogarithmic running times into algorithms with worst-case expected polylogarithmic running times. (2) Then, we use our black-box reduction to achieve the polylogarithmic high-probability worst-case time bound. All our algorithms are Las-Vegas-type algorithms.", "venue": "ACM-SIAM Symposium on Discrete Algorithms", "year": 2018, "fieldsOfStudy": ["Computer Science", "Mathematics"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2018-10-25", "journal": {"name": "ACM Transactions on Algorithms (TALG)", "pages": "1 - 51", "volume": "17"}, "authors": [{"authorId": "2061134218", "name": "A. Bernstein"}, {"authorId": "51487176", "name": "S. Forster"}, {"authorId": "1744110", "name": "Monika Henzinger"}], "citations": [{"paperId": "159d27f6fc10e0084fb491a2ca77b99acee15c6e", "title": "Dynamic (1+\u03f5)-Approximate Matching Size in Truly Sublinear Update Time"}, {"paperId": "f1cbb99d519b0c3a705de11299929bab35d7383e", "title": "Fully Dynamic Matching: (2-\u221a2)-Approximation in Polylog Update Time"}, {"paperId": "aac8d79b81db48eacbc9eab790df65d78ebc8ccd", "title": "Near-Optimal Dynamic Rounding of Fractional Matchings in Bipartite Graphs"}, {"paperId": "28e7a0dc9b1bebbc2fd2d5268cf3e50e46828279", "title": "Dynamic Constrained Submodular Optimization with Polylogarithmic Update Time"}, {"paperId": "420f8b01e0ddd3c3f4c5620acbd71e26275786b5", "title": "The Graph Database Interface: Scaling Online Transactional and Analytical Graph Workloads to Hundreds of Thousands of Cores"}, {"paperId": "3633d4ef3b08453bef8c5b1fbc28d8e4f29679c1", "title": "Incremental $(1-\\epsilon)$-approximate dynamic matching in $O(poly(1/\\epsilon))$ update time"}, {"paperId": "8d4075482754bb76cd7b3792ef6a443db3ab9720", "title": "Dynamic $(1+\\epsilon)$-Approximate Matching Size in Truly Sublinear Update Time"}, {"paperId": "30e90fe524783fb27157ada5ad1a72111f0c6d14", "title": "Dynamic Maxflow via Dynamic Interior Point Methods"}, {"paperId": "cc8fcc29f5a29868d9b15d3a9e7ff244d243259a", "title": "Splay Top Trees"}, {"paperId": "e4a6f70b9bb02792461df454f90dcaddc1cc9093", "title": "Adaptive Out-Orientations with Applications"}, {"paperId": "9c60c54a5ab17274fd63255d4a6e5977eb3c05c7", "title": "\u00d5ptimal Vertex Fault-Tolerant Spanners in \u00d5ptimal Time: Sequential, Distributed and Parallel"}, {"paperId": "3477ac98892f4507bdc2dd80829e85e950028763", "title": "On Regularity Lemma and Barriers in Streaming and Dynamic Matching"}, {"paperId": "424f605f80124bbe058cd7e3f532ffa0afd7394b", "title": "Dynamic Algorithms for Maximum Matching Size"}, {"paperId": "fa0c5703b9229403da2f3ebdd37c80045e1eb4f1", "title": "Dynamic Matching with Better-than-2 Approximation in Polylogarithmic Update Time"}, {"paperId": "fcc36b8753a7fd93f523e4366acf2d1bab18a3ed", "title": "Simple Dynamic Spanners with Near-optimal Recourse against an Adaptive Adversary"}, {"paperId": "553464c3771b245217fafd4b7451e85a4289ba2f", "title": "Decremental Matching in General Graphs"}, {"paperId": "5dc5ff89c27bc28d402548a13656fa01eff2891e", "title": "Nearly optimal vertex fault-tolerant spanners in optimal time: sequential, distributed, and parallel"}, {"paperId": "ed0f56a3edb4a9e4498a875fdbdf7ab6a0ab67bf", "title": "Online Spanners in Metric Spaces"}, {"paperId": "c6ffb2dfa27e09206fce59d4c478561182e33354", "title": "New Trade-Offs for Fully Dynamic Matching via Hierarchical EDCS"}, {"paperId": "7a295d4a0dff5faeebf471f790b70429f4e15a63", "title": "Fast Deterministic Fully Dynamic Distance Approximation"}, {"paperId": "a1b84e85d9ff613bd3901079ec1c7c2074112061", "title": "Deterministic Dynamic Matching in Worst-Case Update Time"}, {"paperId": "c315cf8997989689fbe50fd63831f043db84115f", "title": "Maintaining an EDCS in General Graphs: Simpler, Density-Sensitive and with Worst-Case Time Bounds"}, {"paperId": "75fa781a2133d6f2aeb4039cfae118f80284b8b4", "title": "Online Euclidean Spanners"}, {"paperId": "d9533229acc44ee93939d5968bfaba99e8de1f9f", "title": "Beating the Folklore Algorithm for Dynamic Matching"}, {"paperId": "5f18188d18078930e1ff07cf9a13394875e4d3c6", "title": "A framework for dynamic matching in weighted graphs"}, {"paperId": "6309df1f1d403e12f35b722dd87cc925a1291bb1", "title": "Improved Local Computation Algorithms for Constructing Spanners"}, {"paperId": "537524e0b6d2f25be5dc62c0e7cf6b050f756531", "title": "Deterministic Rounding of Dynamic Fractional Matchings"}, {"paperId": "090d0b8589cc0e0f1a9d6311d9201b76abaf1ccb", "title": "Recent Advances in Fully Dynamic Graph Algorithms \u2013 A Quick Reference Guide"}, {"paperId": "960fe38eee72c8bbd7cbb8eab33840d3ba3ecdc8", "title": "Input-Dynamic Distributed Algorithms for Communication Networks"}, {"paperId": "3f7063208a0fa22947edae9571edc789a46d33a7", "title": "Locality-sensitive orderings and applications to reliable spanners"}, {"paperId": "7df271c54daedb8597f758eb04946a047e88af01", "title": "New Techniques and Fine-Grained Hardness for Dynamic Near-Additive Spanners"}, {"paperId": "a6a3513fd4a892271834d7fbf75093740c0fe010", "title": "Graph Spanners by Sketching in Dynamic Streams and the Simultaneous Communication Model"}, {"paperId": "cf290cba70066818524275b5a27ea35fdd483e04", "title": "Input-dynamic distributed graph algorithms for congested networks"}, {"paperId": "59dea1e15205348e56f6414c27f88ceebef3976b", "title": "The Expander Hierarchy and its Applications to Dynamic Graph Algorithms"}, {"paperId": "ba2d21b86863861efe17ab4456842cb827cd9250", "title": "Fully-Dynamic Graph Sparsifiers Against an Adaptive Adversary"}, {"paperId": "7e3704d4f39a93bb665690cfd585dee1a5f3a303", "title": "Dynamic Set Cover: Improved Amortized and Worst-Case Update Time"}, {"paperId": "9443f0235916b3686090c9be73aa1ad82deb011f", "title": "An Improved Algorithm for Dynamic Set Cover"}, {"paperId": "0bb5ea9a11d23cfbfdc8939b7fdaa015b8415beb", "title": "Dynamic Graph Algorithms with Batch Updates in the Massively Parallel Computation Model"}, {"paperId": "6d0cd472d993aa6eb7bf99b3c36244129b3a940a", "title": "An Algorithmic Study of Fully Dynamic Independent Sets for Map Labeling"}, {"paperId": "8c501330f2f748fbd7670a60483c12dce738980d", "title": "Online Spectral Approximation in Random Order Streams"}, {"paperId": "ddf2e411971b31607c5ae8dcddb72c43c9f9a0aa", "title": "Rounding dynamic matchings against an adaptive adversary"}, {"paperId": "e6d1f3a284b3b816f9b47eefd951b0372a2b56ea", "title": "Fully Dynamic Matching: Beating 2-Approximation in \u0394\u03f5 Update Time"}, {"paperId": "5cacc5133d1733ef96e052a6e51bf581cbbedae4", "title": "Upper and Lower Bounds for Fully Retroactive Graph Problems"}, {"paperId": "6fafaf5db3d708be62c73c58721863c2da7b0185", "title": "A New Deterministic Algorithm for Dynamic Set Cover"}, {"paperId": "d4176d5e8f50473c78295b6fc62d7e7827647b92", "title": "Dynamic Approximate Shortest Paths and Beyond: Subquadratic and Worst-Case Update Time"}, {"paperId": "8d0ca72be937196a5e5afc0c7a5586a04f070ccc", "title": "Dynamic Graph Algorithms and Graph Sparsification: New Techniques and Connections"}, {"paperId": "502140641ab77c45002bfed620d064253a699a9a", "title": "Fully Dynamic Maximal Independent Set with Polylogarithmic Update Time"}, {"paperId": "cc97506d3a13db212f503b03dd58e9a6f011ecae", "title": "Fully Dynamic Maximal Independent Set in Expected Poly-Log Update Time"}, {"paperId": "b2e65b025209e1d2fe3793e391d2be253f7756d1", "title": "Graph Spanners: A Tutorial Review"}, {"paperId": "3c8dc607f4b714e8b3d4b7c3461626934f3a035c", "title": "Dynamic Algorithms for the Massively Parallel Computation Model"}, {"paperId": "84571a42cdbecd27f0f06fb6ce2f33403e735cb9", "title": "Local Computation Algorithms for Spanners"}, {"paperId": "392e343a63cf6bb9be3fc810d5bd2f9e93a1934a", "title": "Dominating Sets and Connected Dominating Sets in Dynamic Graphs"}, {"paperId": "2148d411d78d5efd1ef9818d9ba2fcb4b926359e", "title": "Dynamic low-stretch trees via dynamic low-diameter decompositions"}, {"paperId": "dcea4e9e78ff035a7125318f2d2ddb789858c421", "title": "A Generalized Matching Reconfiguration Problem"}, {"paperId": "6fb035db0d69d71a811804902bffdbef88c551e3", "title": "Incremental (1 \u2212 \u03b5 ) -Approximate Dynamic Matching in O (poly(1 /\u03b5 )) Update Time"}, {"paperId": "d9a69324902294e297c5ba366b0658cf5b17921c", "title": "High-Performance Graph Databases That Are Portable, Programmable, and Scale to Hundreds of Thousands of Cores"}, {"paperId": "48421c6a91926e8413be0594baa04cb93c5e2988", "title": "A Creativity Survey of Fully Dynamic Maximal Independent Set in Expected Poly-log Update Time"}, {"paperId": "a0ab2476a3c7463e0846d19048933623ce43e395", "title": "Reliable Spanners: Locality-Sensitive Orderings Strike Back"}, {"paperId": "12421524422ef90aea22655e598db6c341d71231", "title": "Improved LCAs for constructing spanners"}, {"paperId": "8ae9d74770d76932e0371712484996fdc61d5d61", "title": "Batch Dynamic To Worst Case Update Time 3 . 1 k-Batch Amortized Update Time Dynamic Algorithm"}, {"paperId": "404cb566fb7529645b6c52e878cbff4344483f63", "title": "Matching Theory Under Uncertainty"}, {"paperId": "f6a46d2000f1dcfd1d3b9cbce4383cb011216e54", "title": "Improving update times of dynamic matching algorithms from amortized to worst case"}, {"paperId": "b5a3e41790ddd2bbbfc843ca8d2c5d23f6972140", "title": "Fully Dynamic Sequential and Distributed Algorithms for MAX-CUT"}]}
