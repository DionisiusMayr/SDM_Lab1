{"paperId": "a6a3e1fa95ff88545f9b646d94fe76d4e0efbfe9", "publicationVenue": null, "title": "ParaLite: A Parallel Database System for Data-Intensive Workflows", "abstract": "SUMMARY To better support data-intensive work\ufb02ows which are typically built out of various independently developed executables, this paper proposes extensions to parallel database systems called User-De\ufb01ned eXe-cutables (UDX) and collective queries . UDX facilitates the description of work\ufb02ows by enabling seamless integrations of external executables into SQL statements without any e \ufb00 orts to write programs con\ufb01rming to strict speci\ufb01cations of databases. A collective query is an SQL query whose re-sults are distributed to multiple clients and then processed by them in parallel, using arbitrary UDX. It provides e \ufb03 cient parallelization of executables through the data transfer optimization algorithms that distribute query re-sults to multiple clients, taking both communication cost and computational loads into account. We implement this concept in a system called ParaLite, a parallel database system based on a popular lightweight database SQLite. Our experiments show that ParaLite has several times higher performance over Hive for typical SQL tasks and has 10x speedup compared to a commercial DBMS for executables. In addition, this paper studies a real-world text processing work\ufb02ow and builds it on top of ParaLite, Hadoop, Hive and general \ufb01les. Our experiences indicate that ParaLite outperforms other systems in both productivity and performance for the work\ufb02ow.", "venue": "IEICE Trans. Inf. Syst.", "year": 2014, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2014-05-01", "journal": {"name": "IEICE Trans. Inf. Syst.", "pages": "1211-1224", "volume": "97-D"}, "authors": [{"authorId": "2117180974", "name": "Ting Chen"}, {"authorId": "1724468", "name": "K. Taura"}], "citations": []}
