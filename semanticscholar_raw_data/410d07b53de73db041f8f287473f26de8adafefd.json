{"paperId": "410d07b53de73db041f8f287473f26de8adafefd", "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e", "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names": ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"], "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls": ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]}, "title": "On Performance Stability in LSM-based Storage Systems", "abstract": "The Log-Structured Merge-Tree (LSM-tree) has been widely adopted for use in modern NoSQL systems for its superior write performance. Despite the popularity of LSM-trees, they have been criticized for suffering from write stalls and large performance variances due to the inherent mismatch between their fast in-memory writes and slow background I/O operations. In this paper, we use a simple yet effective two-phase experimental approach to evaluate write stalls for various LSM-tree designs. We further identify and explore the design choices of LSM merge schedulers to minimize write stalls given an I/O bandwidth budget. We have conducted extensive experiments in the context of the Apache AsterixDB system and we present the results here.", "venue": "Proceedings of the VLDB Endowment", "year": 2019, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2019-06-23", "journal": {"name": "ArXiv", "volume": "abs/1906.09667"}, "authors": [{"authorId": "1591681237", "name": "Chen Luo"}, {"authorId": "1703347", "name": "M. Carey"}], "citations": [{"paperId": "a9ba7e1ce9ae6266fc1befec0b0e4c79ca9323b6", "title": "Rethink Query Optimization in HTAP Databases"}, {"paperId": "c9353a61fa3d5557d95946786b3cd2edb1352987", "title": "MirrorKV: An Efficient Key-Value Store on Hybrid Cloud Storage with Balanced Performance of Compaction and Querying"}, {"paperId": "eaa4ad703e9451e4c20ec500f7f2a85f5b7d8af1", "title": "Towards Flexibility and Robustness of LSM Trees"}, {"paperId": "eb11ed9b8208d3f8fe6e5fc9e5ede4c4ec7ac2d4", "title": "Learning to Optimize LSM-trees: Towards A Reinforcement Learning based Key-Value Store for Dynamic Workloads"}, {"paperId": "fbf9b8313691a149436603c9fee3a8757e936f88", "title": "Closing the Performance Gap between Leveling and Tiering Compaction via Bundle Compaction"}, {"paperId": "9ca5b0305a74941915fad12091fd2cc45ccb3ac4", "title": "FlashAlloc: Dedicating Flash Blocks By Objects"}, {"paperId": "0ef42563912eae17e566996115ca81be7f7c6c6b", "title": "Comparison of LSM indexing techniques for storing spatial data"}, {"paperId": "49527bc5a3bb8a097bf84e15825f654497b73206", "title": "The LSM Design Space and its Read Optimizations"}, {"paperId": "e603147e665047984b7fb0f7a82def32f80ea7eb", "title": "ShadowSync: latency long tail caused by hidden synchronization in real-time LSM-tree based stream processing systems"}, {"paperId": "b98fe6da0350833910424d35227a5ed72d16175b", "title": "Robust and scalable content-and-structure indexing"}, {"paperId": "ea3786077ebf4e1be168ac079e170429cc78a938", "title": "Spooky: Granulating LSM-Tree Compactions Correctly"}, {"paperId": "a312b4f5d864bf160a99d8a7945ec19d3a63bdce", "title": "Dissecting, Designing, and Optimizing LSM-based Data Stores"}, {"paperId": "e9043cff399478c9431392f144cffe998e9c610f", "title": "Dremel"}, {"paperId": "894c86e6608e14f133f759433a382fe262f50dbd", "title": "Reducing Write Amplification of LSM-Tree with Block-Grained Compaction"}, {"paperId": "2ce31dc6b51c6540a283106ee7e1f780fdb07fa5", "title": "Columnar Formats for Schemaless LSM-based Document Stores"}, {"paperId": "b27fa1e839da15ff0989e209c5ac1a73faac77c8", "title": "Endure: A Robust Tuning Paradigm for LSM Trees Under Workload Uncertainty"}, {"paperId": "4e77e5ec9474585aadd718f53a2e6ab27ae70af7", "title": "Elastic and Stable Compaction for LSM-tree: A FaaS-Based Approach on TerarkDB"}, {"paperId": "c41ea4266d1eca7e49eaecb4dca7d70d0720092d", "title": "Reducing Bloom Filter CPU Overhead in LSM-Trees on Modern Storage Devices"}, {"paperId": "1fc8c680d7a269b736940e49d7d26a8d38b660cb", "title": "Chucky: A Succinct Cuckoo Filter for LSM-Tree"}, {"paperId": "f579eb5d8039bf2c3ff37d7824d6dd610b063109", "title": "DynaHash: Efficient Data Rebalancing in Apache AsterixDB"}, {"paperId": "80cc9be562f54525a7c5441fb1389213f581e3fa", "title": "Performance Interference on Key-Value Stores in Multi-tenant Environments: When Block Size and Write Requests Matter"}, {"paperId": "51051993cf52b99076e71c7d3b286e3ac5f359c8", "title": "Nova-LSM: A Distributed, Component-based LSM-tree Key-value Store"}, {"paperId": "3b85664b6b3f2da0ef9a1263f25a7975fb4999b5", "title": "Real-Time LSM-Trees for HTAP Workloads"}, {"paperId": "9afe0b90893bfad95617b8eed73ae8ae6cd1fe48", "title": "Comprehensive Comparison of LSM Architectures for Spatial Data"}, {"paperId": "6e857e6740642fa4292ac36261875f21a60d844a", "title": "Uncovering Performance Interference of Multi-Tenants in Big Data Environments"}, {"paperId": "e1af0dfc4774d3af1967e38b5e18bd12db13fc6c", "title": "Adaptive Lazy Compaction with High Stability and Low Latency for Data-Intensive Systems"}, {"paperId": "07c77f851b203215e4e81b6b3dc3f1ebee508ea6", "title": "REMIX: Efficient Range Query for LSM-trees"}, {"paperId": "673331486d585cf77b6f1e408d8feefcd77d0561", "title": "Toward a Better Understanding and Evaluation of Tree Structures on Flash SSDs"}, {"paperId": "35b9bd6edab90609f6b1a6a5b6792694f583c9bd", "title": "Breaking Down Memory Walls in LSM-based Storage Systems"}, {"paperId": "61128e48db084440ab5dd0bdd5e1fddc652976c7", "title": "Rosetta: A Robust Space-Time Optimized Range Filter for Key-Value Stores"}, {"paperId": "7d704c210804afa1d9e61a9d7cb9a51b12bc352a", "title": "Breaking Down Memory Walls: Adaptive Memory Management in LSM-based Storage Systems (Extended Version)"}, {"paperId": "9e72622d4ea34f521f1bd378bde63fe4b669aa91", "title": "LUDA: Boost LSM Key Value Store Compactions with GPUs"}, {"paperId": "7e746c37f5eb477d2564bfae6364e292b69b5362", "title": "SEPH: Scalable, Efficient, and Predictable Hashing on Persistent Memory"}, {"paperId": "f61a31e2ac8e3de2415321ad63af70a6a8af1fa6", "title": "LSM-Trees Under (Memory) Pressure"}, {"paperId": "60d6a487bea13eb58044aaeb741fb9fdc8914710", "title": "DLC: A New Compaction Scheme for LSM-tree with High Stability and Low Latency"}, {"paperId": "8ebafe9c9bd06c8d6b9db21de224d7d8209738a9", "title": "MatrixKV: Reducing Write Stalls and Write Amplification in LSM-tree Based KV Stores with Matrix Container in NVM"}, {"paperId": "1d3cb6ec9add734e5b6ec9bee4681abc63d3009d", "title": "Towards \ufb02exibility and robustness of LSM trees"}]}
