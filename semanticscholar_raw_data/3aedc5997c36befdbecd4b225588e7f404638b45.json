{"paperId": "3aedc5997c36befdbecd4b225588e7f404638b45", "publicationVenue": {"id": "e02accb9-dacc-43fd-995e-92fe9a825cc4", "name": "Design, Automation and Test in Europe", "type": "conference", "alternate_names": ["Design, Automation, and Test in Europe", "DATE", "Des Autom Test Eur"], "issn": "1530-1591", "alternate_issns": ["1558-1101"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000198/all-proceedings", "alternate_urls": ["http://www.date-conference.com/"]}, "title": "LBICA: A Load Balancer for I/O Cache Architectures", "abstract": "In recent years, enterprise Solid-State Drives (SSDs) are used in the caching layer of high-performance servers to close the growing performance gap between processing units and storage subsystem. SSD-based I/O caching is typically not effective in workloads with burst accesses in which the caching layer itself becomes the performance bottleneck because of the large number of accesses. Existing I/O cache architectures mainly focus on maximizing the cache hit ratio while they neglect the average queue time of accesses. Previous studies suggested bypassing the cache when burst accesses are identified. These schemes, however, are not applicable to a general cache configuration and also result in significant performance degradation on burst accesses.In this paper, we propose a novel I/O cache load balancing scheme (LBICA) with adaptive write policy management to prevent the I/O cache from becoming performance bottleneck in burst accesses. Our proposal, unlike previous schemes, which disable the I/O cache or bypass the requests into the disk subsystem in burst accesses, selectively reduces the number of waiting accesses in the SSD queue and balances the load between the I/O cache and the disk subsystem while providing the maximum performance. The proposed scheme characterizes the workload based on the type of in-queue requests and assigns an effective cache write policy. We aim to bypass the accesses which 1) are served faster by the disk subsystem or 2) cannot be merged with other accesses in the I/O cache queue. Doing so, the selected requests are responded by the disk layer, preventing from overloading the I/O cache. Our evaluations on a physical system shows that LBICA reduces the load on the I/O cache by 48% and improves the performance of burst workloads by 30% compared to the latest state-of-the-art load balancing scheme.", "venue": "Design, Automation and Test in Europe", "year": 2018, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2018-12-05", "journal": {"name": "2019 Design, Automation & Test in Europe Conference & Exhibition (DATE)", "pages": "1196-1201"}, "authors": [{"authorId": "40914288", "name": "Saba Ahmadian"}, {"authorId": "2894539", "name": "Reza Salkhordeh"}, {"authorId": "144394335", "name": "H. Asadi"}], "citations": [{"paperId": "d0bc08c0be1170ae1c72dd4be3cdd6a3171c59d9", "title": "MATRYOSHKA: Non-Exclusive Memory Tiering via Transactional Page Migration"}, {"paperId": "a99aba1d1a6657860417a312def18f3587c8113e", "title": "Re-architecting I/O Caches for Emerging Fast Storage Devices"}, {"paperId": "e0519862ce464c26471688405a9dad949e121a2d", "title": "PASCAL: A Learning-aided Cooperative Bandwidth Control Policy for Hierarchical Storage Systems"}, {"paperId": "7e8afb085395fd7e00630eba2a427c79154768d6", "title": "L-QoCo: learning to optimize cache capacity overloading in storage systems"}, {"paperId": "0f691ae807f8e3d987af3d328ca0e1be3f328f24", "title": "Exploration and Exploitation for Buffer-Controlled HDD-Writes for SSD-HDD Hybrid Storage Server"}, {"paperId": "275fd6a0f7b37a00947506c66849acac3d673f75", "title": "ETICA: Efficient Two-Level I/O Caching Architecture for Virtualized Platforms"}, {"paperId": "6b8b39aaf8297756fc755064437db212e6a7d467", "title": "Evaluating Reliability of SSD-Based I/O Caches in Enterprise Storage Systems"}, {"paperId": "0167c7ac9c6f87013b460e44093bc2cd9f9c945f", "title": "The Storage Hierarchy is Not a Hierarchy: Optimizing Caching on Modern Storage Devices with Orthus"}]}
