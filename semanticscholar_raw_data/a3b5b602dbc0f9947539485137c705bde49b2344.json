{"paperId": "a3b5b602dbc0f9947539485137c705bde49b2344", "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "title": "Don't Give Up on Large Optimization Problems; POP Them!", "abstract": "Resource allocation problems in many computer systems can be formulated as mathematical optimization problems. However, finding exact solutions to these problems using off-the-shelf solvers in an online setting is often intractable for\"hyper-scale\"system sizes with tight SLAs, leading system designers to rely on cheap, heuristic algorithms. In this work, we explore an alternative approach that reuses the original optimization problem formulation. By splitting the original problem into smaller, more tractable problems for subsets of the system and then coalescing resulting sub-allocations into a global solution, we achieve empirically quasi-optimal (within 1.5%) performance for multiple domains with several orders-of-magnitude improvement in runtime. Deciding how to split a large problem into smaller sub-problems, and how to coalesce split allocations into a unified allocation, needs to be performed carefully in a domain-aware way. We show common principles for splitting problems effectively across a variety of tasks, including cluster scheduling, traffic engineering, and load balancing.", "venue": "arXiv.org", "year": 2021, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle"], "publicationDate": "2021-04-13", "journal": {"name": "ArXiv", "volume": "abs/2104.06513"}, "authors": [{"authorId": "22252150", "name": "D. Narayanan"}, {"authorId": "3419172", "name": "Fiodar Kazhamiaka"}, {"authorId": "3094357", "name": "Firas Abuzaid"}, {"authorId": "2068930056", "name": "Peter Kraft"}, {"authorId": "143834867", "name": "M. Zaharia"}], "citations": [{"paperId": "507c58bc03d129f2c72c38049ed8ecd49ca88115", "title": "Allocation of fungible resources via a fast, scalable price discovery method"}]}
