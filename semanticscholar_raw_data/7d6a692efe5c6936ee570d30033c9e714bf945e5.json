{"paperId": "7d6a692efe5c6936ee570d30033c9e714bf945e5", "publicationVenue": {"id": "e6904c24-9546-4135-8344-e3999e375558", "name": "Network and Distributed System Security Symposium", "type": "conference", "alternate_names": ["Netw Distrib Syst Secur Symp", "NDSS"], "url": "http://www.isoc.org/"}, "title": "Copy-on-Flip: Hardening ECC Memory Against Rowhammer Attacks", "abstract": "\u2014Despite nearly decade-long mitigation efforts in academia and industry, the community is yet to \ufb01nd a practical solution to the Rowhammer vulnerability. Comprehensive software mitigations require complex changes to commodity systems, yielding signi\ufb01cant run-time overhead and deterring practical adoption. Hardware mitigations, on the other hand, have generally grown more robust and ef\ufb01cient, but are dif\ufb01cult to deploy on commodity systems. Until recently, ECC memory implemented by the memory controller on server platforms seemed to provide the best of both worlds: use hardware features already on commodity systems to ef\ufb01ciently turn Rowhammer into a denial-of-service attack vector. Unfortunately, researchers have recently shown that attackers can perform one-bit-at-a-time memory templating and mount ECC-aware Rowhammer attacks. In this paper, we reconsider ECC memory as an avenue for Rowhammer mitigations and show that not all hope is lost. In particular, we show that it is feasible to devise a software-based design to both ef\ufb01ciently and effectively harden commodity ECC memory against ECC-aware Rowhammer attacks. To support this claim, we present Copy-on-Flip (CoF), an ECC-based software mitigation which uses a combination of memory migration and of\ufb02ining to stop Rowhammer attacks on commodity server systems in a practical way. The key idea is to let the operating system interpose on all the error correction events and of\ufb02ine the vulnerable victim page as soon as the attacker has successfully templated a suf\ufb01cient number of bit \ufb02ips\u2014 while transparently migrating the victim data to a new page. We present a CoF prototype on Linux, where we also show it is feasible to operate simple memory management changes to support migration for the relevant user and kernel memory pages. Our evaluation shows CoF incurs low performance and memory overhead, while signi\ufb01cantly reducing the Rowhammer", "venue": "Network and Distributed System Security Symposium", "year": 2023, "fieldsOfStudy": ["Computer Science"], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"name": "Proceedings 2023 Network and Distributed System Security Symposium"}, "authors": [{"authorId": "122723017", "name": "Andrea Di Dio"}, {"authorId": "3432110", "name": "Koen Koning"}, {"authorId": "144783720", "name": "H. Bos"}, {"authorId": "1744275", "name": "Cristiano Giuffrida"}], "citations": [{"paperId": "6ba01138fcabdc9df56e8a69588a82fd91480a63", "title": "Spatial Variation-Aware Read Disturbance Defenses: Experimental Analysis of Real DRAM Chips and Implications on Future Solutions"}, {"paperId": "763488734b9b5f6f475838c43746cf16f3fe5b0a", "title": "Rethinking the Producer-Consumer Relationship in Modern DRAM-Based Systems"}, {"paperId": "ba25f77e417be575b0c41a400b116b82416df73c", "title": "Rowhammer Attacks in Dynamic Random-Access Memory and Defense Methods"}, {"paperId": "ee68d4752c2763650a68d65564ae9eca1b6ba266", "title": "Understanding Read Disturbance in High Bandwidth Memory: An Experimental Analysis of Real HBM2 DRAM Chips"}, {"paperId": "5c6d39653cbaed5be4a53bb8e3691c2076d29aeb", "title": "Exploring the Horizon: A Comprehensive Survey of Rowhammer"}, {"paperId": "0c7607f8da3936420c778a6418e2ea5d89f7775c", "title": "DRAM Bender: An Extensible and Versatile FPGA-Based Infrastructure to Easily Test State-of-the-Art DRAM Chips"}]}
